{"version":3,"sources":["axios.js","config.js","context/Context.js","socket.js","App.js","reportWebVitals.js","comonents/ErrorModal/index.js","comonents/LoginModal/index.js","routes/LoginPage/index.js","comonents/Icons/Arrow-left.js","comonents/TitleBar/index.js","routes/RolePage/index.js","routes/HashCalculationPage/index.js","routes/ScenarioPage/index.js","comonents/PasscodeModal/index.js","routes/GameSettingPage/index.js","comonents/Buttons/index.js","routes/NodeHomePage/index.js","comonents/PieChat/index.js","comonents/Table/index.js","comonents/Timer/index.js","routes/NodeDashboardPage/index.js","comonents/CustomerDemands/index.js","routes/DataUploadPage/index.js","routes/BlockDataPage/index.js","routes/ChainedBlockDetailPage/index.js","routes/MinerDashboardPage/index.js","comonents/BlockItem/index.js","routes/AllBlockPage/index.js","comonents/PointsMessageModal/index.js","routes/HashBoardWaitingPage/index.js","routes/VerificationPage/index.js","comonents/ChartBarModal/index.js","routes/PointPage/index.js","routes/HelpPage/index.js","routes/MinerHomePage/index.js","routes/CalculateHashPage/index.js","index.js"],"names":["instance","axios","create","timeout","interceptors","request","use","config","token","Cookies","get","headers","Authorization","EXPRESS_SERVER_URL","Context","React","createContext","socket","io","App","useState","userToken","setLogin","refreshTokenTimerID","setRefreshTokenTimerID","userType","setUserType","userInfo","setUserInfo","historyLength","setHistoryLength","privateID","setPrivateID","sessionID","setSessionID","passcode","setPasscode","tiemrSeconds","setTimerSeconds","timerid","setTimerId","timerStart","setTimerStart","blockDetail","setBlockDetail","sessionInfo","setSessionInfo","gameOver","setGameOver","navigate","useNavigate","useEffect","set","window","location","pathname","clearInterval","timerSetStart","setInterval","pre","checkLoginStatus","a","method","result","data","json","status","expires","socketio","emit","id","type","sid","timer","className","src","alt","width","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorModal","props","errorTitleMSG","errorMSG","showErrorModal","setShowErrorModal","Modal","show","onHide","centered","Header","Title","Body","Footer","Button","variant","onClick","LoginModal","teacherId","setTeacherId","teacherPWD","setTeacherPWD","setErrorMSG","showLoginModal","setShowLoginModal","useContext","checkHaveData","str","checkHaveSpace","trim","length","e","preventDefault","tid","replace","pw","result2","json2","console","log","session","info","pid","err","response","error","message","backdrop","closeButton","Form","Group","controlId","Label","Control","placeholder","onChange","target","Login_teacher","LoginPage","studentId","setStudentId","passCode","setPassCode","pbid","miner_count_result","count","pvid","remove","Login_student","ArrowLeft","xmlns","height","fill","viewBox","fillRule","d","TitleBar","lastPageName","backLastPage","setBackLastPage","style","display","Role","nodeIsLock","setNodeIsLock","minerIsLock","setMinerIsLock","Row","marginRight","marginLeft","textDecoration","Card","borderRadius","backgroundColor","Text","color","HashCalculationPage","paddingTop","paddingBottom","Image","fluid","ScenarioPage","PasscodeModal","showPasscodeModal","setShowPasscodeModal","btn_color","setBtnColor","background","copy","GameSettingPage","creation","setCreation","mining","setMining","xlsx","setXlsx","modalShowPasscode","setModalShowPasscode","selectGameColor","setSelectGameColor","selectEdGame","setSelectEdGame","fileName","setFileName","uploadFileData","useRef","createGameSession","showErrorModelFunction","formData","FormData","append","resultJson","msg","name","Select","defaultValue","current","click","ref","accept","files","href","download","BtnShow","text","link","css","h","WebkitBorderRadius","r","NodeHomePage","marginTop","class","w","c","PieChat","PieChart","Pie","dataKey","nameKey","isAnimationActive","cx","cy","outerRadius","Tooltip","Tables","t_type","table_type","ths","head","tds","body","dateF","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","read_th","map","item","Detail_btn","read_tds","rank","key","points","td1","td2","td3","td4","ad","nonce","hash","votes","correct","total","bid","cd","padding","isChained","Timer","min","setMin","sec","setSec","overTime","setOverTime","Math","floor","NodeDashboardPage","setResponse","allowCreateBlock","setAllowCreateBlock","minerCount","setMinerCount","getBlocks","blocks","createdBlockCount","chainedBlockCount","i","createDate","setSeconds","getSeconds","tfbc","between","getTime","getMinerCount","miner_count","game1_block_end_listener","new_people_join_listener","on","off","overflow","disabled","CustomerDemands","cid","pdid","pdq","pdn","dd","selectedBlock","setHeight","substring","dateStr","NodeUploadPage","setBlocks","setSelectedBlock","inputedPrivateID","setInputedPrivateID","container","scrollTop","publicBlock","block","BlockDataPage","ChainedBlockDetailPage","setBlock","getBlockCorrectHash","MinerDashboardPage","game1_block_update_listener","teacher_force_chained_listener","BlockItem","setBlockHashs","ph","pattern","parseInt","AllBlockPage","blockHashs","wrongIndex","setWrongIndex","getBlock","forEach","haveWrong","PointsMessageModal","showPointsMessageModalModal","sequencNo","point","HashBoardWaitingPage","setShowPointsMessageModalModal","setSequencNo","setPoint","setTotal","showPointModal","b_result","b_json","m_result","m_json","miners","title","seq","game1_votes_update_listener","VerificationPage","forceChained","ChartBarModal","datas","setDatas","miner","ResponsiveContainer","aspect","BarChart","margin","top","right","left","bottom","options","YAxis","ticks","max","CartesianGrid","strokeDasharray","XAxis","Bar","PointPage","setMiners","useLastPage","setUseLastPage","getMiners","HelpPage","MinerHome","CalculateHashPage","setNonce","setHash","setPvid","showRejectModal","setShowRejectModal","checkMinerCanMineThisBox","check_result","check_json","submitHash","checkIsMined","paddingLeft","paddingRight","for","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"+2BAIMA,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,MAIbH,EAASI,aAAaC,QAAQC,KAAI,SAAUC,GACxC,IAAMC,EAAQC,IAAQC,IAAI,SAE1B,OADAH,EAAOI,QAAQC,cAAgBJ,EACxBD,KAGIP,QCfFa,EAAqB,OCCrBC,EAAUC,IAAMC,gB,SCEhBC,EAASC,YFFW,K,OGgLlBC,MAvKf,WAAgB,IAAD,EACb,EAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsDF,mBAAS,MAA/D,mBAAOG,EAAP,KAA4BC,EAA5B,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAA0CR,mBAAS,GAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KACA,EAAkCV,mBAAS,IAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAAkCZ,mBAAS,IAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KACA,EAAgCd,mBAAS,IAAzC,mBAAOe,EAAP,KAAiBC,EAAjB,KACA,EAAwChB,mBAAS,KAAjD,mBAAOiB,EAAP,KAAqBC,EAArB,KACA,EAA8BlB,mBAAS,MAAvC,mBAAOmB,EAAP,KAAgBC,EAAhB,KACA,EAAoCpB,oBAAS,GAA7C,oBAAOqB,GAAP,MAAmBC,GAAnB,MACA,GAAsCtB,oBAAS,GAA/C,qBAAOuB,GAAP,MAAoBC,GAApB,MACA,GAAsCxB,oBAAS,GAA/C,qBAAOyB,GAAP,MAAoBC,GAApB,MACA,GAAgC1B,oBAAS,GAAzC,qBAAO2B,GAAP,MAAiBC,GAAjB,MAEMC,GAAWC,cAwGjB,OArGAC,qBAAU,WACJlB,GACFxB,IAAQ2C,IAAI,YAAanB,KAE1B,CAACA,IACJkB,qBAAU,WACJpB,GACFtB,IAAQ2C,IAAI,YAAarB,KAE1B,CAACA,IACJoB,qBAAU,WACJhB,GACF1B,IAAQ2C,IAAI,WAAYjB,KAEzB,CAACA,IACJgB,qBAAU,WACJxB,GACFlB,IAAQ2C,IAAI,WAAYzB,KAEzB,CAACA,IAEJwB,qBAAU,WACJtB,EAAgB,GAClBC,EAAiB,KAElB,CAACD,IAEJsB,qBAAU,WACRrB,EAAiBD,EAAgB,KAEhC,CAACwB,OAAOC,SAASC,WAEpBJ,qBAAU,WACR,GAAIV,GAAY,CACde,cAAcjB,GACd,IAAMkB,EAAgBC,aAAY,WAChCpB,GAAgB,SAAAqB,GAAG,OAAIA,EAAM,OAC5B,KACHnB,EAAWiB,QACFlB,GACTiB,cAAcjB,GAEhB,OAAO,WACDA,GACFiB,cAAcjB,MAIjB,CAACE,KAMJU,qBAAU,WAAM,SAuBCS,IAvBD,2EAuBd,gCAAAC,EAAA,mEAEUrD,EAAQC,IAAQC,IAAI,WACF,cAAVF,EAHlB,iEAIyBP,EAAM,GAAD,OAAIY,EAAJ,SAA+B,CAAEiD,OAAQ,QAJvE,cAIUC,EAJV,gBAKuBA,EAAOC,KAL9B,OAMwB,KADdC,EALV,QAMaC,OACP5C,EAAS,OAETb,IAAQ2C,IAAI,QAASa,EAAKzD,MAAO,CAAE2D,QHjHT,IGkH1B7C,EAASb,IAAQC,IAAI,WAV3B,kDAaIY,EAAS,MACT2B,GAAS,UAdb,2DAvBc,sBACd3B,EAASb,IAAQC,IAAI,UACrBgB,EAAYjB,IAAQC,IAAI,aACxBkB,EAAYnB,IAAQC,IAAI,aACxBsB,EAAavB,IAAQC,IAAI,cACzBwB,EAAazB,IAAQC,IAAI,cACzB0B,EAAY3B,IAAQC,IAAI,aACxBoB,EAAiB,GACbrB,IAAQC,IAAI,cAAgBD,IAAQC,IAAI,UAAYD,IAAQC,IAAI,cAClE0D,EAASC,KAAK,iBAAkB,CAAEC,GAAI7D,IAAQC,IAAI,YAAa6D,KAAM9D,IAAQC,IAAI,YAAa8D,IAAK/D,IAAQC,IAAI,eAC/G0D,EAASC,KAAK,aAAc5D,IAAQC,IAAI,eAErCD,IAAQC,IAAI,UAAqC,cAAzBD,IAAQC,IAAI,UAAqD,OAAzBD,IAAQC,IAAI,SAE1C,YAA5BD,IAAQC,IAAI,YACjBD,IAAQC,IAAI,aACduC,GAAS,aAETA,GAAS,gBAE0B,YAA5BxC,IAAQC,IAAI,aACrBuC,GAAS,aARTA,GAAS,UA2BXW,IACA,IAAMa,EAAQf,YAAYE,EAAkB,KAE5C,OADApC,EAAuBiD,GAChB,kBAAMjB,cAAcjC,MAE1B,IAGD,sBAAKmD,UAAU,OAAf,UAEE,qBAAKA,UAAU,gBAAf,SAA+B,sBAAKA,UAAU,cAAf,UAC7B,qBAAKA,UAAU,YAAYC,IAAI,mBAAmBC,IAAI,GAAGC,MAAO,SAChE,qBAAKH,UAAU,wBAAwBC,IAAI,iBAAiBC,IAAI,GAAGC,MAAO,eAE5E,qBAAKH,UAAU,OAAf,SACE,cAAC5D,EAAQgE,SAAT,CAAkBC,OAAK,GACrBjD,iBAAkBA,EAClBD,cAAeA,EACfP,SAAUA,EACVI,YAAaA,EACbL,UAAWA,EACXI,SAAUA,EACVG,YAAaA,EACbD,SAAUA,EACVK,aAAcA,EAEdD,aAXqB,0BAWVA,GAXU,6BAYPG,GAZO,0BAaVD,GAbU,yBAcXE,GAdW,4BAeRC,GAfQ,uBAgBbgC,GAhBa,gCAiBJ9B,GAjBI,6BAkBPD,GAlBO,8BAmBNK,IAnBM,4BAoBRC,IApBQ,+BAqBLC,IArBK,4BAsBRC,IAtBQ,+BAuBLC,IAvBK,yBAwBXC,IAxBW,4BAyBRC,IAzBQ,GAAvB,SA2BE,cAAC,IAAD,QAIJ,qBAAK0B,UAAU,iBAAf,SAAgC,qBAAKA,UAAU,cAAf,SAA6B,qBAAKA,UAAU,YAAYE,IAAI,GAAGD,IAAI,qBAAqBE,MAAO,iBC7JtHG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2CCHC,SAASQ,EAAWC,GAE/B,IAAMC,EAAgED,EAAhEC,cAAeC,EAAiDF,EAAjDE,SAAUC,EAAuCH,EAAvCG,eAAgBC,EAAuBJ,EAAvBI,kBAE/C,OACI,eAACC,EAAA,EAAD,CACIC,KAAMH,EACNI,OAAQ,kBAAMH,GAAkB,IAChC,kBAAgB,+BAChBI,UAAQ,EACRxB,UAAU,wBALd,UAMI,cAACqB,EAAA,EAAMI,OAAP,CAAczB,UAAU,qBAAxB,SACI,cAACqB,EAAA,EAAMK,MAAP,UAAcT,MAGlB,cAACI,EAAA,EAAMM,KAAP,CAAY3B,UAAU,qBAAtB,SACKkB,IAGL,cAACG,EAAA,EAAMO,OAAP,CAAc5B,UAAU,qBAAxB,SACI,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMX,GAAkB,IAAQpB,UAAU,2BAA/E,wBCZD,SAASgC,EAAWhB,GAC/B,MAAkCtE,mBAAS,IAA3C,mBAAOuF,EAAP,KAAkBC,EAAlB,KACA,EAAoCxF,mBAAS,IAA7C,mBAAOyF,EAAP,KAAmBC,EAAnB,KAEM7D,EAAWC,cACjB,EAA4C9B,oBAAS,GAArD,mBAAOyE,EAAP,KAAuBC,EAAvB,KACA,EAAgC1E,mBAAS,IAAzC,mBAAOwE,EAAP,KAAiBmB,EAAjB,KACMC,EAA0EtB,EAA1EsB,eAAgBC,EAA0DvB,EAA1DuB,kBAAmB3F,EAAuCoE,EAAvCpE,SAAUI,EAA6BgE,EAA7BhE,YAAaE,EAAgB8D,EAAhB9D,YAChE,EAAoDsF,qBAAWpG,GAAvDkB,EAAR,EAAQA,aAAcI,EAAtB,EAAsBA,YAAaF,EAAnC,EAAmCA,aAEnC,SAASiF,EAAcC,GACnB,GAAY,KAARA,EAAY,OAAO,EAG3B,SAASC,EAAeD,GACpB,GAA0B,IAAtBA,EAAIE,OAAOC,OAAc,OAAO,EAfF,4CAkBtC,WAA6BC,GAA7B,qBAAA3D,EAAA,0DAEQsD,EAAcR,KAAcQ,EAAcN,GAFlD,uBAGQE,EAAY,8CACZE,GAAkB,GAClBnB,GAAkB,GAL1B,8BASQuB,EAAeV,KAAcU,EAAeR,GATpD,wBAUQE,EAAY,2BACZE,GAAkB,GAClBnB,GAAkB,GAZ1B,4CAiBQ0B,EAAEC,iBAjBV,UAkB6BxH,EAAM,GAAD,OAAIY,EAAJ,iBAAuC,CAC7DiD,OAAQ,OACRnD,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBqD,KAAM,CAAE0D,IAAKf,EAAUgB,QAAQ,OAAQ,IAAKC,GAAIf,EAAWc,QAAQ,OAAQ,OAxBvF,eAkBc5D,EAlBd,iBA0B2BA,EAAOC,KA1BlC,WA2B4B,KADdC,EA1Bd,QA2BiBC,OA3BjB,wBA4BY5C,EAAS2C,EAAKzD,OACdkB,EAAY,WACZE,EAAY+E,EAAUgB,QAAQ,OAAQ,KACtClH,IAAQ2C,IAAI,QAASa,EAAKzD,MAAO,CAAE2D,QN3Df,IM4DpB1D,IAAQ2C,IAAI,WAAY,WACxBgB,EAASC,KAAK,iBAAkB,CAAEC,GAAI7D,IAAQC,IAAI,YAAa6D,KAAM9D,IAAQC,IAAI,cAjC7F,UAmCkCT,EAAM,GAAD,OAAIY,EAAJ,sBAA4C,CAAEiD,OAAQ,QAnC7F,eAmCkB+D,EAnClB,iBAoCgCA,EAAQ7D,KApCxC,QAoCkB8D,EApClB,OAqCYC,QAAQC,IAAIF,GACS,IAAjBA,EAAM5D,OACF4D,EAAMG,SAAWH,EAAMG,QAAQC,MAAQJ,EAAMG,QAAQC,KAAK1D,KAC1DxC,EAAa8F,EAAMG,QAAQC,KAAKC,KAChC/F,EAAY0F,EAAMG,QAAQC,KAAK/F,UAC/BD,EAAa4F,EAAMG,QAAQC,KAAK1D,KAChCvB,EAAS,mBAETA,EAAS,iBAGb8D,EAAYe,EAAMM,KAClBnB,GAAkB,GAClBnB,GAAkB,IAlDlC,wBAqD6B,iCAAb7B,EAAKmE,KACLrB,EAAY,iCACZE,GAAkB,GAClBnB,GAAkB,KAElBiB,EAAY9C,EAAKmE,KACjBtC,GAAkB,IA3DlC,2DA+DQiB,EAAY,KAAIsB,SAAW,KAAIA,SAASrE,KAAKsE,MAAQ,KAAIC,SACzDtB,GAAkB,GAClBnB,GAAkB,GAjE1B,4DAlBsC,sBAuFtC,OACI,iCACI,eAACC,EAAA,EAAD,CACIC,KAAMgB,EACNf,OAAQ,kBAAMgB,GAAkB,IAChC,kBAAgB,+BAChBuB,SAAS,SACTtC,UAAQ,EALZ,UAMI,cAACH,EAAA,EAAMI,OAAP,CAAcsC,aAAW,IAEzB,cAAC1C,EAAA,EAAMM,KAAP,UACI,cAACqC,EAAA,EAAD,CAAMhE,UAAU,iBAAhB,SACI,sBAAKA,UAAU,gBAAf,UACI,eAACgE,EAAA,EAAKC,MAAN,CAAYjE,UAAU,OAAOkE,UAAU,YAAvC,UACI,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CAAcvE,KAAK,YAAYwE,YAAY,aAAaC,SAAU,SAAAxB,GAAC,OAAIZ,EAAaY,EAAEyB,OAAOlE,aAEjG,eAAC2D,EAAA,EAAKC,MAAN,CAAYjE,UAAU,OAAOkE,UAAU,aAAvC,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcvE,KAAK,aAAawE,YAAY,mBAAmBC,SAAU,SAAAxB,GAAC,OAAIV,EAAcU,EAAEyB,OAAOlE,oBAKrH,cAACgB,EAAA,EAAMO,OAAP,UACI,qBAAK5B,UAAU,8BAAf,SACI,uBAAOA,UAAU,8BAA8BH,KAAK,SAASQ,MAAM,QAAQ0B,QAAS,SAAAe,GAAC,OAjHnE,2CAiHuE0B,CAAc1B,aAKnH,cAAC,EAAD,CAAY3B,eAAgBA,EAAgBC,kBAAmBA,EAAmBH,cAAc,cAAcC,SAAUA,O,OCtHrH,SAASuD,EAAUzD,GAE9B,MAA4CtE,oBAAS,GAArD,mBAAO4F,EAAP,KAAuBC,EAAvB,KAEA,EAA4C7F,oBAAS,GAArD,mBAAOyE,EAAP,KAAuBC,EAAvB,KACA,EAAgC1E,mBAAS,IAAzC,mBAAOwE,EAAP,KAAiBmB,EAAjB,KACA,EAAkC3F,mBAAS,IAA3C,mBAAOgI,EAAP,KAAkBC,EAAlB,KACA,EAAgCjI,mBAAS,IAAzC,mBAAOkI,EAAP,KAAiBC,EAAjB,KAEA,EAA6HrC,qBAAWpG,GAAhIsB,EAAR,EAAQA,YAAaN,EAArB,EAAqBA,iBAAkBR,EAAvC,EAAuCA,SAAUI,EAAjD,EAAiDA,YAAaE,EAA9D,EAA8DA,YAAaI,EAA3E,EAA2EA,aAAcE,EAAzF,EAAyFA,aAAcD,EAAvG,EAAuGA,UAAWhB,EAAlH,EAAkHA,OAE5GgC,EAAWC,cAEjB,SAASiE,EAAcC,GACnB,GAAY,KAARA,EAAY,OAAO,EAG3B,SAASC,EAAeD,GACpB,GAA0B,IAAtBA,EAAIE,OAAOC,OAAc,OAAO,EAlBH,4CAmCrC,WAA6BC,GAA7B,uBAAA3D,EAAA,0DAEQsD,EAAciC,KAAcjC,EAAcmC,GAFlD,uBAGQvC,EAAY,8CACZjB,GAAkB,GAJ1B,8BAQQuB,EAAe+B,KAAc/B,EAAeiC,GARpD,uBASQvC,EAAY,2BACZjB,GAAkB,GAV1B,0CAeQ0B,EAAEC,iBAfV,UAgB6BxH,EAAM,GAAD,OAAIY,EAAJ,iBAAuC,CAC7DiD,OAAQ,OACRnD,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBqD,KAAM,CAAEwF,KAAMJ,EAAUzB,QAAQ,OAAQ,IAAKxF,SAAUmH,EAAS3B,QAAQ,OAAQ,OAtB5F,eAgBc5D,EAhBd,iBAwB2BA,EAAOC,KAxBlC,WAyB4B,KADdC,EAxBd,QAyBiBC,OAzBjB,wBA0BYzD,IAAQ2C,IAAI,QAASa,EAAKzD,MAAO,CAAE2D,QPvEf,IO6ChC,UA2B6ClE,EAAM,GAAD,OAAIY,EAAJ,0BAAwCoD,EAAKO,IAA7C,iBAAiE,CAAEV,OAAQ,QA3B7H,eA2BkB2F,EA3BlB,iBA4B2CA,EAAmBzF,KA5B9D,oBA6BiC0F,OPxEN,IO2C3B,wBA8BgBpI,EAAS2C,EAAKzD,OACdkB,EAAY,WACZE,EAAYwH,EAAUzB,QAAQ,OAAQ,KACtClH,IAAQ2C,IAAI,QAASa,EAAKzD,MAAO,CAAE2D,QP9EnB,IO+EhB1D,IAAQ2C,IAAI,WAAY,WAlCxC,UAmCsCnD,EAAM,GAAD,OAAIY,EAAJ,yBAA+C,CACtEiD,OAAQ,OACRnD,QAAS,CACL,OAAU,mBACV,eAAgB,sBAvCxC,eAmCsBkH,EAnCtB,iBA0CoCA,EAAQ7D,KA1C5C,QA2CqC,KADf8D,EA1CtB,QA2C0B5D,SACNlC,EAAa8F,EAAM6B,MACnBzH,EAAa4F,EAAMtD,KACnBpC,EAAYkH,EAAS3B,QAAQ,OAAQ,KACrC1G,EAAOoD,KAAK,iBAAkB,CAAEG,IAAKsD,EAAMtD,IAAKF,GAAI8E,EAAUzB,QAAQ,OAAQ,IAAKpD,KAAM,YACzFtD,EAAOoD,KAAK,aAAcyD,EAAMtD,KAChCvB,EAAS,cAjD7B,wBAoDgBxC,IAAQmJ,OAAO,SACf7C,EAAY,oCACZjB,GAAkB,GAtDlC,gCAyD6B,iCAAb7B,EAAKmE,KACLrB,EAAY,iCACZjB,GAAkB,KAElBiB,EAAY9C,EAAKmE,KACjBtC,GAAkB,IA9DlC,0DAkEQiB,EAAY,KAAIsB,SAAW,KAAIA,SAASrE,KAAKsE,MAAQ,KAAIC,SACzDzC,GAAkB,GAnE1B,2DAnCqC,sBA0GrC,OArFA3C,qBAAU,WACN1C,IAAQmJ,OAAO,SACfnJ,IAAQmJ,OAAO,YACfnJ,IAAQmJ,OAAO,aACf9H,EAAiB,GACjBR,EAAS,MACTI,EAAY,MACRT,IACAA,EAAOoD,KAAK,eAAgBpC,GAC5BhB,EAAOoD,KAAK,aAAcpC,MAG/B,IA0EC,sBAAKyC,UAAU,gBAAf,UACI,gCACI,qBAAKC,IAAI,mBAAmBD,UAAU,YAAYE,IAAI,GAAGC,MAAO,SAChE,sBAAKH,UAAU,aAAf,UACI,qBAAKA,UAAU,oBAAf,wBACA,qBAAKA,UAAU,gBAAf,kEAIR,uBAEA,cAACgE,EAAA,EAAD,CAAMhE,UAAU,YAAhB,SACI,sBAAKA,UAAU,gBAAf,UACI,eAACgE,EAAA,EAAKC,MAAN,CAAYjE,UAAU,OAAOkE,UAAU,YAAvC,UACI,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CAAcvE,KAAK,YAAYwE,YAAY,aAAaC,SAAU,SAAAxB,GAAC,OAAI6B,EAAa7B,EAAEyB,OAAOlE,aAEjG,eAAC2D,EAAA,EAAKC,MAAN,CAAYjE,UAAU,OAAOkE,UAAU,WAAWI,SAAU,SAAAxB,GAAC,OAAI+B,EAAY/B,EAAEyB,OAAOlE,QAAtF,UACI,cAAC2D,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcvE,KAAK,WAAWwE,YAAY,qBAKtD,qBAAKrE,UAAU,aAAf,SACI,uBAAOA,UAAU,aAAaH,KAAK,SAASQ,MAAM,UAAU0B,QAAS,SAAAe,GAAC,OApI7C,2CAoIiDqC,CAAcrC,QAE5F,uBACA,qBAAK9C,UAAU,mBAAf,SACI,uBAAOA,UAAU,mBAAmBH,KAAK,SAASQ,MAAM,gBAAgB0B,QAAS,kBAAMQ,GAAkB,QAE7G,uBAEA,cAAC,EAAD,CAAYD,eAAgBA,EAAgBC,kBAAmBA,EAAmB3F,SAAUA,EAAUI,YAAaA,EAAaE,YAAaA,IAC7I,cAAC,EAAD,CAAYiE,eAAgBA,EAAgBC,kBAAmBA,EAAmBH,cAAc,cAAcC,SAAUA,O,6BCvJrH,SAASkE,IACpB,OAEI,qBAAKC,MAAM,6BAA6BlF,MAAM,KAAKmF,OAAO,KAAKC,KAAK,eAAevF,UAAU,mBAAmBwF,QAAQ,YAAxH,SACI,sBAAMC,SAAS,UAAUC,EAAE,oJ,OCCxB,SAASC,EAAS3E,GAC7B,IAAM4E,EAAiB5E,EAAjB4E,aACN,EAA6CpD,qBAAWpG,GACxD,GADA,EAAQgB,iBAAR,EAA0BD,cACeT,mBAAS,SAAlD,mBAAQmJ,EAAR,KAAsBC,EAAtB,KACMvH,EAAWC,cAoBjB,OAlBAC,qBAAU,WACc,IAAhBmH,GACAE,EAAgB,MAErB,IAeC,sBAAK9F,UAAU,eAAf,UACI,qBAAKA,UAAU,OAAf,SACI,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,OAAOiE,MAAO,CAAEC,QAASH,GAAgB9D,QAfrE,WAEIxD,EADe,IAAMqH,IAcb,SAAwE,4BAAG,cAACR,EAAD,UAE/E,mBAAGpF,UAAU,sCAAb,6BACA,qBAAKA,UAAU,YC9BZ,SAASiG,EAAKjF,GACzB,MAAoCtE,mBAAS,SAA7C,mBAAOwJ,EAAP,KAAmBC,EAAnB,KACA,EAAsCzJ,mBAAS,SAA/C,mBAAO0J,EAAP,KAAoBC,EAApB,KAEQtJ,EAAayF,qBAAWpG,GAAxBW,SAEFwB,EAAWC,cAuBjB,OArBAC,qBAAU,WACW,YAAb1B,EACAsJ,EAAe,QACK,YAAbtJ,GACPoJ,EAAc,UAGnB,IAeC,gCAEI,cAAC,EAAD,CAAUN,aAAa,GAAGD,aAAa,KACvC,qBAAK5F,UAAU,yBAAf,SACI,mBAAGA,UAAU,KAAb,gCAEJ,qBAAKA,UAAU,QAAf,SAEI,eAACsG,EAAA,EAAD,WACI,qBAAKP,MAAO,CAAE5F,MAAO,MAAOmF,OAAQ,MAAOiB,YAAa,OAAQC,WAAY,SAAUC,eAAgB,QAAU5G,KAAK,SAASkC,QAAS,SAAAe,GArBlI,YAAb/F,GACAwB,EAAS,cAoBD,SACI,cAACmI,EAAA,EAAD,CAAMX,MAAO,CAAE5F,MAAO,OAAQmF,OAAQ,OAAQqB,aAAc,OAAQC,gBAAiBV,GAArF,SACI,cAACQ,EAAA,EAAK/E,KAAN,CAAW3B,UAAU,YAArB,SAEI,cAAC0G,EAAA,EAAKG,KAAN,CAAW7G,UAAU,qCAAqC+F,MAAO,CAAEe,MAAO,SAA1E,wBAOZ,qBAAKf,MAAO,CAAE5F,MAAO,MAAOmF,OAAQ,MAAOiB,YAAa,OAAQC,WAAY,SAAUC,eAAgB,QAAU5G,KAAK,SAASkC,QAAS,SAAAe,GA1BlI,YAAb/F,GACAwB,EAAS,eAyBD,SACI,cAACmI,EAAA,EAAD,CAAMX,MAAO,CACT5F,MAAO,OAAQmF,OAAQ,OAAQqB,aAAc,OAAQC,gBAAiBR,GAD1E,SAGI,cAACM,EAAA,EAAK/E,KAAN,CAAW3B,UAAU,YAArB,SAEI,cAAC0G,EAAA,EAAKG,KAAN,CAAW7G,UAAU,qCAAqC+F,MAAO,CAAEe,MAAO,SAA1E,iC,oBCzDjB,SAASC,IACpB,IAAMxI,EAAWC,cAMjB,OACI,gCACI,cAAC,EAAD,CAAUqH,aAAa,GAAGD,aAAa,KAEvC,qBAAK5F,UAAU,cAAf,SACI,mBAAGA,UAAU,KAAK+F,MAAO,CAAEe,MAAO,UAAWE,WAAY,OAAQC,cAAe,QAAhF,6CAGJ,qBAAKjH,UAAU,cAAf,SAEI,sBAAKA,UAAU,mBAAf,UACI,4BAAG,iEAEH,uGAC0E,uBAAM,uBADhF,gHAEiH,uBAC7G,uBAHJ,+GAIgH,uBAJhH,+CAKgD,uBALhD,8CAM+C,uBAN/C,oCAOqC,uBAPrC,gDAQiD,uBARjD,gEASiE,uBAC7D,0BAGJ,cAACkH,EAAA,EAAD,CAAOjH,IAAI,uBAAuBkH,OAAK,SAK/C,qBAAKnH,UAAU,WAAf,SACI,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,OAAOiE,MAAO,CAAE5F,MAAO,OAAQ2G,MAAO,SAAW/E,QAAS,SAAAe,GAnClFvE,EAAS,UAmCD,wB,OCvCD,SAAS6I,IACpB,IAAM7I,EAAWC,cAMjB,OACI,iCACI,cAAC,EAAD,CAAUqH,aAAa,GAAGD,aAAa,KACvC,uBACA,qBAAK5F,UAAU,qBAAf,4BACA,uBAEA,qBAAKA,UAAU,uBAAf,SAEI,sBAAKA,UAAU,wBAAf,UACI,8BAAG,kEAAoC,uBAAM,0BAA7C,6BAEA,8ZACiY,uBAC7X,uBAFJ,ydAII,uBAAM,uBAJV,0CAOA,+BACI,4JAAyH,uBACzH,qIAEJ,cAACkH,EAAA,EAAD,CAAOjH,IAAI,yBAAyBkH,OAAK,SAKjD,uBAEA,qBAAKnH,UAAU,wBAAf,SACI,uBAAOA,UAAU,wBAAwBH,KAAK,SAASQ,MAAM,OAAO0B,QAAS,SAAAe,GAlCrFvE,EAAS,yBAqCL,0B,4BCxCG,SAAS8I,EAAcrG,GAClC,IAAMsG,EAAsDtG,EAAtDsG,kBAAmBC,EAAmCvG,EAAnCuG,qBAAsB9J,EAAauD,EAAbvD,SAC/C,EAA+Bf,mBAAS,WAAxC,mBAAO8K,EAAP,KAAiBC,EAAjB,KACMlJ,EAAWC,cAOjB,OACI,cAAC6C,EAAA,EAAD,CACIC,KAAMgG,EACN/F,OAAQ,kBAAMgG,GAAqB,IACnC,kBAAgB,+BAChBzD,SAAS,SACTtC,UAAQ,EALZ,SAMI,cAACH,EAAA,EAAMM,KAAP,UACI,sBAAK3B,UAAU,qBAAf,UACI,qBAAKA,UAAU,sBAAf,+BACA,sBAAKA,UAAU,4BAAf,UACI,8BAAMvC,IACN,qBAAKuC,UAAU,yBAAf,SACI,uBAAOA,UAAU,yBAAyB+F,MAAO,CAAC2B,WAAWF,GAAY3H,KAAK,SAASQ,MAAM,OAAO0B,QAlBvG,WACjB0F,EAAY,WACZE,IAAKlK,WAoBO,qBAAKuC,UAAU,6BAAf,SACI,uBAAOA,UAAU,6BAA6BH,KAAK,SAASQ,MAAM,WAAW0B,QAAS,kBAAMxD,EAAS,yB,OCxB9G,SAASqJ,IACpB,MAAkDlL,oBAAS,GAA3D,mBAAO4K,EAAP,KAA0BC,EAA1B,KACA,EAA4C7K,oBAAS,GAArD,mBAAOyE,EAAP,KAAuBC,EAAvB,KACA,EAAgC1E,mBAAS,KAAzC,mBAAOmL,EAAP,KAAiBC,EAAjB,KACA,EAA4BpL,mBAAS,KAArC,mBAAOqL,EAAP,KAAeC,EAAf,KAEA,EAAwBtL,mBAAS,MAAjC,mBAAOuL,EAAP,KAAaC,EAAb,KACA,EAAkDxL,mBAAS,GAA3D,mBAAOyL,EAAP,KAA0BC,EAA1B,KACA,EAA8C1L,mBAAS,IAAvD,mBAAO2L,EAAP,KAAwBC,EAAxB,KACA,EAAwC5L,oBAAS,GAAjD,mBAAO6L,EAAP,KAAqBC,EAArB,KACA,EAAgC9L,mBAAS,IAAzC,mBAAO+L,EAAP,KAAiBC,EAAjB,KACA,EAAgChM,mBAAS,IAAzC,mBAAOwE,EAAP,KAAiBmB,EAAjB,KACA,EAA4DG,qBAAWpG,GAA/DkB,EAAR,EAAQA,aAAcI,GAAtB,EAAsBA,YAAaF,GAAnC,EAAmCA,aAAcjB,GAAjD,EAAiDA,OAC3CoM,GAAiBC,iBAAO,MAExBC,GAAiB,uCAAG,gCAAA1J,EAAA,yDAClBoJ,EADkB,uBAElBO,GAAuB,yBAFL,6BAMjBb,EANiB,uBAOlBa,GAAuB,gCAPL,2CAYZC,EAAW,IAAIC,UACZC,OAAO,OAAQpB,GACxBkB,EAASE,OAAO,OAAQlB,GACxBgB,EAASE,OAAO,OAAQhB,GAfN,UAgBG1M,EAAM,GAAD,OAAIY,EAAJ,kBAAwC,CAC9DiD,OAAQ,OACRE,KAAMyJ,IAlBQ,eAgBZ1J,EAhBY,iBAoBOA,EAAOC,KApBd,QAqBQ,KADpB4J,EApBY,QAqBH1J,QACXlC,EAAa4L,EAAWzF,KACxB/F,GAAYwL,EAAWzL,UACvBD,GAAa0L,EAAWpJ,KACxBsI,EAAqBc,EAAWzL,UAChC8J,GAAqB,GACrBhL,GAAOoD,KAAK,aAAcuJ,EAAWpJ,OAErCuD,QAAQC,IAAI4F,EAAWxF,KACvBoF,GAAuBI,EAAWxF,MA9BpB,kDAkClBL,QAAQC,IAAR,MACAwF,GAAuB,EAAD,IAnCJ,0DAAH,qDAuCvB,SAASA,GAAuBK,GAC5B9G,EAAY8G,GACZ/H,GAAkB,GAmBtB,OAPA3C,qBAAU,WACM,MAARwJ,IACA5E,QAAQC,IAAI2E,EAAKmB,MACjBV,EAAYT,EAAKmB,SAEtB,CAACnB,IAGA,iCACI,cAAC,EAAD,CAAUpC,aAAa,GAAGD,aAAa,KACvC,uBACA,qBAAK5F,UAAU,wBAAf,2BACA,uBACA,cAACgE,EAAA,EAAD,CAAMhE,UAAU,uBAAhB,SACI,sBAAKA,UAAU,gBAAf,UACI,eAACgE,EAAA,EAAKC,MAAN,CAAYjE,UAAU,OAAtB,UACI,cAACgE,EAAA,EAAKG,MAAN,sCACA,eAACH,EAAA,EAAKqF,OAAN,CAAaC,aAAc,EAAGhF,SAAU,SAAAxB,GAAC,OAAIgF,EAAYhF,EAAEyB,OAAOlE,QAAlE,UACI,uCACA,8CAGR,eAAC2D,EAAA,EAAKC,MAAN,CAAYjE,UAAU,OAAtB,UACI,cAACgE,EAAA,EAAKG,MAAN,oCACA,eAACH,EAAA,EAAKqF,OAAN,CAAaC,aAAc,EAAGhF,SAAU,SAAAxB,GAAC,OAAIkF,EAAUlF,EAAEyB,OAAOlE,QAAhE,UACI,uCACA,mDAMhB,qBAAKL,UAAU,iCAAf,0BAGA,sBAAKA,UAAU,2BAAf,UACI,uBAAOH,KAAK,SAASG,UAAU,oDAAoD+F,MAAO,CAAEe,MAAO,QAASF,gBAAiByB,GAAmBhI,MAAM,8CAA8C0B,QAAS,SAAAe,GAAC,OA5CtN0F,GAAgB,QAChBF,EAAmB,iBA4CX,uBAAM,uBACN,uBAAOzI,KAAK,SAASG,UAAU,0BAA0BK,MAAM,8CAC/D,uBAAM,0BAEV,uBACA,qBAAKL,UAAU,2BAAf,SACI,uBAAOA,UAAU,iCAAjB,SACI,gCACI,+BACI,oBAAIA,UAAU,8BAAd,SACI,qBAAKA,UAAU,iCAAf,qBAEJ,qBAAIA,UAAU,8BAAd,UACI,uBAAOH,KAAK,SAASkC,QAtDtB,WACvB4G,GAAeY,QAAQC,SAqDmDxJ,UAAU,+BAA+BK,MAAM,WACjG,uBAAOoJ,IAAKd,GAAgB3I,UAAU,aAAaH,KAAK,OAAO6J,OAAO,QAAQpF,SAAU,SAAAxB,GAAC,OAAIoF,EAAQpF,EAAEyB,OAAOoF,MAAM,OACpH,gCAAQlB,OAEZ,oBAAIzI,UAAU,8BAAd,SACI,mBAAG4J,KAAI,UAAKzN,EAAL,mBAA0C0N,UAAQ,EAAzD,SAA0D,uBAAOhK,KAAK,SAASG,UAAU,+BAA+BK,MAAM,mCAMlJ,uBACA,qBAAKL,UAAU,6BAAf,SACI,uBAAOA,UAAU,6BAA6BH,KAAK,SAASQ,MAAM,SAAS0B,QAAS8G,OAExF,uBAEA,cAAC,EAAD,CAAepL,SAAU0K,EAAmBb,kBAAmBA,EAAmBC,qBAAsBA,IACxG,cAAC,EAAD,CAAYpG,eAAgBA,EAAgBC,kBAAmBA,EAAmBH,cAAc,cAAcC,SAAUA,O,OC/IrH,SAAS4I,EAAQ9I,GAC5B,IAAMzC,EAAWC,cACXuL,EAAoB/I,EAApB+I,KAAMC,EAAchJ,EAAdgJ,KAAMC,EAAQjJ,EAARiJ,IAIlB,OACI,uBAAOpK,KAAK,SAASkC,QAAS,SAAAe,GAHTvE,EAASyL,IAGmBhK,UAAU,YAAY+F,MAAO,CAAET,OAAQ2E,EAAIC,EAAGC,mBAAoBF,EAAIG,GAAK/J,MAAO0J,I,OCC5H,SAASM,IACpB,IAIA,EAAgC7H,qBAAWpG,GAAnCa,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,UAalB,OACI,gCACI,cAAC,EAAD,CAAUwI,aAAa,GAAGD,aAAa,KAEvC,sBAAK5F,UAAU,gBAAf,UACI,qBAAKA,UAAU,wBAAwB+F,MAAO,CAAEuE,UAAW,QAA3D,SAEI,uBAAOC,MAAM,wCAAb,SAEI,kCACI,qBAAIvK,UAAU,cAAd,UACI,oBAAIG,MAAM,QAAV,sBAEA,qBAAIA,MAAM,QAAQH,UAAU,aAA5B,cAA4CjE,IAAQC,IAAI,eACxD,qBAAImE,MAAM,QAAV,cAAqB,uBAAOH,UAAU,yBAAyBH,KAAK,SAASkG,MAAO,CAAC5F,MAAM,QAASE,MAAM,OAAO0B,QAAS,SAAAe,GAAC,OAAI6E,IAAK5L,IAAQC,IAAI,sBAEpJ,qBAAIgE,UAAU,cAAd,UAEI,oBAAIG,MAAM,QAAV,4BACA,qBAAIA,MAAM,QAAQH,UAAU,aAA5B,eAA4C/C,QAEhD,qBAAI+C,UAAU,cAAd,UACI,oBAAIG,MAAM,QAAV,6BACA,qBAAIA,MAAM,QAAQH,UAAU,aAA5B,cAA2C3C,KAC3C,oBAAI8C,MAAM,QAAV,SAAoB,uBAAOH,UAAU,0BAA0BH,KAAK,SAASkG,MAAO,CAAC5F,MAAM,QAAUE,MAAM,OAAO0B,QAAS,SAAAe,GAAC,OAAI6E,IAAKtK,kBAcrJ,qBAAK2C,UAAU,MAAf,SACI,cAAC8J,EAAD,CAASC,KAAK,YAAYC,KAAK,iBAAiBC,IAxD9C,CAAEO,EAAG,OAAQN,EAAG,OAAQO,EAAG,YAAaL,EAAG,YA2DjD,qBAAKpK,UAAU,MAAf,SACI,cAAC8J,EAAD,CAASC,KAAK,SAASC,KAAK,SAASC,IA3DtC,CAAEO,EAAG,OAAQN,EAAG,OAAQO,EAAG,YAAaL,EAAG,kB,sCCT/C,SAASM,EAAQ1J,GAC5B,IAAM1B,EAAS0B,EAAT1B,KAEN,OACI,gCAEI,eAACqL,EAAA,EAAD,CAAUxK,MAAO,GAAImF,OAAQ,GAA7B,UACI,cAACsF,EAAA,EAAD,CACIC,QAAQ,QACRC,QAAQ,OACRC,mBAAmB,EACnBzL,KAAMA,EACN0L,GAAG,MACHC,GAAG,MACHC,YAAa,GACb3F,KAAK,YAGT,cAAC4F,EAAA,EAAD,OAdR,IAgBM7L,EAAK,GAAGe,MAAQ,KAAOf,EAAK,GAAGe,MAAQf,EAAK,GAAGe,OAhBrD,O,OCFO,SAAS+K,EAAOpK,GAI3B,IAAIzB,EAAOyB,EAAMzB,KACb8L,EAAS9L,EAAK+L,WACdC,EAAMhM,EAAKiM,KACXC,EAAMlM,EAAKmM,KACf,EAAqClJ,qBAAWpG,GAAxCW,EAAR,EAAQA,SAAUmB,EAAlB,EAAkBA,eAElB,EAAwBxB,oBAAS,GAAjC,mBAMM6B,GANN,UAMiBC,eAEjB,SAASmN,EAAMjG,GACX,IAIIkG,EAAO,IAAIC,KAAKnG,GACpB,MAAM,GAAN,OAAUkG,EAAKE,UAAf,YAA4BF,EAAKG,WAAW,EAA5C,YAAiDH,EAAKI,cAAtD,YAAuEJ,EAAKK,WAA5E,YAA0FL,EAAKM,cAInG,IAAMC,EAAU,WACZ,OAAY,OAARZ,EAEIA,EAAIa,KAAI,SAACC,GACL,OACI,6BACKA,OAMV,MAGTC,EAAa,SAACjM,EAAOgM,GACvB,MAAiB,YAAbtP,EACc,IAAVsD,EAEI,qBAAIL,UAAU,eAAd,UACI,4CACA,uBACA,wBAAQH,KAAK,SAASG,UAAU,kBAAkB+B,QAAS,WAAQ7D,EAAemO,GAAO9N,EAAS,wBAAlG,uBAGS,IAAV8B,EAEH,qBAAIL,UAAU,eAAd,UACI,2CACA,uBACA,wBAAQH,KAAK,SAASG,UAAU,kBAAkB+B,QAAS,WAAQ7D,EAAemO,GAAO9N,EAAS,wBAAlG,uBAKJ,qBAAIyB,UAAU,eAAd,UACI,4CACA,uBACA,wBAAQH,KAAK,SAASG,UAAU,kBAAkB+B,QAAS,WAAQ7D,EAAemO,GAAO9N,EAAS,mBAAlG,qBAKE,IAAV8B,EAEI,qBAAIL,UAAU,eAAd,UACI,4CACA,uBACA,wBAAQH,KAAK,SAASG,UAAU,kBAAkB+B,QAAS,WAAQ7D,EAAemO,GAAO9N,EAAS,wBAAlG,uBAGS,IAAV8B,EAEH,qBAAIL,UAAU,eAAd,UACI,2CACA,uBACA,wBAAQH,KAAK,SAASG,UAAU,kBAAkB+B,QAAS,WAAQ7D,EAAemO,GAAO9N,EAAS,wBAAlG,uBAKJ,qBAAIyB,UAAU,eAAd,UACI,4CACA,uBACA,wBAAQH,KAAK,SAASG,UAAU,kBAAkB+B,QAAS,WAAQ7D,EAAemO,GAAO9N,EAAS,kBAAlG,8BA4BdgO,EAAW,WACb,GAAY,OAARd,EAAc,CACd,GAAe,gBAAXJ,EAA0B,CAC1B,IAAImB,EAAO,EACX,OACIf,EAAIW,KAAI,SAACC,EAAMI,GAEX,QADAD,EACW,EAEH,+BACI,6BAAKH,EAAKvH,OACV,6BAAKuH,EAAKK,SACV,6BAAKF,EAAO,OAIb,QAIhB,MAAe,gBAAXnB,EAEHI,EAAIW,KAAI,SAACC,EAAMI,GACX,OACI,+BACI,6BAAKA,EAAMJ,EAAKM,MAChB,6BAAKF,EAAMJ,EAAKO,MAChB,6BAAKH,EAAMJ,EAAKQ,MAChB,6BAAKJ,EAAMJ,EAAKS,YAKd,uBAAXzB,EAEHI,EAAIW,KAAI,SAACC,GACL,OACI,+BACI,6BAAKV,EAAMU,EAAKU,MAChB,6BAAKV,EAAKvH,OACV,6BAAKuH,EAAKW,QACV,6BAAKX,EAAKY,QA9DtB5M,EA+DoBgM,EAAKa,MA/DlBC,EA+DyBd,EAAKc,QA7DjC,IAAZA,EAEI,qBAAInN,UAAU,eAAd,UACI,kCAAUK,GAASW,EAAMoM,MAAQ,GAAM,IAAvC,OACA,uBACA,wBAAQvN,KAAK,SAASG,UAAU,iBAAhC,qBAKJ,qBAAIA,UAAU,eAAd,UACI,kCAAUK,GAASW,EAAMoM,MAAQ,GAAM,IAAvC,OACA,uBACA,wBAAQvN,KAAK,SAASG,UAAU,kBAAhC,yBA2CiBqM,EAAKvH,MA1DvB,IAACzE,EAAO8M,KAoEO,uBAAX9B,EAEHI,EAAIW,KAAI,SAACC,GAEL,OAAIA,EAAKgB,IAAM,GAAiB,OAAZhB,EAAKiB,GAEjB,+BAEI,6BAAKjB,EAAKgB,MACV,oBAAItH,MAAO,CAAEwH,QAAS,QAAtB,SAAgC,wBAAQ1N,KAAK,SAASG,UAAU,mBAAmB+B,QAAS,WAAQ7D,EAAemO,GAAO9N,EAAS,eAAnG,sBAChC,6BAAKoN,EAAMU,EAAKiB,MACfhB,EAAWD,EAAKmB,UAAWnB,KALvBA,EAAKgB,KASX,QAID,kBAAXhC,EAEHI,EAAIW,KAAI,SAACC,EAAMI,GACX,OACI,+BAEI,6BAAKd,EAAMU,EAAKU,MAChB,6BAAKV,EAAKvH,OACV,6BAAKuH,EAAKW,QACV,6BAAKX,EAAKY,OACV,6BAAK,cAACvC,EAAD,CAASpL,KAAM,CAAC,CAAE8J,KAAM,OAAQ/I,MAAOgM,EAAKa,OAAS,CAAE9D,KAAM,QAAS/I,MAAQW,EAAMoM,MAAQf,EAAKa,MAAS,cAMxH,OAOnB,MAAe,gBAAX7B,GAgBkB,gBAAXA,GAgBW,uBAAXA,GAiBW,uBAAXA,GAiBW,kBAAXA,EAhEH,8BACI,wBAAOrL,UAAU,uBAAjB,UACI,kCACI,oBAAIA,UAAU,kBAAd,SACKmM,MAEL,2BAEJ,uBAAOnM,UAAU,kBAAjB,SACKuM,WAyEV,KCzSA,SAASkB,EAAMzM,GAC1B,MAAwCwB,qBAAWpG,GAA5BuB,GAAvB,EAAQK,cAAR,EAAuBL,cACvB,EAAsBjB,mBAAS,GAA/B,mBAAOgR,EAAP,KAAYC,EAAZ,KACA,EAAsBjR,mBAAS,GAA/B,mBAAOkR,EAAP,KAAYC,EAAZ,KACA,EAAgCnR,oBAAS,GAAzC,mBAAOoR,EAAP,KAAiBC,EAAjB,KAwCA,OAtCAtP,qBAAU,cAGP,IA8BHA,qBAAU,WA3BFd,EAAe,GACfoQ,GAAY,IAC0B,EAAjCC,KAAKC,MAAMtQ,EAAe,IAAW,EAAK,GAC3CgQ,EAAO,KAAuC,EAAjCK,KAAKC,MAAMtQ,EAAe,IAAW,GAElDgQ,GAAwC,EAAjCK,KAAKC,MAAMtQ,EAAe,IAAW,GAG5CkQ,EADClQ,EAAe,IAAO,EAAI,GACpB,IAAQA,EAAe,IAAO,EAE9BA,EAAe,IAAM,KAGhCoQ,GAAY,GACPC,KAAKC,MAAMtQ,EAAe,IAAO,GAClCgQ,EAAO,IAAMK,KAAKC,MAAMtQ,EAAe,KAEvCgQ,EAAOK,KAAKC,MAAMtQ,EAAe,KAGjCkQ,EADAlQ,EAAe,GAAK,GACb,IAAOA,EAAe,GAEtBA,EAAe,OAQ/B,CAACA,IAGA,sBAAKoI,MAAO+H,EAAW,CAAEhH,MAAO,oBAAuB,CAAEA,MAAO,oBAAhE,UAAuF4G,EAAvF,IAA6FE,KCtCtF,SAASM,IAcpB,IAAM3P,EAAWC,cAEjB,EAAkHgE,qBAAWpG,GAArHiC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAAaf,EAA/B,EAA+BA,UAAWhB,EAA1C,EAA0CA,OAAQ4B,EAAlD,EAAkDA,YAAaC,EAA/D,EAA+DA,eAAgBJ,EAA/E,EAA+EA,cAAeJ,EAA9F,EAA8FA,gBAC9F,EAAgClB,mBAAS,IAAzC,mBAAOiH,EAAP,KAAiBwK,EAAjB,KACA,EAAgDzR,oBAAS,GAAzD,mBAAO0R,EAAP,KAAyBC,EAAzB,KACA,EAAoC3R,mBAAS,GAA7C,mBAAO4R,EAAP,KAAmBC,EAAnB,KAEMC,EAAS,uCAAG,wCAAArP,EAAA,+EAGW5D,EAAM,GAAD,OAAIY,EAAJ,8BAA4CoB,GAAa,CAAE6B,OAAQ,QAHnF,cAGJC,EAHI,gBAISA,EAAOC,KAJhB,OAMV,GAAoB,KAFdC,EAJI,QAMDC,OAAc,CASnB,IARAlB,GAAY,GACZ6P,EAAY,CAAE7C,WAAY,qBAAsBE,KAAM,CAAC,cAAe,OAAQ,YAAa,UAAWE,KAAMnM,EAAKgE,QAAQkL,SACzHrQ,EAAemB,EAAKgE,QAAQC,MAE5BxF,GAAc,GACdJ,EAAgB,GACZ8Q,EAAoB,EACpBC,EAAoB,EACfC,EAAI,EAAGA,EAAIrP,EAAKgE,QAAQkL,OAAO5L,OAAQ+L,IACV,OAA9BrP,EAAKgE,QAAQkL,OAAOG,GAAGtB,KACvBoB,IACyC,IAArCnP,EAAKgE,QAAQkL,OAAOG,GAAGpB,WAAwD,IAArCjO,EAAKgE,QAAQkL,OAAOG,GAAGpB,UACjEmB,MAEME,EAAa,IAAIhD,KAAKtM,EAAKgE,QAAQkL,OAAOG,GAAGtB,KACxCwB,WAAWD,EAAWE,aAAwC,GAAzBxP,EAAKgE,QAAQC,KAAKwL,MAC9DC,GAAWJ,EAAWK,WAAY,IAAIrD,MAAOqD,WAAa,IAC9DtR,EAAgBoQ,KAAKC,MAAMgB,IAC3BjR,GAAc,KAItB0Q,IAAsBC,GACtBN,GAAoB,GAEpBM,IAAsBpP,EAAKgE,QAAQkL,OAAO5L,OAAS,IACnDwL,GAAoB,GACpB/P,GAAY,GACZN,GAAc,GACdJ,EAAgB,IApCd,kDA0CVyF,QAAQC,IAAR,MA1CU,0DAAH,qDA8CT6L,EAAa,uCAAG,8BAAAhQ,EAAA,+EAEmB5D,EAAM,GAAD,OAAIY,EAAJ,0BAAwCoB,EAAxC,iBAAkE,CAAE6B,OAAQ,QAFpG,cAER2F,EAFQ,gBAGYA,EAAmBzF,KAH/B,OAKa,KAFrB8P,EAHQ,QAKE5P,QACZ+O,EAAca,EAAYpK,OANhB,kDASd3B,QAAQC,IAAR,MATc,0DAAH,qDAsCnB,OAxBA7E,qBAAU,WACN+P,IACAW,IACA,IAAME,EAA2B,SAACxL,GAC9BR,QAAQC,IAAI,4BACZkL,KAEEc,EAA2B,SAACzL,GAC9BR,QAAQC,IAAI,mBACZ6L,KAIJ,OAFA5S,EAAOgT,GAAG,kBAAmBF,GAC7B9S,EAAOgT,GAAG,kBAAmBD,GACtB,WACH/S,EAAOiT,IAAI,kBAAmBH,GAC9B9S,EAAOiT,IAAI,kBAAmBF,MAGnC,IAOC,iCACI,cAAC,EAAD,CAAUzJ,aAAa,GAAGD,aAAa,aACvC,uBACA,sBAAK5F,UAAU,yBAAf,UACI,sDACA,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,iCAAf,SAAgD,cAACyN,EAAD,MAChD,sBAAKzN,UAAU,kCAAf,UAAkDsO,EAAlD,mBAGR,qBAAKtO,UAAU,0BAA0B+F,MAAO,CAC5CT,OAAQ,QAASmK,SAAU,UAD/B,SAGI,cAACrE,EAAD,CAAQ7L,KAAMoE,EAAUxF,YAAaA,MAEzC,uBACA,sBAAK6B,UAAU,2BAAf,UACI,uBAAOA,UAAU,2BAA2BH,KAAK,SAASQ,MAAM,uBAAuBqP,UAAWtB,EAAkBrI,MAAQ1H,EAA2H,CAAE2H,QAAS,QAA1HoI,EAAwG,KAArF,CAAExH,gBAAiB,2BAA4BE,MAAO,4BAA2D/E,QAAS,kBAAMxD,EAAS,kBACpS,uBAAOyB,UAAU,2BAA2BH,KAAK,SAASQ,MAAM,4DAA4D0F,MAAO1H,EAAW,CAAE2H,QAAS,SAAUY,gBAAiB,cAAiB,CAAEZ,QAAS,OAAQY,gBAAiB,cAAgB7E,QAAS,WAAQxD,EAAS,aACnR,0BAGJ,0B,kBCvIG,SAASoR,EAAgB3O,GACpC,IAAQqM,EAA2DrM,EAA3DqM,IAAKuC,EAAsD5O,EAAtD4O,IAAKC,EAAiD7O,EAAjD6O,KAAMC,EAA2C9O,EAA3C8O,IAAKC,EAAsC/O,EAAtC+O,IAAKC,EAAiChP,EAAjCgP,GAAIC,EAA6BjP,EAA7BiP,cAOhCrE,GAP6D5K,EAAdkP,UAOxC,IAAIrE,KAAKmE,EAAGG,UAAU,EAAG,IAAM,WACtCC,EAAO,UAAMxE,EAAKE,UAAX,YAAwBF,EAAKG,WAAa,EAA1C,YAA+CH,EAAKI,eAEjE,OACI,sBAAMhM,UAAU,6BAAhB,SACI,sBAAKA,UAAU,sBACX+F,MAAOkK,IAAkB5C,EACrB,CAAEzG,gBAAiB,yBAA4B,KAAM7E,QAAS,aAFtE,UAGI,sBAAK/B,UAAU,oDAAf,UACI,qBAAKA,UAAU,+BAAf,yBACA,sBAAKA,UAAU,gCAAf,eAAkD4P,QAEtD,sBAAK5P,UAAU,0BAAf,UACI,qBAAKA,UAAU,+BAAf,wBACA,sBAAKA,UAAU,gCAAf,eAAkD6P,QAEtD,sBAAK7P,UAAU,0BAAf,UACI,qBAAKA,UAAU,+BAAf,+BACA,sBAAKA,UAAU,gCAAf,eAAkD8P,QAEtD,sBAAK9P,UAAU,0BAAf,UACI,qBAAKA,UAAU,+BAAf,0BACA,sBAAKA,UAAU,gCAAf,eAAkD+P,QAEtD,sBAAK/P,UAAU,mDAAf,UACI,qBAAKA,UAAU,+BAAf,2BACA,sBAAKA,UAAU,gCAAf,eAAkDoQ,a,OC1BvD,SAASC,KACpB,MAA8B7N,qBAAWpG,GAAjCmB,EAAR,EAAQA,UAAWhB,EAAnB,EAAmBA,OACnB,EAA4CG,oBAAS,GAArD,mBAAOyE,EAAP,KAAuBC,EAAvB,KACA,EAA4B1E,mBAAS,MAArC,mBAAO+R,EAAP,KAAe6B,EAAf,KACA,EAA0C5T,mBAAS,MAAnD,mBAAOuT,EAAP,KAAsBM,EAAtB,KACA,EAAgD7T,mBAAS,IAAzD,mBAAO8T,EAAP,KAAyBC,EAAzB,KACA,EAAgC/T,mBAAS,IAAzC,mBAAOwE,EAAP,KAAiBmB,EAAjB,KACMqO,EAAY9H,iBAAO,MAEnBrK,EAAWC,cAEjBC,qBAAU,WACN+P,MAED,IAEH/P,qBAAU,WACNiS,EAAUnH,QAAQoH,UAA8B,KAAjBV,EAAc,KAE9C,CAACA,IAEJ,IAAMzB,EAAS,uCAAG,gCAAArP,EAAA,+EAEW5D,EAAM,GAAD,OAAIY,EAAJ,8BAA4CoB,GAAa,CAAE6B,OAAQ,QAFnF,cAEJC,EAFI,gBAGSA,EAAOC,KAHhB,UAIU,KADdC,EAHI,QAIDC,OAJC,iBAKN8Q,EAAU/Q,EAAKgE,QAAQkL,QACdG,EAAI,EANP,aAMUA,EAAIrP,EAAKgE,QAAQkL,OAAO5L,QANlC,oBAOFQ,QAAQC,IAAI/D,EAAKgE,QAAQkL,OAAOG,IACE,OAA9BrP,EAAKgE,QAAQkL,OAAOG,GAAGtB,GARzB,wBASEiD,EAAiBhR,EAAKgE,QAAQkL,OAAOG,GAAGvB,KAT1C,6BAM0CuB,IAN1C,0EAeVvL,QAAQC,IAAR,MAfU,0DAAH,qDAmBTsN,EAAW,uCAAG,kCAAAzR,EAAA,0DACZ8Q,IAAiBO,EADL,0CAGyBjV,EAAM,GAAD,OAAIY,EAAJ,0BAAwCoB,EAAxC,iBAAkE,CAAE6B,OAAQ,QAH1G,cAGF2F,EAHE,gBAIkBA,EAAmBzF,KAJrC,WAIF8P,EAJE,SAKmC,IAAvBA,EAAY5P,UAAgB4P,EAAYpK,MtBrD7C,GsBgDP,wBAMJ3B,QAAQC,IAAI,iFACZwF,EAAuB,iFAPnB,4CAUavN,EAAM,GAAD,OAAIY,EAAJ,0BAAwCoB,EAAxC,WAA4D,CAClF6B,OAAQ,OACRE,KAAM,CAAE+N,IAAK4C,EAAexM,IAAK+M,KAZ7B,eAUFnR,EAVE,iBAcWA,EAAOC,KAdlB,QAeY,KADdC,EAdE,QAeCC,QACLjB,EAAS,kBACThC,EAAOoD,KAAK,6BAA8BpC,KAE1C8F,QAAQC,IAAI/D,EAAKmE,KACD,iCAAbnE,EAAKmE,IACJoF,EAAuB,iCAEvBA,EAAuBvJ,EAAKmE,MAvB5B,kDA2BRL,QAAQC,IAAR,MACAwF,EAAuB,UAAU,KAAIjF,SA5B7B,gCA+BZiF,EAAuB,oDA/BX,0DAAH,qDAmCjB,SAASA,EAAuBK,GAC5B9G,EAAY8G,GACZ/H,GAAkB,GAGtB,OACI,iCACI,cAAC,EAAD,CAAUyE,aAAa,GAAGD,aAAa,kBACvC,uBACA,qBAAK5F,UAAU,uBAAf,wCACA,uBACA,qBAAKA,UAAU,4BAA4ByJ,IAAKiH,EAAhD,SAEQjC,EAASA,EAAOrC,KAAI,SAAAyE,GAChB,OAAqB,IAAdA,EAAMxD,IAAY,cAAC,EAAD,2BAAqCwD,GAArC,IAA4CZ,cAAeA,EAAeM,iBAAkBA,EAAkBG,UAAWA,IAAnGG,EAAMxD,KAA6G,QACjK,OAGb,uBACA,cAACrJ,EAAA,EAAD,CAAMhE,UAAU,sBAAhB,SACI,qBAAKA,UAAU,gBAAf,SACI,eAACgE,EAAA,EAAKC,MAAN,CAAYjE,UAAU,OAAtB,UACI,cAACgE,EAAA,EAAKG,MAAN,qDACA,cAACH,EAAA,EAAKI,QAAN,CAAcvE,KAAK,OAAOyE,SAAU,SAAAxB,GAAC,OAAI2N,EAAoB3N,EAAEyB,OAAOlE,iBAIlF,qBAAKL,UAAU,4BAAf,SACI,uBAAOA,UAAU,4BAA4BH,KAAK,SAASQ,MAAM,UAAU0B,QAAS6O,MAExF,uBAEA,cAAC,EAAD,CAAYzP,eAAgBA,EAAgBC,kBAAmBA,EAAmBH,cAAc,cAAcC,SAAUA,O,OChHrH,SAAS4P,KAEpB,IAUIlF,EACAwE,EAXJ,EAAqC5N,qBAAWpG,GAAxC6B,EAAR,EAAQA,YAAaE,EAArB,EAAqBA,YACbkP,EAAiCpP,EAAjCoP,IAAKuC,EAA4B3R,EAA5B2R,IAAKC,EAAuB5R,EAAvB4R,KAAMC,EAAiB7R,EAAjB6R,IAAKC,EAAY9R,EAAZ8R,IAAKC,EAAO/R,EAAP+R,GAE5BzR,EAAWC,cAejB,OALIwR,IACApE,EAAO,IAAIC,KAAKmE,EAAGG,UAAU,EAAG,IAAM,UACtCC,EAAO,UAAMxE,EAAKE,UAAX,YATM,CAAC,MAAO,MAAO,MAAO,MACnC,MAAO,MAAO,MAAO,MACrB,MAAO,MAAO,MAAO,OAOqBF,EAAKG,YAAxC,YAAuDH,EAAKI,gBAInE,iCACI,cAAC,EAAD,CAAUnG,aAAa,GAAGD,aAAa,KACvC,uBACA,qBAAK5F,UAAU,sBAAf,sCACA,uBACA,sBAAKA,UAAU,2BAAf,0BAAwDqN,KACxD,uBACA,qBAAKrN,UAAU,2BAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,6BAAf,oBACA,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,6BAAf,uBACA,sBAAKA,UAAU,8BAAf,eAAgD7B,EAAY6E,UAEhE,sBAAKhD,UAAU,wBAAf,UACI,qBAAKA,UAAU,6BAAf,yBACA,sBAAKA,UAAU,8BAAf,eAAgD4P,QAEpD,sBAAK5P,UAAU,wBAAf,UACI,qBAAKA,UAAU,6BAAf,wBACA,sBAAKA,UAAU,8BAAf,eAAgD6P,QAEpD,sBAAK7P,UAAU,wBAAf,UACI,qBAAKA,UAAU,6BAAf,8BACA,sBAAKA,UAAU,8BAAf,eAAgD8P,QAEpD,sBAAK9P,UAAU,wBAAf,UACI,qBAAKA,UAAU,6BAAf,0BACA,sBAAKA,UAAU,8BAAf,eAAgD+P,QAEpD,sBAAK/P,UAAU,sDAAf,UACI,qBAAKA,UAAU,6BAAf,2BACA,sBAAKA,UAAU,8BAAf,eAAgDoQ,GAAoB,gBAIhF,qBAAKpQ,UAAU,2BAAf,SACI,uBAAOA,UAAU,2BAA2BH,KAAK,SAASQ,MAAM,OAAO0B,QAAS,kBAAMxD,GAAU,QAEpG,0B,OC1DG,SAASwS,KAEpB,IAAMxS,EAAWC,cAEjB,EAAmCgE,qBAAWpG,GAAtC6B,EAAR,EAAQA,YAAaV,EAArB,EAAqBA,UAErB,EAA0Bb,mBAAS,MAAnC,mBAAOmU,EAAP,KAAcG,EAAd,KAEMC,EAAmB,uCAAG,8BAAA9R,EAAA,sEACH5D,EAAM,GAAD,OAAIY,EAAJ,8BAA4CoB,GAAa,CAAE6B,OAAQ,QADrE,cAClBC,EADkB,gBAELA,EAAOC,KAFF,OAGJ,KADdC,EAFkB,QAGfC,QACLwR,EAASzR,EAAKgE,QAAQkL,OAAOxQ,EAAYoP,MAJrB,2CAAH,qDAazB,OALA5O,qBAAU,WACNwS,MAED,IAGC,iCACI,cAAC,EAAD,CAAUpL,aAAa,GAAGD,aAAa,KACvC,uBAAM,uBACN,sBAAK5F,UAAU,8BAAf,UACI,8DAAsC,uBACtC,sBAAKA,UAAU,iCAAf,UACI,qBAAKA,UAAU,sCAAf,yBACA,sBAAKA,UAAU,uCAAf,eAAyD6Q,EAAQA,EAAMxD,IAAM,WAEjF,uBACA,sBAAKrN,UAAU,iCAAf,UACI,qBAAKA,UAAU,sCAAf,wBACA,sBAAKA,UAAU,uCAAf,eAAyD6Q,EAAQA,EAAM5D,KAAO,WAElF,uBACA,sBAAKjN,UAAU,iCAAf,UACI,qBAAKA,UAAU,sCAAf,yBACA,sBAAKA,UAAU,uCAAf,eAAyD6Q,EAAQA,EAAM7D,MAAQ,WAEnF,0BAEJ,qBAAKhN,UAAU,oCAAf,SACI,uBAAOA,UAAU,oCAAoCH,KAAK,SAASQ,MAAM,OAAO0B,QAAS,kBAAMxD,GAAU,QAE7G,0B,OC5CG,SAAS2S,KAEpB,IAAM3S,EAAWC,cAEjB,EAAkIgE,qBAAWpG,GAArIiC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAAaf,EAA/B,EAA+BA,UAAWhB,EAA1C,EAA0CA,OAAqB6B,GAA/D,EAAkDD,YAAlD,EAA+DC,gBAAgBR,EAA/E,EAA+EA,gBAAiBI,EAAhG,EAAgGA,cAAeE,EAA/G,EAA+GA,eAC/G,EAAgCxB,mBAAS,IAAzC,mBAAOiH,EAAP,KAAiBwK,EAAjB,KAEMK,EAAS,uCAAG,sCAAArP,EAAA,sEAGVjB,EAAe,IAHL,SAKW3C,EAAM,GAAD,OAAIY,EAAJ,8BAA4CoB,GAAa,CAAE6B,OAAQ,QALnF,cAKJC,EALI,gBAMSA,EAAOC,KANhB,OAQV,GAAoB,KAFdC,EANI,QAQDC,OAAc,CASnB,IARAlB,GAAY,GACZ+E,QAAQC,IAAI,cACZ6K,EAAY,CAAE7C,WAAY,qBAAsBE,KAAM,CAAC,cAAe,OAAQ,YAAa,UAAWE,KAAMnM,EAAKgE,QAAQkL,SACzHrQ,EAAemB,EAAKgE,QAAQC,MAE5BxF,GAAc,GACdJ,EAAgB,GACZ+Q,EAAoB,EACfC,EAAI,EAAGA,EAAIrP,EAAKgE,QAAQkL,OAAO5L,OAAQ+L,IACV,OAA9BrP,EAAKgE,QAAQkL,OAAOG,GAAGtB,KACkB,IAArC/N,EAAKgE,QAAQkL,OAAOG,GAAGpB,WAAwD,IAArCjO,EAAKgE,QAAQkL,OAAOG,GAAGpB,UACjEmB,MAEME,EAAa,IAAIhD,KAAKtM,EAAKgE,QAAQkL,OAAOG,GAAGtB,KACxCwB,WAAWD,EAAWE,aAAwC,GAAzBxP,EAAKgE,QAAQC,KAAKwL,MAC9DC,GAAWJ,EAAWK,WAAY,IAAIrD,MAAOqD,WAAa,IAC9DtR,EAAgBoQ,KAAKC,MAAMgB,IAC3BjR,GAAc,KAItB2Q,IAAsBpP,EAAKgE,QAAQkL,OAAO5L,OAAS,IACnDvE,GAAY,GACZN,GAAc,GACdJ,EAAgB,SAGpByF,QAAQC,IAAI/D,EAAKmE,KApCX,kDAwCVL,QAAQC,IAAR,MAxCU,0DAAH,qDAsEf,OAzBA7E,qBAAU,WACN+P,IACA,IAAM2C,EAA8B,SAACtN,GACjCR,QAAQC,IAAI,+BACZkL,KAEEa,EAA2B,SAACxL,GAC9BR,QAAQC,IAAI,mBACZ/E,EAAS,sBAEP6S,EAAiC,SAACvN,GACpCR,QAAQC,IAAI,yBACZ/E,EAAS,sBAKb,OAHAhC,EAAOgT,GAAG,kBAAmBF,GAC7B9S,EAAOgT,GAAG,4BAA6B6B,GACvC7U,EAAOgT,GAAG,qBAAsB4B,GACzB,WACH5U,EAAOiT,IAAI,kBAAmBH,GAC9B9S,EAAOiT,IAAI,4BAA6B4B,GACxC7U,EAAOiT,IAAI,qBAAsB2B,MAGtC,IAGC,iCACI,cAAC,EAAD,CAAUtL,aAAa,GAAGD,aAAa,cACvC,uBACA,sBAAK5F,UAAU,0BAAf,UACI,qBAAKA,UAAU,gCAAf,iCACA,qBAAKA,UAAU,8BAAf,SAA6C,cAACyN,EAAD,SAEjD,uBACA,qBAAKzN,UAAU,+BAA+B+F,MAAO,CACjDT,OAAQ,QAASmK,SAAU,UAD/B,SAGI,cAACrE,EAAD,CAAQ7L,KAAMoE,MAElB,uBACA,uBAAO9D,KAAK,SAASQ,MAAM,4DAA4D0F,MAAO1H,EAAW,CAAE8B,MAAO,OAAQ6F,QAAS,SAAUY,gBAAiB,cAAiB,CAAEZ,QAAS,OAAQY,gBAAiB,cAAgB7E,QAAS,WAAQxD,EAAS,aAC7P,uBAEA,0B,OCtGG,SAAS8S,GAAUrQ,GAC9B,IAMI4K,EACAwE,EAPI1I,EAAoC1G,EAApC0G,WAAY4J,EAAwBtQ,EAAxBsQ,cAAejF,EAASrL,EAATqL,KAS/BA,EAAK2D,KACLpE,EAAO,IAAIC,KAAKQ,EAAK2D,GAAGG,UAAU,EAAG,IAAM,UAC3CC,EAAO,UAAMxE,EAAKE,UAAX,YATM,CAAC,MAAO,MAAO,MAAO,MACnC,MAAO,MAAO,MAAO,MACrB,MAAO,MAAO,MAAO,OAOqBF,EAAKG,YAAxC,YAAuDH,EAAKI,gBAevE,OACI,gCACI,uBAAOhM,UAAU,gBAAjB,SACI,gCACI,+BAEI,oBAAIA,UAAU,oBAAd,SACI,sBAAK4J,KAAK,GAAG5J,UAAU,qBAAqB+F,MAAO,CAAEa,gBAAiBc,GAAtE,UACI,qBAAK1H,UAAU,2BAAf,mBACA,sBAAKA,UAAU,sBAAf,0BAAmDqM,EAAKuD,OACxD,+CAAkBvD,EAAKwD,QACvB,qDAAwBxD,EAAKyD,OAC7B,iDAAoBzD,EAAK0D,OACzB,sBAAK/P,UAAU,qBAAf,4BAAoDoQ,UAK5D,oBAAIpQ,UAAU,sBAGd,oBAAIA,UAAU,oBAAd,SACI,sBAAK4J,KAAK,GAAG5J,UAAU,sBAAsB+F,MAAO,CAAEa,gBAAiBc,GAAvE,UACI,sBAAK1H,UAAU,4BAAf,mBAAkDqM,EAAKgB,OACvD,sBAAKrN,UAAU,oBAAf,UACI,qBAAKA,UAAU,yBAAf,uBACA,sBAAKA,UAAU,0BAAf,eAA4CqM,EAAKkF,SAErD,sBAAKvR,UAAU,oBAAf,UACI,qBAAKA,UAAU,yBAAf,kBACA,sBAAKA,UAAU,4CAAf,UACI,qBAAKA,UAAU,uBAAf,eACA,uBAAOwR,QAAQ,SAASxR,UAAU,wBAAwBsE,SA5C3E,SAACxB,GAChBwO,GAAc,SAAArS,GAAG,OACbA,EAAImN,KAAI,SAACa,EAAMR,GACX,OAAIA,IAAQJ,EAAKgB,IACNJ,EAEAwE,SAAS3O,EAAEyB,OAAOlE,cAsC2EiJ,aAAc+C,EAAKY,aAG3G,sBAAKjN,UAAU,oBAAf,UACI,qBAAKA,UAAU,yBAAf,mBACA,sBAAKA,UAAU,0BAAf,eAA4CqM,EAAKW,wBASzE,0B,OCpEG,SAAS0E,KACpB,IAAMnT,EAAWC,cACjB,EAAsCgE,qBAAWpG,GAAzCmB,EAAR,EAAQA,UAAWa,EAAnB,EAAmBA,eACnB,EAA4B1B,mBAAS,IAArC,mBAAO+R,EAAP,KAAe6B,EAAf,KAEA,EAAoC5T,mBAAS,IAA7C,mBAAOiV,EAAP,KAAmBL,EAAnB,KACA,EAAoC5U,mBAAS,IAA7C,mBAAOkV,EAAP,KAAmBC,EAAnB,KAEMC,EAAQ,uCAAG,8BAAA3S,EAAA,+EAEY5D,EAAM,GAAD,OAAIY,EAAJ,8BAA4CoB,GAAa,CAAE6B,OAAQ,QAFpF,cAEHC,EAFG,gBAGUA,EAAOC,KAHjB,OAIW,KADdC,EAHG,QAIAC,QACL8Q,EAAU/Q,EAAKgE,QAAQkL,QAE3BlP,EAAKgE,QAAQkL,OAAOsD,SAAQ,SAAAlB,GACN,IAAdA,EAAMxD,MACNsE,EAAWd,EAAMxD,KAAOwD,EAAM5D,SAItC7O,EAAemB,EAAKgE,QAAQC,MAbnB,kDAeTH,QAAQC,IAAR,MAfS,0DAAH,qDAsCd,OAnBA7E,qBAAU,WAEN,IADA,IAAIuT,GAAY,EACPpD,EAAI,EAAGA,EAAIH,EAAO5L,OAAQ+L,IAAK,CACpC,IAAIiC,EAAQpC,EAAOG,GACnB,GAAI+C,EAAWd,EAAMxD,OAASwD,EAAM5D,KAAM,CACtC4E,EAAcjD,GACdoD,GAAY,EACZ,OAGHA,GAAWH,EAAc,MAE/B,CAACF,IAEJlT,qBAAU,WACNqT,MAED,IAGC,iCACI,cAAC,EAAD,CAAUjM,aAAa,GAAGD,aAAa,UACvC,uBACA,qBAAK5F,UAAU,qBAAf,wCACA,uBACA,qBAAKA,UAAU,0BAAf,0BACA,uBACA,qBAAKA,UAAU,yBAAf,SAEKyO,EAASA,EAAOrC,KAAI,SAAAC,GACjB,OAAiB,IAAbA,EAAKgB,IACDhB,EAAKgB,KAAOuE,EAER,cAAC,GAAD,CAAWN,cAAeA,EAAe5J,WAAY,mBAAmC2E,KAAMA,GAAhBA,EAAKgB,KAInF,cAAC,GAAD,CAAWiE,cAAeA,EAAe5J,WAAY,oBAAoC2E,KAAMA,GAAhBA,EAAKgB,KAIrF,QAEV,OAET,uBACA,qBAAKrN,UAAU,wBAAf,SACI,uBAAOA,UAAU,wBAAwBH,KAAK,SAASQ,MAAM,OAAO0B,QAAS,kBAAMxD,GAAU,QAEjG,0B,cC/EG,SAAS0T,GAAmBjR,GAEvC,IAAMzC,EAAWC,cAEX0T,EAAkDlR,EAAlDkR,4BAA6BC,EAAqBnR,EAArBmR,UAAWC,EAAUpR,EAAVoR,MAE9C,OAAIA,GAAS,EAEL,eAAC/Q,EAAA,EAAD,CACIC,KAAM4Q,EACN3Q,OAAQ,aACR,kBAAgB,+BAChBC,UAAQ,EAJZ,UAMI,cAACH,EAAA,EAAMM,KAAP,UACI,sBAAK3B,UAAU,yBAAf,UACI,kEACA,sBACA,iEACI,uBADJ,6BAEA,uBAEA,mCAAK,mBAAGA,UAAU,cAAb,iCAIb,cAACqB,EAAA,EAAMO,OAAP,UACI,qBAAK5B,UAAU,6BAAf,SACI,uBAAOA,UAAU,2BAA2BH,KAAK,SAASkC,QAAS,WAAQxD,EAAS,oBAAsB8B,MAAM,gBAO5H,eAACgB,EAAA,EAAD,CACIC,KAAM4Q,EACN3Q,OAAQ,aACR,kBAAgB,+BAChBC,UAAQ,EAJZ,UAKI,cAACH,EAAA,EAAMI,OAAP,CAAcsC,aAAW,EAAzB,SACI,cAAC1C,EAAA,EAAMK,MAAP,8BAEJ,cAACL,EAAA,EAAMM,KAAP,UACI,sBAAK3B,UAAU,yBAAf,UACI,gDACA,sBACA,oEACI,uBADJ,oCAGI,uBAHJ,qBAIuBmS,KAEvB,uBAEA,mCAAK,oBAAGnS,UAAU,cAAb,gBAAgCoS,EAAhC,qBAIb,cAAC/Q,EAAA,EAAMO,OAAP,UACI,qBAAK5B,UAAU,6BAAf,SACI,uBAAOA,UAAU,2BAA2BH,KAAK,SAASkC,QAAS,WAAQxD,EAAS,oBAAsB8B,MAAM,gBCzDzH,SAASgS,KAEpB,MAAwE7P,qBAAWpG,GAA3EmB,EAAR,EAAQA,UAAWhB,EAAnB,EAAmBA,OAAqB6B,GAAxC,EAA2BD,YAA3B,EAAwCC,gBAAgBH,EAAxD,EAAwDA,YACxD,EAAgCvB,mBAAS,IAAzC,mBAAOiH,EAAP,KAAiBwK,EAAjB,KACA,EAAsEzR,oBAAS,GAA/E,mBAAOwV,EAAP,KAAoCI,EAApC,KACA,EAAkC5V,mBAAS,GAA3C,mBAAOyV,EAAP,KAAkBI,EAAlB,KACA,EAA0B7V,mBAAS,GAAnC,mBAAO0V,EAAP,KAAcI,EAAd,KACA,EAA0B9V,mBAAS,GAAnC,mBAAO0Q,EAAP,KAAcqF,EAAd,KAEMjE,EAAS,uCAAG,sCAAArP,EAAA,kEAGLlB,EAAYoP,IAHP,uBAINqF,IAJM,0CAQanX,EAAM,GAAD,OAAIY,EAAJ,0BAAwCoB,EAAxC,kBAA2DU,EAAYoP,KAAO,CAAEjO,OAAQ,QAR1G,cAQJuT,EARI,gBASWA,EAASrT,KATpB,UAWY,KAFhBsT,EATI,QAWCpT,QAA2C,IAA3BoT,EAAO/B,MAAMrD,UAX9B,wBAYNkF,IAZM,4CAgBanX,EAAM,GAAD,OAAIY,EAAJ,0BAAwCoB,EAAxC,mBAA4DU,EAAYoP,IAAxE,eAA0F,CAAEjO,OAAQ,QAhBtH,eAgBJyT,EAhBI,iBAiBWA,EAASvT,KAjBpB,eAmBY,KAFhBwT,EAjBI,QAmBCtT,QACPiT,EAASK,EAAOC,OAAOlQ,QApBjB,UAuBWtH,EAAM,GAAD,OAAIY,EAAJ,0BAAwCoB,EAAxC,0BAAmEU,EAAYoP,KAAO,CAAEjO,OAAQ,QAvBhH,eAuBJC,EAvBI,iBAwBSA,EAAOC,KAxBhB,QA0BU,KAFdC,EAxBI,QA0BDC,SACL2O,EAAY,CAAE7C,WAAY,gBAAiB0H,MAAO,aAAcxH,KAAM,CAAC,YAAa,YAAa,QAAS,aAAc,QAASE,KAAMnM,EAAKkP,SAC5IrQ,EAAemB,EAAKgE,QAAQC,OA5BtB,kDAgCVH,QAAQC,IAAR,MAhCU,0DAAH,qDAoCToP,EAAc,uCAAG,8BAAAvT,EAAA,kEAGVlB,EAAYoP,IAHF,uBAIXkF,EAAa,GACbC,EAAS,GACTF,GAA+B,GANpB,0CAUM/W,EAAM,GAAD,OAAIY,EAAJ,wCAAsD8B,EAAYoP,KAAO,CAAEjO,OAAQ,QAV9F,cAUTC,EAVS,iBAWIA,EAAOC,KAXX,QAaK,KAFdC,EAXS,QAaNC,QAAgBD,EAAKsR,QAC1B0B,EAAahT,EAAKsR,MAAMoC,KACxBT,EAASjT,EAAKsR,MAAMnE,SAExB4F,GAA+B,GAjBhB,kDAoBfjP,QAAQC,IAAR,MApBe,0DAAH,qDAkDpB,OA1BA7E,qBAAU,WACN+P,IACA,IAAMa,EAA2B,SAACxL,GAC9BR,QAAQC,IAAI,mBACZoP,KAEEtB,EAAiC,SAACvN,GACpCR,QAAQC,IAAI,yBACZoP,KAEEQ,EAA8B,SAACrP,GACjCR,QAAQC,IAAI,sBACZkL,KAKJ,OAHAjS,EAAOgT,GAAG,kBAAmBF,GAC7B9S,EAAOgT,GAAG,qBAAsB2D,GAChC3W,EAAOgT,GAAG,4BAA6B6B,GAChC,WACH7U,EAAOiT,IAAI,kBAAmBH,GAC9B9S,EAAOiT,IAAI,qBAAsB0D,GACjC3W,EAAOiT,IAAI,4BAA6B4B,MAG7C,IAIC,iCACI,cAAC,EAAD,CAAUvL,aAAa,GAAGD,aAAa,KACvC,uBACA,qBAAK5F,UAAU,6BAAf,wBACA,uBACA,qBAAKA,UAAU,iCAAf,SACI,cAACoL,EAAD,CAAQ7L,KAAMoE,EAAUyJ,MAAOA,MAEnC,qBAAKpN,UAAU,mCAAf,SACI,uBAAOA,UAAU,mCAAmCH,KAAK,SAASQ,MAAM,iCAE5E,uBACA,cAAC,GAAD,CAAoB6R,4BAA6BA,EAA6BC,UAAWA,EAAWC,MAAOA,O,OC1GxG,SAASe,KAEpB,IAAM5U,EAAWC,cAEjB,EAA2CgE,qBAAWpG,GAA9CmB,EAAR,EAAQA,UAAWhB,EAAnB,EAAmBA,OAAQ0B,EAA3B,EAA2BA,YAC3B,EAAgCvB,mBAAS,IAAzC,mBAAOiH,EAAP,KAAiBwK,EAAjB,KACA,EAA0BzR,mBAAS,GAAnC,mBAAO0Q,EAAP,KAAcqF,EAAd,KAEMjE,EAAS,uCAAG,kCAAArP,EAAA,+EAGa5D,EAAM,GAAD,OAAIY,EAAJ,0BAAwCoB,EAAxC,mBAA4DU,EAAYoP,IAAxE,eAA0F,CAAEjO,OAAQ,QAHtH,cAGJyT,EAHI,gBAIWA,EAASvT,KAJpB,cAMY,KAFhBwT,EAJI,QAMCtT,QACPiT,EAASK,EAAOC,OAAOlQ,QAPjB,UAUWtH,EAAM,GAAD,OAAIY,EAAJ,0BAAwCoB,EAAxC,0BAAmEU,EAAYoP,KAAO,CAAEjO,OAAQ,QAVhH,eAUJC,EAVI,iBAWSA,EAAOC,KAXhB,QAaU,KAFdC,EAXI,QAaDC,OACL2O,EAAY5O,EAAKkP,QAEjBpL,QAAQC,IAAI/D,EAAKmE,KAhBX,kDAoBVL,QAAQC,IAAR,MApBU,0DAAH,qDAyBT8P,EAAY,uCAAG,8BAAAjU,EAAA,+EAGQ5D,EAAM,GAAD,OAAIY,EAAJ,sCAA4D,CAClFiD,OAAQ,MACRE,KAAM,CAAEQ,IAAKvC,EAAW8P,IAAKpP,EAAYoP,OALhC,cAGPhO,EAHO,gBAOMA,EAAOC,KAPb,OASO,KAFdC,EAPO,QASJC,QACLjD,EAAOoD,KAAK,wBAAyBpC,GACrCgB,GAAU,IAEV8E,QAAQC,IAAI/D,EAAKmE,KAbR,kDAiBbL,QAAQC,IAAR,MAjBa,0DAAH,qDAqBZ/D,EAAO,CAAE+L,WAAY,qBAAsBE,KAAM,CAAC,YAAa,YAAa,QAAS,aAAc,gBAAiBE,KAAM/H,GAchI,OAZAlF,qBAAU,WACN+P,IACA,IAAM0E,EAA8B,SAACrP,GACjCR,QAAQC,IAAI,+BACZkL,KAGJ,OADAjS,EAAOgT,GAAG,qBAAsB2D,GACzB,kBAAM3W,EAAOiT,IAAI,qBAAsB0D,MAE/C,IAIC,iCACI,cAAC,EAAD,CAAUrN,aAAa,GAAGD,aAAa,KACvC,uBACA,sBAAK5F,UAAU,4BAAf,UACI,gDACA,wEACA,iDAEJ,uBACA,sBAAKA,UAAU,4BAAf,UACI,qBAAKA,UAAU,8BAAf,wBACA,8BACI,uBAAOH,KAAK,SAASQ,MAAM,gBAAgBL,UAAU,6BAA6B+B,QAASqR,SAGnG,uBACA,qBAAKpT,UAAU,6BAA6B+F,MAAO,CAC/CT,OAAQ,QAASmK,SAAU,UAD/B,SAGI,cAACrE,EAAD,CAAQ7L,KAAMA,EAAM6N,MAAOA,MAE/B,uBACA,qBAAKpN,UAAU,4BAAf,SACI,uBAAOA,UAAU,4BAA4BH,KAAK,SAASQ,MAAM,OAAO0B,QAAS,kBAAMxD,GAAU,QAErG,0B,0ECtGG,SAAS8U,GAAcrS,GAElC,IAAM+R,EAAS/R,EAAM1B,KAErB,EAA0B5C,mBAAS,IAAnC,mBAAO4W,EAAP,KAAcC,EAAd,KAgBA,OAdA9U,qBAAU,WACN,GAAIsU,EAAQ,CACRQ,EAAS,IACT,IAAIvO,EAAQ,EACZ+N,EAAOhB,SAAQ,SAAAyB,GACPxO,EAAQ,IACRuO,GAAS,SAAAD,GAAK,6BAAQA,GAAR,CAAe,CAAElK,KAAMoK,EAAM1O,KAAMsN,MAAOoB,EAAM9G,aAC9D1H,WAKb,CAAC+N,IAGA,8BACI,cAACU,GAAA,EAAD,CAAqBtT,MAAM,OAAOuT,OAAQ,IAA1C,SACI,eAACC,GAAA,EAAD,CACIxT,MAAO,IACPmF,OAAQ,IACRhG,KAAMgU,EACNM,OAAQ,CACJC,IAAK,EACLC,MAAO,GACPC,KAAM,EACNC,OAAQ,GAEZC,QAAS,CACLC,MAAO,CAAC,CACJC,MAAO,CACHC,IAAK,OAbrB,UAkBI,cAACC,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAO1J,QAAQ,SACf,cAACqJ,GAAA,EAAD,IACA,cAAC/I,EAAA,EAAD,IACA,cAACqJ,GAAA,EAAD,CAAK3J,QAAQ,QAAQtF,KAAK,mB,OCpC/B,SAASkP,KAEpB,IAAMlW,EAAWC,cAEjB,EAAqEgE,qBAAWpG,GAAxEiC,EAAR,EAAQA,SAAUd,EAAlB,EAAkBA,UAElB,GAFA,EAA6BhB,OAA7B,EAAqC4B,YAArC,EAAkDC,eAEtB1B,mBAAS,KAArC,mBAAOqW,EAAP,KAAe2B,EAAf,KACA,EAAgChY,mBAAS,IAAzC,mBAAOiH,EAAP,KAAiBwK,EAAjB,KACA,EAAsCzR,mBAAS,KAA/C,mBAAOiY,EAAP,KAAoBC,EAApB,KAEMC,EAAS,uCAAG,8BAAA1V,EAAA,sEAEO5D,EAAM,GAAD,OAAIY,EAAJ,0BAAwCoB,EAAxC,gBAAiE,CAAE6B,OAAQ,QAFvF,cAERC,EAFQ,gBAGKA,EAAOC,KAHZ,OAKM,KAFdC,EAHQ,QAKLC,QACLkV,EAAUnV,EAAKwT,QACf5E,EAAY,CAAE7C,WAAY,cAAeE,KAAM,CAAC,YAAa,SAAU,QAASE,KAAMnM,EAAKwT,UAE3F1P,QAAQC,IAAI/D,EAAKmE,KATP,2CAAH,qDAwBf,OAVAjF,qBAAU,WACNoW,IAC+B,WAA3B9Y,IAAQC,IAAI,YACZ4Y,EAAe,YAEfA,EAAe,eAGpB,IAGC,iCACI,cAAC,EAAD,CAAU/O,aAAa,GAAGD,aAAc+O,IACxC,uBACA,cAACtB,GAAD,CAAe/T,KAAMyT,IACrB,uBACA,qBAAK/S,UAAU,0BAAf,SACI,cAACoL,EAAD,CAAQ7L,KAAMoE,MAElB,uBACA,qBAAK3D,UAAU,uBAAf,SACI,uBAAOA,UAAU,uBAAuBH,KAAK,SAASQ,MAAM,0BAA0B0B,QAAS,kBAAMxD,EAAS,kBAElH,uBACA,qBAAKyB,UAAU,uBAAf,SAEI,uBAAOA,UAAU,uBAAuBH,KAAK,SAASQ,MAAM,SAAS0F,MAAO1H,EAAW,CAAE2H,QAAS,SAAUY,gBAAiB,cAAiB,CAAEZ,QAAS,OAAQY,gBAAiB,cAAgB7E,QAAS,WAAQxD,EAAS,eAEhO,0BC3DG,SAASuW,KACpB,IAAMvW,EAAWC,cAEjB,OACI,gCACI,cAAC,EAAD,CAAUqH,aAAa,GAAGD,aAAa,KACvC,qBAAK5F,UAAU,cAAf,SACI,mBAAGA,UAAU,KAAK+F,MAAO,CAAEe,MAAO,UAAWE,WAAY,OAAQC,cAAe,QAAhF,wCAGJ,qBAAKjH,UAAU,cAAf,SAEI,sBAAKA,UAAU,mBAAf,UACI,4BAAG,iEAEH,uGAC0E,uBAAM,uBADhF,gHAEiH,uBAC7G,uBAHJ,+GAIgH,uBAJhH,+CAKgD,uBALhD,8CAM+C,uBAN/C,oCAOqC,uBAPrC,gDAQiD,uBARjD,gEASiE,0BAEjE,cAACkH,EAAA,EAAD,CAAOjH,IAAI,uBAAuBkH,OAAK,SAK/C,qBAAKnH,UAAU,WAAf,SACI,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,OAAOiE,MAAO,CAAE5F,MAAO,OAAQ2G,MAAO,SAAW/E,QAAS,kBAAMxD,GAAU,IAA1F,uB,OC1BD,SAASwW,KACpB,IAIA,EAAgCvS,qBAAWpG,GAAnCa,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,UAElB,OACI,gCACI,cAAC,EAAD,CAAUwI,aAAa,GAAGD,aAAa,KAEvC,sBAAK5F,UAAU,gBAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,uBAAOuK,MAAM,uCAAb,SAEI,kCACI,qBAAIvK,UAAU,cAAd,UACI,oBAAIG,MAAM,QAAV,sBAEA,qBAAIA,MAAM,QAAQH,UAAU,aAA5B,cAA4CjE,IAAQC,IAAI,eACxD,qBAAImE,MAAM,QAAV,cAAqB,uBAAOH,UAAU,yBAAyBH,KAAK,SAASkG,MAAO,CAAE5F,MAAO,QAAUE,MAAM,OAAO0B,QAAS,SAAAe,GAAC,OAAI6E,IAAK5L,IAAQC,IAAI,sBAEvJ,qBAAIgE,UAAU,cAAd,UAEI,oBAAIG,MAAM,QAAV,4BACA,qBAAIA,MAAM,QAAQH,UAAU,aAA5B,eAA4C/C,QAEhD,qBAAI+C,UAAU,cAAd,UACI,oBAAIG,MAAM,QAAV,6BACA,qBAAIA,MAAM,QAAQH,UAAU,aAA5B,cAA2C3C,KAC3C,oBAAI8C,MAAM,QAAV,SAAoB,uBAAOH,UAAU,0BAA0BH,KAAK,SAASkG,MAAO,CAAE5F,MAAO,QAAUE,MAAM,OAAO0B,QAAS,SAAAe,GAAC,OAAI6E,IAAKtK,kBAcvJ,qBAAK2C,UAAU,MAAf,SACI,cAAC8J,EAAD,CAASC,KAAK,YAAYC,KAAK,kBAAkBC,IA5C/C,CAAEO,EAAG,OAAQN,EAAG,OAAQO,EAAG,YAAaL,EAAG,YA+CjD,qBAAKpK,UAAU,MAAf,SACI,cAAC8J,EAAD,CAASC,KAAK,SAASC,KAAK,SAASC,IA/CtC,CAAEO,EAAG,OAAQN,EAAG,OAAQO,EAAG,YAAaL,EAAG,kB,OCH/C,SAAS4K,KAEpB,IAiBIpJ,EACAwE,EAlBE7R,EAAWC,cAEjB,EAAwDgE,qBAAWpG,GAA3D6B,EAAR,EAAQA,YAAaE,EAArB,EAAqBA,YAAaZ,EAAlC,EAAkCA,UAAWhB,EAA7C,EAA6CA,OACrC8Q,EAAqCpP,EAArCoP,IAAKuC,EAAgC3R,EAAhC2R,IAAKC,EAA2B5R,EAA3B4R,KAAMC,EAAqB7R,EAArB6R,IAAKC,EAAgB9R,EAAhB8R,IAAKC,EAAW/R,EAAX+R,GAAIuB,EAAOtT,EAAPsT,GAEtC,EAA0B7U,mBAAS,MAAnC,mBAAOsQ,EAAP,KAAciI,EAAd,KACA,EAAwBvY,mBAAS,MAAjC,mBAAOuQ,EAAP,KAAaiI,EAAb,KACA,EAAwBxY,mBAAS,MAAjC,mBAAOuI,EAAP,KAAakQ,EAAb,KAEA,EAA4CzY,oBAAS,GAArD,mBAAOyE,EAAP,KAAuBC,EAAvB,KACA,EAAgC1E,mBAAS,IAAzC,mBAAOwE,EAAP,KAAiBmB,EAAjB,KACA,EAA8C3F,oBAAS,GAAvD,mBAAO0Y,EAAP,KAAwBC,EAAxB,KASIrF,IACApE,EAAO,IAAIC,KAAKmE,EAAGG,UAAU,EAAG,IAAM,UACtCC,EAAO,UAAMxE,EAAKE,UAAX,YATM,CAAC,MAAO,MAAO,MAAO,MACnC,MAAO,MAAO,MAAO,MACrB,MAAO,MAAO,MAAO,OAOqBF,EAAKG,YAAxC,YAAuDH,EAAKI,gBAGvE,IAAMsJ,EAAwB,uCAAG,8BAAAnW,EAAA,+EAEE5D,EAAM,GAAD,OAAIY,EAAJ,0BAAwCoB,EAAxC,mBAA4D8P,EAA5D,iBAAgF,CAAEjO,OAAQ,QAFjG,cAEnBmW,EAFmB,gBAGAA,EAAajW,KAHb,OAIC,KADpBkW,EAHmB,QAIVhW,QAAqC,IAArBgW,EAAWxQ,MACtCqQ,GAAmB,GACU,IAAtBG,EAAWhW,QAClBsJ,GAAuB0M,EAAW9R,KAPb,kDAUzBL,QAAQC,IAAR,MACAwF,GAAuB,UAAY,KAAIjF,SAXd,0DAAH,qDAmBxB4R,EAAU,uCAAG,WAAO3S,GAAP,qBAAA3D,EAAA,yDACf2D,EAAEC,iBADa,WAGPsK,GAAOL,GAASC,GAAQhI,GAHjB,iCAIc1J,EAAM,GAAD,OAAIY,EAAJ,gCAAsD,CAC5EiD,OAAQ,OACRE,KAAM,CAAE+N,MAAKL,QAAOC,OAAMhI,UANvB,cAID5F,EAJC,gBAQYA,EAAOC,KARnB,UASa,KADdC,EARC,QASEC,OATF,kCAUkBjE,EAAM,GAAD,OAAIY,EAAJ,+BAAqD,CAC3EiD,OAAQ,MACRE,KAAM,CAAE+N,MAAKvN,IAAKvC,KAZnB,eAUG8B,EAVH,iBAcgBA,EAAOC,KAdvB,QAeiB,KADdC,EAdH,QAeMC,QACLjD,EAAOoD,KAAK,qBAAsB,CAAEG,IAAKvC,EAAW8P,IAAKA,IACzD9O,EAAS,sBAET8E,QAAQC,IAAI/D,EAAKmE,KAnBlB,wBAsBHL,QAAQC,IAAI/D,EAAKmE,KACA,iCAAbnE,EAAKmE,IACLoF,GAAuB,iCAEvBA,GAAuBvJ,EAAKmE,KA1B7B,gCA8BPoF,GAAuB,+BA9BhB,0DAiCXzF,QAAQC,IAAR,MACAwF,GAAuB,UAAY,KAAIjF,SAlC5B,0DAAH,sDAsCV6R,EAAY,uCAAG,8BAAAvW,EAAA,+EAEQ5D,EAAM,GAAD,OAAIY,EAAJ,0BAAwCoB,EAAxC,+BAAwE8P,GAAO,CACrGjO,OAAQ,QAHC,cAEPC,EAFO,gBAKMA,EAAOC,KALb,OAMO,KADdC,EALO,QAMJC,QAAgBD,EAAKyF,OAC1BzG,EAAS,qBAPA,kDAUb8E,QAAQC,IAAR,MAVa,0DAAH,qDAkClB,SAASwF,GAAuBK,GAC5B9G,EAAY8G,GACZ/H,GAAkB,GAGtB,OAzBA3C,qBAAU,WACN6W,IACAI,IACA,IAAMrG,EAA2B,SAACxL,GAC9BR,QAAQC,IAAI,mBACZ/E,EAAS,sBAEP6S,EAAiC,SAACvN,GACpCR,QAAQC,IAAI,yBACZ/E,EAAS,sBAIb,OAFAhC,EAAOgT,GAAG,kBAAmBF,GAC7B9S,EAAOgT,GAAG,4BAA6B6B,GAChC,WACH7U,EAAOiT,IAAI,kBAAmBH,GAC9B9S,EAAOiT,IAAI,4BAA6B4B,MAG7C,IAQC,sBAAKpR,UAAU,MAAf,UACI,cAAC,EAAD,CAAU6F,aAAa,GAAGD,aAAa,mBACvC,qBAAK5F,UAAU,wBAAwB+F,MAAO,CAAEiB,WAAY,KAAMC,cAAe,KAAM0O,YAAa,MAAOC,aAAc,OAAzH,SACI,uBAAO/V,KAAK,SAASkC,QAAS,kBAAMxD,EAAS,UAAUyB,UAAU,yBAAyBK,MAAM,YAEpG,qBAAKL,UAAU,UACf,qBAAKA,UAAU,qBAAf,SACI,mBAAGA,UAAU,cAAb,SACI,cAACyN,EAAD,QAKR,qBAAK1H,MAAO,CAAE4P,YAAa,MAA3B,SACI,8DACiC,uBADjC,gBAEkBtI,EAAI,uBAFtB,cAGgBlP,EAAY6E,IAAI,4BAKpC,qBAAKhD,UAAU,cAAc+F,MAAO,CAAE4P,YAAa,MAAOC,aAAc,MAAMzV,MAAM,MAAMqG,WAAW,KAAKD,YAAY,MAAtH,SAEZ,uBAAOgE,MAAM,sCAAb,SAEI,wBAAOvK,UAAU,cAAjB,UACI,+BACI,8CACA,qBAAIA,UAAU,aAAd,eAA8B4P,QAElC,+BACI,4CACA,qBAAI5P,UAAU,aAAd,eAA8B6P,QAElC,+BAEI,kDACA,qBAAI7P,UAAU,aAAd,eAA8B8P,QAElC,+BACI,8CACA,qBAAI9P,UAAU,aAAd,eAA8B+P,QAElC,+BACI,+CACA,qBAAI/P,UAAU,aAAd,eAA8BoQ,eAS9B,qBAAKpQ,UAAU,WAAf,SACI,sEAA0CuR,OAG9C,qBAAKvR,UAAU,SAAf,gDAGA,uBAAMA,UAAU,eAAhB,UACI,sBAAKA,UAAU,OAAf,UACI,uBAAO6V,IAAI,YAAY7V,UAAU,aAAjC,oDACA,uBAAOH,KAAK,OAAOG,UAAU,eAAeJ,GAAG,YAAY0E,SAAU,SAAAxB,GAAC,OAAIqS,EAAQrS,EAAEyB,OAAOlE,aAG/F,sBAAKL,UAAU,OAAf,UACI,uBAAO6V,IAAI,QAAQ7V,UAAU,aAA7B,mBACA,uBAAOH,KAAK,OAAOG,UAAU,eAAeJ,GAAG,QAAQ0E,SAAU,SAAAxB,GAAC,OAAImS,EAASnS,EAAEyB,OAAOlE,aAE5F,sBAAKL,UAAU,OAAf,UACI,uBAAO6V,IAAI,YAAY7V,UAAU,aAAjC,wBACA,uBAAOH,KAAK,OAAOG,UAAU,eAAeJ,GAAG,YAAY0E,SAAU,SAAAxB,GAAC,OAAIoS,EAAQpS,EAAEyB,OAAOlE,aAG/F,wBAAQL,UAAU,MAAM+B,QAAS0T,EAAjC,uBAEJ,cAAC,EAAD,CAAYtU,eAAgBA,EAAgBC,kBAAmBA,EAAmBH,cAAc,cAAcC,SAAUA,IAExH,cAAC,EAAD,CAAYC,eAAgBiU,EAAiBhU,kBAnK/B,WAClB7C,GAAU,IAkKyE0C,cAAc,cAAcC,SAAS,sC,aC9LhI4U,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAQ1R,SAAU,WAAQjB,QAAQC,IAAI,SAAtC,SACE,eAAC,IAAD,CAAO2S,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,GAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,oBAAoBC,QAAS,cAAC,GAAD,MACzC,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,QAAS,cAAC,GAAD,MACvC,cAAC,IAAD,CAAOD,KAAK,sBAAsBC,QAAS,cAAC,GAAD,MAC3C,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,GAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,GAAD,MACnC,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,iBAAiBC,QAAS,cAAC,EAAD,MACtC,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAACjQ,EAAD,MAC7B,cAAC,IAAD,CAAOgQ,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAAC,EAAD,MACxC,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAACpB,GAAD,MAC7B,cAAC,IAAD,CAAOmB,KAAK,aAAaC,QAAS,cAACnB,GAAD,MAClC,cAAC,IAAD,CAAOkB,KAAK,iBAAiBC,QAAS,cAAC,GAAD,eAK9CC,SAASC,eAAe,SAM1B9V,M","file":"static/js/main.8ac72acf.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\n//import { EXPRESS_SERVER_URL } from \"./config\"\r\n\r\nconst instance = axios.create({\r\n    timeout: 10000\r\n});\r\n\r\n// alway send token\r\ninstance.interceptors.request.use(function (config) {\r\n    const token = Cookies.get('token');\r\n    config.headers.Authorization = token;\r\n    return config;\r\n});\r\n\r\nexport default instance","export const EXPRESS_SERVER_URL = \"/api\" // /api              // http://localhost:3001\r\nexport const SOCKET_SERVER_URL = \"/\"  // /\r\nexport const COOKIES_EXPIRES_TIME = 1 // one day\r\nexport const MIN_MINER_COUNT = 3\r\nexport const MAX_MINER_COUNT = 40\r\n","import React from 'react';\r\nexport const Context = React.createContext();","import { io } from \"socket.io-client\";\r\nimport { SOCKET_SERVER_URL } from \"./config\"\r\n\r\nexport const socket = io(SOCKET_SERVER_URL);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Outlet, useNavigate } from 'react-router-dom'\r\nimport Cookies from 'js-cookie'\r\nimport './bootstrap.css'\r\nimport './App.css'\r\nimport axios from './axios'\r\nimport { EXPRESS_SERVER_URL, COOKIES_EXPIRES_TIME } from \"./config\"\r\nimport { Context } from './context/Context';\r\nimport { socket as socketio } from \"./socket\"\r\n\r\nfunction App() {\r\n  const [userToken, setLogin] = useState(null)\r\n  const [refreshTokenTimerID, setRefreshTokenTimerID] = useState(null)\r\n  const [userType, setUserType] = useState('')\r\n  const [userInfo, setUserInfo] = useState('')\r\n  const [historyLength, setHistoryLength] = useState(0)\r\n  const [privateID, setPrivateID] = useState('')\r\n  const [sessionID, setSessionID] = useState('')\r\n  const [passcode, setPasscode] = useState('')\r\n  const [tiemrSeconds, setTimerSeconds] = useState(600)\r\n  const [timerid, setTimerId] = useState(null)\r\n  const [timerStart, setTimerStart] = useState(false)\r\n  const [blockDetail, setBlockDetail] = useState(false)\r\n  const [sessionInfo, setSessionInfo] = useState(false)\r\n  const [gameOver, setGameOver] = useState(true)\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // save info to cookies\r\n  useEffect(() => {\r\n    if (sessionID) {\r\n      Cookies.set('sessionID', sessionID)\r\n    }\r\n  }, [sessionID])\r\n  useEffect(() => {\r\n    if (privateID) {\r\n      Cookies.set('privateID', privateID)\r\n    }\r\n  }, [privateID])\r\n  useEffect(() => {\r\n    if (passcode) {\r\n      Cookies.set('passcode', passcode)\r\n    }\r\n  }, [passcode])\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      Cookies.set('userInfo', userInfo)\r\n    }\r\n  }, [userInfo])\r\n\r\n  useEffect(() => {\r\n    if (historyLength < 0) {\r\n      setHistoryLength(0);\r\n    }\r\n  }, [historyLength])\r\n\r\n  useEffect(() => {\r\n    setHistoryLength(historyLength + 1)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [window.location.pathname])\r\n\r\n  useEffect(() => {\r\n    if (timerStart) {\r\n      clearInterval(timerid)\r\n      const timerSetStart = setInterval(() => {\r\n        setTimerSeconds(pre => pre - 1)\r\n      }, 1000)\r\n      setTimerId(timerSetStart)\r\n    } else if (timerid) {\r\n      clearInterval(timerid)\r\n    }\r\n    return () => {\r\n      if (timerid) {\r\n        clearInterval(timerid)\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [timerStart])\r\n\r\n  const checkAccountActivate = async () => {\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLogin(Cookies.get('token'));\r\n    setUserType(Cookies.get('userType'));\r\n    setUserInfo(Cookies.get('userInfo'));\r\n    setPrivateID(Cookies.get('privateID'));\r\n    setSessionID(Cookies.get('sessionID'));\r\n    setPasscode(Cookies.get('passcode'));\r\n    setHistoryLength(0);\r\n    if (Cookies.get('sessionID') && Cookies.get('token') && Cookies.get('userInfo')) {\r\n      socketio.emit(\"activate_game1\", { id: Cookies.get('userInfo'), type: Cookies.get('userType'), sid: Cookies.get('sessionID') });\r\n      socketio.emit(\"join_game1\", Cookies.get('sessionID'));\r\n    }\r\n    if (!Cookies.get('token') || Cookies.get('token') === \"undefined\" || Cookies.get('token') === null) {\r\n      navigate('/login');\r\n    } else if (Cookies.get('userType') === \"Teacher\") {\r\n      if (Cookies.get('sessionID')) {\r\n        navigate('/scenario');\r\n      } else {\r\n        navigate('/gamesetting');\r\n      }\r\n    } else if (Cookies.get('userType') === \"Student\") {\r\n      navigate('/scenario');\r\n    }\r\n    async function checkLoginStatus() {\r\n      try {\r\n        const token = Cookies.get('token');\r\n        if (!token || token === \"undefined\") return;\r\n        const result = await axios(`${EXPRESS_SERVER_URL}/auth`, { method: 'GET' })\r\n        const json = await result.data;\r\n        if (json.status !== 0) {\r\n          setLogin(null)\r\n        } else {\r\n          Cookies.set(\"token\", json.token, { expires: COOKIES_EXPIRES_TIME })\r\n          setLogin(Cookies.get('token'));\r\n        }\r\n      } catch (err) {\r\n        setLogin(null);\r\n        navigate('/login');\r\n      }\r\n    }\r\n    checkLoginStatus();\r\n    const timer = setInterval(checkLoginStatus, 5 * 60 * 1000);\r\n    setRefreshTokenTimerID(timer);\r\n    return () => clearInterval(refreshTokenTimerID);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <div className='wrap'>\r\n      {/* <div className='icon_left_div'><img className='icon_left' src=\"/PolyU_Co-branding_ISE.JPG\" alt=\"\" width={'100%'} /></div> */}\r\n      <div className='icon_left_div'><div className='icon_border'>\r\n        <img className='img-fluid' src=\"/PolyU_logo.jpeg\" alt=\"\" width={'100%'} />\r\n        <img className='img-fluid icon_left_X' src=\"/ISE_logo.jpeg\" alt=\"\" width={'59.7%'} />\r\n        </div></div>\r\n      <div className='main'>\r\n        <Context.Provider value={{\r\n          setHistoryLength: setHistoryLength,\r\n          historyLength: historyLength,\r\n          setLogin: setLogin,\r\n          setUserType: setUserType,\r\n          userToken: userToken,\r\n          userType: userType,\r\n          setUserInfo: setUserInfo,\r\n          userInfo: userInfo,\r\n          setPrivateID: setPrivateID,\r\n          // eslint-disable-next-line no-dupe-keys\r\n          privateID, privateID,\r\n          setSessionID: setSessionID,\r\n          sessionID: sessionID,\r\n          passcode: passcode,\r\n          setPasscode: setPasscode,\r\n          socket: socketio,\r\n          setTimerSeconds: setTimerSeconds,\r\n          tiemrSeconds: tiemrSeconds,\r\n          setTimerStart: setTimerStart,\r\n          blockDetail: blockDetail,\r\n          setBlockDetail: setBlockDetail,\r\n          sessionInfo: sessionInfo,\r\n          setSessionInfo: setSessionInfo,\r\n          gameOver: gameOver,\r\n          setGameOver: setGameOver\r\n        }}>\r\n          <Outlet />\r\n        </Context.Provider>\r\n      </div>\r\n\r\n      <div className='icon_right_div'><div className='icon_border'><img className='img-fluid' alt=\"\" src=\"/SCM_HSU_short.png\" width={'100%'} /></div></div>\r\n      {/* <div className='icon_right_div'><img className='icon_right' alt=\"\" src=\"/SCM_HSU_short.png\" width={'100%'} /></div> */ }\r\n    </div >\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport './index.css';\r\nimport { Button, Modal, } from 'react-bootstrap';\r\n\r\nexport default function ErrorModal(props) {\r\n\r\n    var { errorTitleMSG, errorMSG, showErrorModal, setShowErrorModal, } = props;\r\n\r\n    return (\r\n        <Modal\r\n            show={showErrorModal}\r\n            onHide={() => setShowErrorModal(false)}\r\n            aria-labelledby=\"example-modal-sizes-title-lg\"\r\n            centered\r\n            className=\"ErrorModal_ModalStyle\">\r\n            <Modal.Header className=\"ErrorModal_Modalbc\">\r\n                <Modal.Title>{errorTitleMSG}</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body className=\"ErrorModal_Modalbc\">\r\n                {errorMSG}\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer className=\"ErrorModal_Modalbc\">\r\n                <Button variant=\"secondary\" onClick={() => setShowErrorModal(false)} className=\"LoginPage_ModalCloasebtn\">Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}","import React, { useState, useContext } from 'react';\r\nimport { Form, } from 'react-bootstrap';\r\nimport { Modal, } from 'react-bootstrap';\r\nimport './index.css'\r\nimport axios from '../../axios'\r\nimport Cookies from 'js-cookie'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { EXPRESS_SERVER_URL, COOKIES_EXPIRES_TIME } from \"../../config\";\r\nimport ErrorModal from '../ErrorModal';\r\nimport { Context } from '../../context/Context'\r\nimport { socket as socketio } from \"../../socket\"\r\n\r\nexport default function LoginModal(props) {\r\n    const [teacherId, setTeacherId] = useState('');\r\n    const [teacherPWD, setTeacherPWD] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n    const [showErrorModal, setShowErrorModal] = useState(false);\r\n    const [errorMSG, setErrorMSG] = useState('');\r\n    var { showLoginModal, setShowLoginModal, setLogin, setUserType, setUserInfo } = props;\r\n    const { setPrivateID, setPasscode, setSessionID } = useContext(Context);\r\n\r\n    function checkHaveData(str) {\r\n        if (str === '') return true;\r\n    }\r\n\r\n    function checkHaveSpace(str) {\r\n        if (str.trim().length === 0) return true;\r\n    }\r\n\r\n    async function Login_teacher(e) {\r\n\r\n        if (checkHaveData(teacherId) || checkHaveData(teacherPWD)) {\r\n            setErrorMSG(\"Please enter your Teacher ID and Password!\")\r\n            setShowLoginModal(false)\r\n            setShowErrorModal(true)\r\n            return\r\n        }\r\n\r\n        if (checkHaveSpace(teacherId) && checkHaveSpace(teacherPWD)) {\r\n            setErrorMSG(\"Please don't only space\")\r\n            setShowLoginModal(false)\r\n            setShowErrorModal(true)\r\n            return\r\n        }\r\n\r\n        try {\r\n            e.preventDefault();\r\n            const result = await axios(`${EXPRESS_SERVER_URL}/auth/teacher`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: { tid: teacherId.replace(/\\s*/g, \"\"), pw: teacherPWD.replace(/\\s*/g, \"\") }\r\n            })\r\n            const json = await result.data;\r\n            if (json.status === 0) {\r\n                setLogin(json.token);\r\n                setUserType(\"Teacher\")\r\n                setUserInfo(teacherId.replace(/\\s*/g, \"\"))\r\n                Cookies.set(\"token\", json.token, { expires: COOKIES_EXPIRES_TIME })\r\n                Cookies.set(\"userType\", \"Teacher\")\r\n                socketio.emit(\"activate_game1\", { id: Cookies.get('userInfo'), type: Cookies.get('userType') });\r\n                // check session created\r\n                const result2 = await axios(`${EXPRESS_SERVER_URL}/game1/session/tid`, { method: 'GET' })\r\n                const json2 = await result2.data;\r\n                console.log(json2);\r\n                if (json2.status === 0) {\r\n                    if (json2.session && json2.session.info && json2.session.info.sid) {\r\n                        setPrivateID(json2.session.info.pid);\r\n                        setPasscode(json2.session.info.passcode);\r\n                        setSessionID(json2.session.info.sid);\r\n                        navigate('/nodedashboard');\r\n                    } else {\r\n                        navigate('/gamesetting');\r\n                    }\r\n                } else {\r\n                    setErrorMSG(json2.err)\r\n                    setShowLoginModal(false)\r\n                    setShowErrorModal(true)\r\n                }\r\n            } else {\r\n                if (json.err === \"Account is already logged in\") {\r\n                    setErrorMSG(\"Account is already logged in!\")\r\n                    setShowLoginModal(false)\r\n                    setShowErrorModal(true)\r\n                }else{\r\n                    setErrorMSG(json.err)\r\n                    setShowErrorModal(true)\r\n                }\r\n            }\r\n        } catch (err) {\r\n            setErrorMSG(err.response ? err.response.data.error : err.message)\r\n            setShowLoginModal(false)\r\n            setShowErrorModal(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <Modal\r\n                show={showLoginModal}\r\n                onHide={() => setShowLoginModal(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                backdrop=\"static\"\r\n                centered>\r\n                <Modal.Header closeButton>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form className=\"loginModalForm\">\r\n                        <div className=\"form-floating\">\r\n                            <Form.Group className=\"mb-3\" controlId=\"teacherid\">\r\n                                <Form.Label>Teacher ID</Form.Label>\r\n                                <Form.Control type=\"teacherid\" placeholder=\"Teacher ID\" onChange={e => setTeacherId(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"teacherPWD\" >\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"teacherPWD\" placeholder=\"Teacher password\" onChange={e => setTeacherPWD(e.target.value)} />\r\n                            </Form.Group>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"setShowLoginModal_div_Login\">\r\n                        <input className=\"setShowLoginModal_btn_Login\" type=\"button\" value=\"Login\" onClick={e => Login_teacher(e)} />\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <ErrorModal showErrorModal={showErrorModal} setShowErrorModal={setShowErrorModal} errorTitleMSG='Login Error' errorMSG={errorMSG} />\r\n        </main>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Form, } from 'react-bootstrap';\r\nimport LoginModal from \"../../comonents/LoginModal\";\r\nimport ErrorModal from '../../comonents/ErrorModal';\r\nimport './index.css'\r\nimport axios from '../../axios'\r\nimport Cookies from 'js-cookie'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { EXPRESS_SERVER_URL, COOKIES_EXPIRES_TIME, MAX_MINER_COUNT } from \"../../config\";\r\nimport { Context } from '../../context/Context'\r\n// import { io } from \"socket.io-client\";\r\n\r\nexport default function LoginPage(props) {\r\n    // Login Modal\r\n    const [showLoginModal, setShowLoginModal] = useState(false);\r\n    // Error Modal\r\n    const [showErrorModal, setShowErrorModal] = useState(false);\r\n    const [errorMSG, setErrorMSG] = useState('');\r\n    const [studentId, setStudentId] = useState('');\r\n    const [passCode, setPassCode] = useState('');\r\n    // Context\r\n    const { setPasscode, setHistoryLength, setLogin, setUserType, setUserInfo, setPrivateID, setSessionID, sessionID, socket } = useContext(Context);\r\n    // navigate\r\n    const navigate = useNavigate();\r\n\r\n    function checkHaveData(str) {\r\n        if (str === '') return true;\r\n    }\r\n\r\n    function checkHaveSpace(str) {\r\n        if (str.trim().length === 0) return true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        Cookies.remove('token')\r\n        Cookies.remove('userType')\r\n        Cookies.remove('sessionID')\r\n        setHistoryLength(0)\r\n        setLogin(null)\r\n        setUserType(null)\r\n        if (socket) {\r\n            socket.emit(\"leaveSession\", sessionID);\r\n            socket.emit(\"deactivate\", sessionID);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    async function Login_student(e) {\r\n\r\n        if (checkHaveData(studentId) || checkHaveData(passCode)) {\r\n            setErrorMSG(\"Please enter your Student ID and Passcode!\")\r\n            setShowErrorModal(true)\r\n            return\r\n        }\r\n\r\n        if (checkHaveSpace(studentId) && checkHaveSpace(passCode)) {\r\n            setErrorMSG(\"Please don't only space\")\r\n            setShowErrorModal(true)\r\n            return\r\n        }\r\n\r\n        try {\r\n            e.preventDefault();\r\n            const result = await axios(`${EXPRESS_SERVER_URL}/auth/student`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                data: { pbid: studentId.replace(/\\s*/g, \"\"), passcode: passCode.replace(/\\s*/g, \"\") }\r\n            })\r\n            const json = await result.data;\r\n            if (json.status === 0) {\r\n                Cookies.set(\"token\", json.token, { expires: COOKIES_EXPIRES_TIME })\r\n                const miner_count_result = await axios(`${EXPRESS_SERVER_URL}/game1/session/${json.sid}/miners/count`, { method: 'GET' })\r\n                const miner_count_json = await miner_count_result.data;\r\n                if (miner_count_json.count <= MAX_MINER_COUNT) {\r\n                    setLogin(json.token);\r\n                    setUserType(\"Student\")\r\n                    setUserInfo(studentId.replace(/\\s*/g, \"\"))\r\n                    Cookies.set(\"token\", json.token, { expires: COOKIES_EXPIRES_TIME })\r\n                    Cookies.set(\"userType\", \"Student\")\r\n                    const result2 = await axios(`${EXPRESS_SERVER_URL}/game1/session/miners`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                    })\r\n                    const json2 = await result2.data;\r\n                    if (json2.status === 0) {\r\n                        setPrivateID(json2.pvid);\r\n                        setSessionID(json2.sid);\r\n                        setPasscode(passCode.replace(/\\s*/g, \"\"));\r\n                        socket.emit(\"activate_game1\", { sid: json2.sid, id: studentId.replace(/\\s*/g, \"\"), type: \"Student\" });\r\n                        socket.emit(\"join_game1\", json2.sid);\r\n                        navigate('/scenario');\r\n                    }\r\n                } else {\r\n                    Cookies.remove(\"token\");\r\n                    setErrorMSG(\"Game session full (max miner \" + MAX_MINER_COUNT + \")\");\r\n                    setShowErrorModal(true)\r\n                }\r\n            } else {\r\n                if (json.err === \"Account is already logged in\") {\r\n                    setErrorMSG(\"Account is already logged in!\")\r\n                    setShowErrorModal(true)\r\n                }else{\r\n                    setErrorMSG(json.err)\r\n                    setShowErrorModal(true)\r\n                }\r\n            }\r\n        } catch (err) {\r\n            setErrorMSG(err.response ? err.response.data.error : err.message)\r\n            setShowErrorModal(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginPag_body\">\r\n            <div>\r\n                <img src=\"/login_logo.jpeg\" className=\"img-fluid\" alt=\"\" width={'100%'} />\r\n                <div className=\" div_title\">\r\n                    <div className=\"heading_MainTitle\">BlockTrain</div>\r\n                    <div className=\"heading_title\">The Basic Training Game in Blockchain Concepts</div>\r\n                </div>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <Form className=\"loginForm\" >\r\n                <div className=\"form-floating\">\r\n                    <Form.Group className=\"mb-3\" controlId=\"studentid\">\r\n                        <Form.Label>Student ID</Form.Label>\r\n                        <Form.Control type=\"studentid\" placeholder=\"Student ID\" onChange={e => setStudentId(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"passcode\" onChange={e => setPassCode(e.target.value)} >\r\n                        <Form.Label>Passcode</Form.Label>\r\n                        <Form.Control type=\"passcode\" placeholder=\"Passcode\" />\r\n                    </Form.Group>\r\n                </div>\r\n            </Form>\r\n\r\n            <div className=\"div_GameIn\">\r\n                <input className=\"btn_GameIn\" type=\"button\" value=\"Game in\" onClick={e => Login_student(e)} />\r\n            </div>\r\n            <br />\r\n            <div className=\"div_GameSettings\">\r\n                <input className=\"btn_GameSettings\" type=\"button\" value=\"Game Settings\" onClick={() => setShowLoginModal(true)} />\r\n            </div>\r\n            <br />\r\n\r\n            <LoginModal showLoginModal={showLoginModal} setShowLoginModal={setShowLoginModal} setLogin={setLogin} setUserType={setUserType} setUserInfo={setUserInfo} />\r\n            <ErrorModal showErrorModal={showErrorModal} setShowErrorModal={setShowErrorModal} errorTitleMSG='Login Error' errorMSG={errorMSG} />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function ArrowLeft() {\r\n    return (\r\n  \r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-left\" viewBox=\"0 0 16 16\">\r\n            <path fillRule=\"evenodd\" d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\" />\r\n        </svg>\r\n   \r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Col, Button } from 'react-bootstrap'\r\nimport ArrowLeft from '../Icons/Arrow-left'\r\nimport './index.css'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Context } from '../../context/Context'\r\n\r\nexport default function TitleBar(props) {\r\n    var { lastPageName } = props;\r\n    const { setHistoryLength, historyLength, } = useContext(Context);\r\n    const [ backLastPage, setBackLastPage] = useState('none')\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (lastPageName != \"\") {\r\n            setBackLastPage(\"\")\r\n        }\r\n    }, [])\r\n\r\n    function test() {\r\n        var backPage = \"/\" + lastPageName;\r\n        navigate(backPage);\r\n        // setHistoryLength(historyLength - 2)\r\n        // const h = historyLength - 1;\r\n        // if (h <= 0) {\r\n        //     navigate('/login');\r\n        // } else {\r\n        //     navigate(-1)\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div className=\"TitleBar_bar\">\r\n            <div className='item'>\r\n                <Button variant=\"none\" style={{ display: backLastPage }} onClick={test}><b><ArrowLeft /></b></Button>\r\n            </div>\r\n            <p className=\"h2 toptitle TitleBar_toptitle item \">Blockchain Game</p>\r\n            <div className=\"item\"></div>\r\n            {/* <Col xs={3} md={3} >\r\n                <Button variant=\"none\" style={{ display: backLastPage }} onClick={test}><b><ArrowLeft /></b></Button>\r\n            </Col>\r\n            <Col xs={9} md={9}>\r\n                <p className=\"h2 toptitle TitleBar_toptitle\">Bloackchain Game</p>\r\n            </Col> */}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import './index.css'\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { Row, Card } from 'react-bootstrap'\r\nimport TitleBar from '../../comonents/TitleBar'\r\nimport { Context } from '../../context/Context';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Role(props) {\r\n    const [nodeIsLock, setNodeIsLock] = useState(\"White\");\r\n    const [minerIsLock, setMinerIsLock] = useState(\"White\");\r\n    // Context\r\n    const { userType } = useContext(Context);\r\n    // Navigate\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (userType === \"Teacher\") {\r\n            setMinerIsLock(\"grey\")\r\n        } else if (userType === \"Student\") {\r\n            setNodeIsLock(\"grey\")\r\n        } else { }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    function toNodehome(e) {\r\n        if (userType === \"Teacher\") {\r\n            navigate('/nodehome')\r\n        } else { }\r\n    }\r\n\r\n    function toMinterhome(e) {\r\n        if (userType === \"Student\") {\r\n            navigate('/minerhome')\r\n        } else { }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <TitleBar backLastPage=\"\" lastPageName=\"\" />\r\n            <div className='text-center chooserole'>\r\n                <p className='h3'>Choose your role</p>\r\n            </div>\r\n            <div className='roles'>\r\n\r\n                <Row>\r\n                    <div style={{ width: '45%', height: '45%', marginRight: '2.5%', marginLeft: '0.2rem', textDecoration: 'none' }} type='button' onClick={e => toNodehome()}>\r\n                        <Card style={{ width: '100%', height: '100%', borderRadius: '15px', backgroundColor: nodeIsLock }} >\r\n                            <Card.Body className='card_body' >\r\n\r\n                                <Card.Text className='text-role text-center mobile-phone' style={{ color: 'black'  }}>\r\n                                    Node\r\n                                </Card.Text>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div style={{ width: '45%', height: '45%', marginRight: '2.5%', marginLeft: '0.2rem', textDecoration: 'none' }} type='button' onClick={e => toMinterhome()}>\r\n                        <Card style={{\r\n                            width: '100%', height: '100%', borderRadius: '15px', backgroundColor: minerIsLock\r\n                        }}  >\r\n                            <Card.Body className='card_body'>\r\n\r\n                                <Card.Text className='text-role text-center mobile-phone' style={{ color: 'black'}} >\r\n                                    Miner\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Button, Image } from 'react-bootstrap'\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport './index.css'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function HashCalculationPage() {\r\n    const navigate = useNavigate();\r\n\r\n    function toRole(e) {\r\n        navigate('/role')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"\" />\r\n\r\n            <div className='text-center'>\r\n                <p className='h3' style={{ color: '#801E9E', paddingTop: '1rem', paddingBottom: '1rem' }}>How to Do a Hash Calculation?</p>\r\n            </div>\r\n\r\n            <div className='hash_border'>\r\n\r\n                <div className='hash_border_text'>\r\n                    <p><b>The rule of hash Calculation: </b></p>\r\n\r\n                    <p>\r\n                        Hash = 10*(A + B + C + D + E) + Prev. Hash (last three digits) + Nonce<br /><br />\r\n                        Nonce = a value between 1 and 21 (to be adjusted to produce a hash that can be completely divided by 3 AND 7)<br />\r\n                        <br />\r\n                        Each block has five data fields (Customer ID, Product ID, Product Quantity, Product Name and Delivery Date).<br />\r\n                        A = Value of the first letter of Customer ID<br />\r\n                        B = Value of the first letter of Product ID<br />\r\n                        C = Value of the Product Quantity<br />\r\n                        D = Value of the first letter of Product Name<br />\r\n                        E = Value of the first two digits (i.e. day) of Delivery Date<br />\r\n                        <br />\r\n\r\n                    </p>\r\n                    <Image src=\"/calculationinfo.png\" fluid />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className='hc_start'>\r\n                <Button variant=\"none\" style={{ width: '100%', color: 'white' }} onClick={e => toRole()}>Start</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Image } from 'react-bootstrap'\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport './index.css'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function ScenarioPage() {\r\n    const navigate = useNavigate();\r\n\r\n    function toHashcalculation(e) {\r\n        navigate('/hashcalculation')\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"\" />\r\n            <br />\r\n            <div className='ScenarioPage_topic'>Case Scenario:</div>\r\n            <br />\r\n\r\n            <div className='ScenarioPage_dataBox'>\r\n\r\n                <div className='ScenarioPage_dataText'>\r\n                    <p><b>Traceability of wine transactions<br /><br /></b>A Simple PoW Blockchain</p>\r\n\r\n                    <p>\r\n                        The presence of blockchain technology revamps the state-of-the-art supply chain traceability systems that are used for tracking and authenticating transactions and shipments along the global supply chain. By doing so, digital transactions can be created and verified in a secure and immutable manner so as to enhance the transparency and visibility of the supply chain activities. <br />\r\n                        <br />\r\n                        Considering that there is a wine supplier in Hong Kong, named as ABC Wines Limited, manages their wine products to several retailers located in different districts of Hong Kong. Customers can place the orders to the retailers everyday, while retailers are responsible for fulfilling the wine demand to end customers. To effectively track and trace the wine transactions between retailers and customers, a blockchain system is developed for the supply chain traceability.\r\n                        <br /><br />\r\n                        In this system, there are two roles:\r\n                    </p>\r\n                    <ul>\r\n                        <li>“Node”: serves as a retailer who accept the customer demand and create the transaction accordingly to the system</li><br />\r\n                        <li>“Miner”: is a peer node who is dedicated to mining the transactions on the blockchain.</li>\r\n                    </ul>\r\n                    <Image src=\"/BlockchainDiagram.jpg\" fluid />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div className=\"ScenarioPage_div_Next\">\r\n                <input className=\"ScenarioPage_btn_Next\" type=\"button\" value=\"Next\" onClick={e => toHashcalculation()} />\r\n            </div>\r\n\r\n            <br />\r\n        </main>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Modal, } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport copy from 'copy-to-clipboard';\r\n\r\nimport './index.css'\r\n\r\nexport default function PasscodeModal(props) {\r\n    var { showPasscodeModal, setShowPasscodeModal, passcode } = props;\r\n    const [btn_color,setBtnColor] =useState(\"#bbbbbb\")\r\n    const navigate = useNavigate();\r\n\r\n    const copyPasscode = () => {\r\n        setBtnColor(\"#B9E9FF\")\r\n        copy(passcode);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={showPasscodeModal}\r\n            onHide={() => setShowPasscodeModal(false)}\r\n            aria-labelledby=\"example-modal-sizes-title-lg\"\r\n            backdrop=\"static\"\r\n            centered>\r\n            <Modal.Body>\r\n                <div className='PasscodeModal_body'>\r\n                    <div className='PasscodeModal_title'>Your Passcode is:</div>\r\n                    <div className='PasscodeModal_PasscodeBox'>\r\n                        <div>{passcode}</div>\r\n                        <div className=\"PasscodeModal_div_Copy\">\r\n                            <input className=\"PasscodeModal_btn_Copy\" style={{background:btn_color}} type=\"button\" value=\"Copy\" onClick={copyPasscode} />\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"PasscodeModal_div_Continue\">\r\n                        <input className=\"PasscodeModal_btn_Continue\" type=\"button\" value=\"Continue\" onClick={() => navigate('/scenario')} />\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n","import React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport { Form } from 'react-bootstrap'\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport PasscodeModal from \"../../comonents/PasscodeModal\";\r\nimport './index.css'\r\nimport { EXPRESS_SERVER_URL } from \"../../config\";\r\nimport axios from '../../axios'\r\nimport { Context } from '../../context/Context'\r\n// import { io } from \"socket.io-client\";\r\nimport ErrorModal from '../../comonents/ErrorModal';\r\n\r\nexport default function GameSettingPage() {\r\n    const [showPasscodeModal, setShowPasscodeModal] = useState(false);\r\n    const [showErrorModal, setShowErrorModal] = useState(false);\r\n    const [creation, setCreation] = useState(\"5\");\r\n    const [mining, setMining] = useState(\"5\");\r\n    // const [selectedGame, setSelectedGame] = useState(1);\r\n    const [xlsx, setXlsx] = useState(null);\r\n    const [modalShowPasscode, setModalShowPasscode] = useState(0);\r\n    const [selectGameColor, setSelectGameColor] = useState(\"\");\r\n    const [selectEdGame, setSelectEdGame] = useState(false);\r\n    const [fileName, setFileName] = useState(\"\");\r\n    const [errorMSG, setErrorMSG] = useState('');\r\n    const { setPrivateID, setPasscode, setSessionID, socket } = useContext(Context);\r\n    const uploadFileData = useRef(null)\r\n\r\n    const createGameSession = async () => {\r\n        if(!selectEdGame){\r\n            showErrorModelFunction(\"Please select a game!\");\r\n            return;\r\n        }\r\n\r\n        if (!xlsx) {\r\n            showErrorModelFunction(\"Please upload an Excel file!\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('tfbc', creation);\r\n            formData.append('tfbm', mining);\r\n            formData.append('xlsx', xlsx);\r\n            const result = await axios(`${EXPRESS_SERVER_URL}/game1/session`, {\r\n                method: 'POST',\r\n                data: formData\r\n            })\r\n            const resultJson = await result.data;\r\n            if (resultJson.status === 0) {\r\n                setPrivateID(resultJson.pid);\r\n                setPasscode(resultJson.passcode);\r\n                setSessionID(resultJson.sid);\r\n                setModalShowPasscode(resultJson.passcode);\r\n                setShowPasscodeModal(true);\r\n                socket.emit(\"join_game1\", resultJson.sid);\r\n            } else {\r\n                console.log(resultJson.err);\r\n                showErrorModelFunction(resultJson.err);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n            showErrorModelFunction(err);\r\n        }\r\n    }\r\n\r\n    function showErrorModelFunction(msg) {\r\n        setErrorMSG(msg);\r\n        setShowErrorModal(true);\r\n    }\r\n\r\n    function seletedGame(e) {\r\n        setSelectEdGame(true)\r\n        setSelectGameColor(\"chartreuse\")\r\n    }\r\n\r\n    const uploadFileFunction = () => {\r\n        uploadFileData.current.click()\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (xlsx != null) {\r\n            console.log(xlsx.name);\r\n            setFileName(xlsx.name);\r\n        }\r\n    }, [xlsx])\r\n\r\n    return (\r\n        <main>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"\" />\r\n            <br />\r\n            <div className='GameSettingPage_topic'>Game Settings</div>\r\n            <br />\r\n            <Form className=\"GameSettingPage_Form\">\r\n                <div className=\"form-floating\">\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Time for Block Creation</Form.Label>\r\n                        <Form.Select defaultValue={5} onChange={e => setCreation(e.target.value)}>\r\n                            <option>5</option>\r\n                            <option>10</option>\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Time for Block Mining</Form.Label>\r\n                        <Form.Select defaultValue={5} onChange={e => setMining(e.target.value)}>\r\n                            <option >5</option>\r\n                            <option >10</option>\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                </div>\r\n            </Form>\r\n\r\n            <div className='GameSettingPage_GameList_topic'>Select Game:</div>\r\n\r\n\r\n            <div className='GameSettingPage_GameList'>\r\n                <input type=\"button\" className='GameSettingPage_gamebox GameSettingPage_gameready' style={{ color: 'black', backgroundColor: selectGameColor }} value=\"Game 1: Simple PoW Blockchain (Only Miners)\" onClick={e => seletedGame()} />\r\n                <br /><br />\r\n                <input type=\"button\" className='GameSettingPage_gamebox' value=\"Game 2: Blockchain (Miners + Merkle Tree)\" />\r\n                <br /><br />\r\n            </div>\r\n            <br />\r\n            <div className='GameSettingPage_DataList'>\r\n                <table className='GameSettingPage_DataList_table'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className='GameSettingPage_DataList_td'>\r\n                                <div className='GameSettingPage_DataList_topic'>Data:</div>\r\n                            </td>\r\n                            <td className='GameSettingPage_DataList_td'>\r\n                                <input type=\"button\" onClick={uploadFileFunction} className='GameSettingPage_DataList_btn' value=\"Browse\" />\r\n                                <input ref={uploadFileData} className='fileUpload' type=\"file\" accept='.xlsx' onChange={e => setXlsx(e.target.files[0])} />\r\n                                <label>{fileName}</label>\r\n                            </td>\r\n                            <td className='GameSettingPage_DataList_td'>\r\n                                <a href={`${EXPRESS_SERVER_URL}/game1/template`} download><input type=\"button\" className='GameSettingPage_DataList_btn' value=\"Download Template\" /></a>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <br />\r\n            <div className='GameSettingPage_submit_div'>\r\n                <input className=\"GameSettingPage_submit_btn\" type=\"button\" value=\"Submit\" onClick={createGameSession} />\r\n            </div>\r\n            <br />\r\n\r\n            <PasscodeModal passcode={modalShowPasscode} showPasscodeModal={showPasscodeModal} setShowPasscodeModal={setShowPasscodeModal} />\r\n            <ErrorModal showErrorModal={showErrorModal} setShowErrorModal={setShowErrorModal} errorTitleMSG='Input Error' errorMSG={errorMSG} />\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\nimport './index.css'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function BtnShow(props) {\r\n    const navigate = useNavigate();\r\n    var { text, link, css } = props;\r\n\r\n    function toNextPage(e) { navigate(link) }\r\n\r\n    return (\r\n        <input type=\"button\" onClick={e => toNextPage()} className='btn_bandp' style={{ height: css.h, WebkitBorderRadius: css.r }} value={text} />\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport BtnShow from '../../comonents/Buttons';\r\nimport './index.css'\r\n// import { useNavigate } from 'react-router-dom';\r\n// import Cookies from 'js-cookie'\r\nimport { Context } from '../../context/Context'\r\n// import { EXPRESS_SERVER_URL, COOKIES_EXPIRES_TIME } from \"../../config\";\r\n// import axios from '../../axios'\r\nimport copy from 'copy-to-clipboard';\r\nimport Cookies from 'js-cookie'\r\n\r\nexport default function NodeHomePage() {\r\n    const dashboard = { w: '100%', h: 'auto', c: 'gainsboro', r: '20px' }\r\n    const points = { w: '100%', h: 'auto', c: 'gainsboro', r: '20px' }\r\n    // const navigate = useNavigate();\r\n\r\n    const { userInfo, privateID } = useContext(Context);\r\n\r\n    // async function Get_Information(e) {\r\n    // const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/`, {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'Accept': 'application/json',\r\n    //         'Content-Type': 'application/json'\r\n    //     },\r\n    // data: { pbid: studentId.replace(/\\s*/g, \"\"), passcode: passCode.replace(/\\s*/g, \"\") }\r\n    // })\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"\" />\r\n\r\n            <div className='minter_h_btns'>\r\n                <div className='col  minter_h_border ' style={{ marginTop: \"1rem\" }} >\r\n\r\n                    <table class=\"table  align-middle table-borderless \">\r\n\r\n                        <tbody>\r\n                            <tr className='text-center' >\r\n                                <td width='150px'>Passcode</td>\r\n\r\n                                <td width='150px' className='text-start' >:{Cookies.get('passcode')}</td>\r\n                                <td width='170px'  > <input className=\"PasscodeModal_btn_Copy\" type=\"button\" style={{width:'4rem'}} value=\"Copy\" onClick={e => copy(Cookies.get('passcode'))} /></td>\r\n                            </tr>\r\n                            <tr className='text-center'>\r\n\r\n                                <td width='150px'>Your Public ID</td> \r\n                                <td width='150px' className='text-start'> :{userInfo}</td>\r\n                            </tr>\r\n                            <tr className='text-center'>\r\n                                <td width='150px'>Your Private ID</td>\r\n                                <td width='150px' className='text-start'>:{privateID}</td>\r\n                                <td width='170px'  ><input className=\"PasscodeModal_btn_Copy \" type=\"button\" style={{width:'4rem'}}  value=\"Copy\" onClick={e => copy(privateID)} /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className='col'>\r\n                    <BtnShow text=\"Dashboard\" link=\"/nodedashboard\" css={dashboard} />\r\n                </div>\r\n\r\n                <div className='col'>\r\n                    <BtnShow text=\"Points\" link=\"/point\" css={points} />\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}","import React from 'react';\r\nimport { PieChart, Pie, Tooltip } from 'recharts';\r\n\r\n\r\n\r\nexport default function PieChat(props) {\r\n    var { data } = props\r\n\r\n    return (\r\n        <div>\r\n\r\n            <PieChart width={90} height={90} >\r\n                <Pie\r\n                    dataKey=\"value\"\r\n                    nameKey=\"name\"\r\n                    isAnimationActive={true}\r\n                    data={data}\r\n                    cx=\"70%\"\r\n                    cy=\"50%\"\r\n                    outerRadius={30}\r\n                    fill=\"#8884d8\"\r\n                />\r\n                {/* <Pie dataKey=\"value\" data={data02} cx={500} cy={200} innerRadius={40} outerRadius={80} fill=\"#82ca9d\" /> */}\r\n                <Tooltip />\r\n            </PieChart>\r\n            ({data[0].value + \"/\" + (data[1].value + data[0].value)})\r\n        </div>\r\n    );\r\n}\r\n\r\n","import { React, useState, useContext } from 'react'\r\nimport PieChat from '../PieChat';\r\nimport './index.css'\r\nimport { Context } from '../../context/Context'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\nexport default function Tables(props) {\r\n\r\n    // const sessionInfo = props.sessionInfo;\r\n\r\n    var json = props.json;\r\n    var t_type = json.table_type\r\n    var ths = json.head\r\n    var tds = json.body\r\n    const { userType, setBlockDetail } = useContext(Context);\r\n    // const [userType, setUserType] = useState(\"Student\")\r\n    const [done, setDone] = useState(false)\r\n    //table_col_4\r\n    //table_col_5_button\r\n    //table_col_4_button\r\n    //table_barchat\r\n\r\n    const navigate = useNavigate();\r\n\r\n    function dateF(d) {\r\n        let monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\",\r\n            \"May\", \"Jun\", \"Jul\", \"Aug\",\r\n            \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n        var date = new Date(d);\r\n        return `${date.getDate()}-${date.getMonth()+1}-${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`\r\n\r\n    }\r\n\r\n    const read_th = () => {\r\n        if (ths !== null) {\r\n            return (\r\n                ths.map((item) => {\r\n                    return (\r\n                        <th>\r\n                            {item}\r\n                        </th>\r\n                    )\r\n                })\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    const Detail_btn = (value, item) => {\r\n        if (userType === \"Student\") {\r\n            if (value === 1) {\r\n                return (\r\n                    <td className='text-center '>\r\n                        <label >Chained</label>\r\n                        <br />\r\n                        <button type='button' className='table_btn_false' onClick={() => { setBlockDetail(item); navigate('/chainedblockdetail') }}>Detail</button>\r\n                    </td>\r\n                )\r\n            } else if (value === 2) {\r\n                return (\r\n                    <td className='text-center '>\r\n                        <label >Failed</label>\r\n                        <br />\r\n                        <button type='button' className='table_btn_false' onClick={() => { setBlockDetail(item); navigate('/chainedblockdetail') }}>Detail</button>\r\n                    </td>\r\n                )\r\n            } else {\r\n                return (\r\n                    <td className='text-center '>\r\n                        <label >Created</label>\r\n                        <br />\r\n                        <button type='button' className='table_btn_false' onClick={() => { setBlockDetail(item); navigate('/calculatehash') }}>Mine</button>\r\n                    </td>\r\n                )\r\n            }\r\n        } else {\r\n            if (value === 1) {\r\n                return (\r\n                    <td className='text-center '>\r\n                        <label >Chained</label>\r\n                        <br />\r\n                        <button type='button' className='table_btn_false' onClick={() => { setBlockDetail(item); navigate('/chainedblockdetail') }}>Detail</button>\r\n                    </td>\r\n                )\r\n            } else if (value === 2) {\r\n                return (\r\n                    <td className='text-center '>\r\n                        <label >Failed</label>\r\n                        <br />\r\n                        <button type='button' className='table_btn_false' onClick={() => { setBlockDetail(item); navigate('/chainedblockdetail') }}>Detail</button>\r\n                    </td>\r\n                )\r\n            } else {\r\n                return (\r\n                    <td className='text-center '>\r\n                        <label >Created</label>\r\n                        <br />\r\n                        <button type='button' className='table_btn_false' onClick={() => { setBlockDetail(item); navigate('/verification') }}>Verification</button>\r\n                    </td>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const TF_btn = (value, correct) => {\r\n\r\n        if (correct === 1) {\r\n            return (\r\n                <td className='text-center '>\r\n                    <label >{(value / (props.total + 1)) * 100}%</label>\r\n                    <br />\r\n                    <button type='button' className='table_btn_true'>True</button>\r\n                </td>\r\n            )\r\n        } else {\r\n            return (\r\n                <td className='text-center '>\r\n                    <label >{(value / (props.total + 1)) * 100}%</label>\r\n                    <br />\r\n                    <button type='button' className='table_btn_false'>False</button>\r\n                </td>\r\n            )\r\n        }\r\n\r\n    }\r\n    const read_tds = () => {\r\n        if (tds !== null) {\r\n            if (t_type === \"table_col_3\") {\r\n                var rank = 1;\r\n                return (\r\n                    tds.map((item, key) => {\r\n                        rank++;\r\n                        if (rank > 6) {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{item.pbid}</td>\r\n                                    <td>{item.points}</td>\r\n                                    <td>{rank - 1}</td>\r\n                                </tr>\r\n                            )\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    })\r\n                )\r\n            } else if (t_type === \"table_col_4\") {\r\n                return (\r\n                    tds.map((item, key) => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{key + item.td1}</td>\r\n                                <td>{key + item.td2}</td>\r\n                                <td>{key + item.td3}</td>\r\n                                <td>{key + item.td4}</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                )\r\n            } else if (t_type === \"table_col_5_button\") {\r\n                return (\r\n                    tds.map((item) => {\r\n                        return (\r\n                            <tr key={item.pbid}>\r\n                                <td>{dateF(item.ad)}</td>\r\n                                <td>{item.pbid}</td>\r\n                                <td>{item.nonce}</td>\r\n                                <td>{item.hash}</td>\r\n                                {TF_btn(item.votes, item.correct)}\r\n                            </tr>\r\n                        )\r\n                    })\r\n                )\r\n            } else if (t_type === \"table_col_4_button\") {\r\n                return (\r\n                    tds.map((item) => {\r\n\r\n                        if (item.bid > 0 && item.cd !== null) {\r\n                            return (\r\n                                <tr key={item.bid}>\r\n\r\n                                    <td>{item.bid}</td>\r\n                                    <td style={{ padding: 'none' }}><button type=\"button\" className='table_btn_detail' onClick={() => { setBlockDetail(item); navigate('/blockdata') }}>Detail</button></td>\r\n                                    <td>{dateF(item.cd)}</td>\r\n                                    {Detail_btn(item.isChained, item)}\r\n                                </tr>\r\n                            )\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    })\r\n                )\r\n            } else if (t_type === \"table_barchat\") {\r\n                return (\r\n                    tds.map((item, key) => {\r\n                        return (\r\n                            <tr>\r\n\r\n                                <td>{dateF(item.ad)}</td>\r\n                                <td>{item.pbid}</td>\r\n                                <td>{item.nonce}</td>\r\n                                <td>{item.hash}</td>\r\n                                <td>{<PieChat data={[{ name: \"Vote\", value: item.votes }, { name: \"Other\", value: (props.total - item.votes) + 1 }]} />}</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                )\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (t_type === \"table_col_3\") {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr className='text-center ths'>\r\n                            {read_th()}\r\n                        </tr>\r\n                        <div></div>\r\n                    </thead>\r\n                    <tbody className='text-center tds'  >\r\n                        {read_tds()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    } else if (t_type === \"table_col_4\") {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr className='text-center ths'>\r\n                            {read_th()}\r\n                        </tr>\r\n                        <div></div>\r\n                    </thead>\r\n                    <tbody className='text-center tds'  >\r\n                        {read_tds()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    } else if (t_type === \"table_col_5_button\") {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr className='text-center ths'>\r\n                            {read_th()}\r\n                        </tr>\r\n                        <div></div>\r\n                    </thead>\r\n\r\n                    <tbody className='text-center tds'  >\r\n                        {read_tds()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    } else if (t_type === \"table_col_4_button\") {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr className='text-center ths'>\r\n                            {read_th()}\r\n                        </tr>\r\n                        <div></div>\r\n                    </thead>\r\n\r\n                    <tbody className='text-center tds'  >\r\n                        {read_tds()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    } else if (t_type === \"table_barchat\") {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr className='text-center ths'>\r\n                            {read_th()}\r\n                        </tr>\r\n                        <div></div>\r\n                    </thead>\r\n\r\n                    <tbody className='text-center tds'  >\r\n                        {read_tds()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n}","import React, { useEffect, useContext, useState } from 'react'\r\nimport { Context } from '../../context/Context'\r\n\r\nexport default function Timer(props) {\r\n    const { setTimerStart, tiemrSeconds } = useContext(Context);\r\n    const [min, setMin] = useState(0)\r\n    const [sec, setSec] = useState(0)\r\n    const [overTime, setOverTime] = useState(false)\r\n\r\n    useEffect(() => {\r\n        // setTimerStart(true)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function updateTime() {\r\n        if (tiemrSeconds < 0) {\r\n            setOverTime(true)\r\n            if ((Math.floor(tiemrSeconds / 60) * -1 - 1) < 10) {\r\n                setMin(\"0\" + Math.floor(tiemrSeconds / 60) * -1 - 1)\r\n            } else {\r\n                setMin(Math.floor(tiemrSeconds / 60) * -1 - 1)\r\n            }\r\n            if ((tiemrSeconds % 60) * -1 < 10) {\r\n                setSec(\"0\" + ((tiemrSeconds % 60) * -1))\r\n            } else {\r\n                setSec(tiemrSeconds % 60 * -1)\r\n            }\r\n        } else {\r\n            setOverTime(false)\r\n            if ((Math.floor(tiemrSeconds / 60)) < 10) {\r\n                setMin(\"0\" + Math.floor(tiemrSeconds / 60))\r\n            } else {\r\n                setMin(Math.floor(tiemrSeconds / 60))\r\n            }\r\n            if (tiemrSeconds % 60 < 10) {\r\n                setSec(\"0\" + (tiemrSeconds % 60))\r\n            } else {\r\n                setSec(tiemrSeconds % 60)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateTime()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [tiemrSeconds]);\r\n\r\n    return (\r\n        <div style={overTime ? { color: \"rgb(175, 18, 18)\" } : { color: \"rgb(19, 185, 44)\" }}>{min}:{sec}</div>\r\n    )\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport './index.css'\r\nimport Tables from '../../comonents/Table/index';\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Context } from '../../context/Context'\r\nimport { EXPRESS_SERVER_URL } from \"../../config\";\r\nimport axios from '../../axios'\r\nimport Timer from '../../comonents/Timer'\r\n\r\nexport default function NodeDashboardPage() {\r\n    // const json = { table_type: \"table_col_4\" , head: [\"Block Index\", \"Data\", \"Timestamp\", \"Status\"], body: [{ x: 1, x2: 2, x3: 3, x4: 2 }, { x: 1, x2: 2, x3: 3, x4: 3 }, { x: 1, x2: 2, x3: 3, x4: 3 }, { x: 1, x2: 2, x3: 3, x4: 3 }, { x: 1, x2: 2, x3: 3, x4: 3 }, { x: 1, x2: 2, x3: 3, x4: 3 }, { x: 1, x2: 2, x3: 3, x4: 3 }, { x: 1, x2: 2, x3: 3, x4: 3 }, { x: 1, x2: 2, x3: 3, x4: 3 }, { x: 1, x2: 2, x3: 3, x4: 3 }] }\r\n    // const json = { table_type: 'table_col_5_button', head: [\"Block Index\", \"Data\", \"Timestamp\", \"Status\", \"Status\"], body: [{ td1: 1, td2: 2, td3: 3, td4: 3, td5: {p:49 ,v:true } },{ td1: 1, td2: 2, td3: 3, td4: 3, td5: {p:1,v:false } },{ td1: 1, td2: 2, td3: 3, td4: 3, td5: {p:49 ,v:true } },{ td1: 1, td2: 2, td3: 3, td4: 3, td5: {p:1,v:false } },{ td1: 1, td2: 2, td3: 3, td4: 3, td5: {p:49 ,v:true } },{ td1: 1, td2: 2, td3: 3, td4: 3, td5: {p:1,v:false } }] }\r\n    // const jsonsty = { table_type: 'table_col_5_button', head: [\"Block Index\", \"Data\", \"Timestamp\", \"Status\"], body: [{ td1: 1, td2: 2, td3: 3, td4: 51,td5: {p:49 ,v:true },style:\"red\" },{ td1: 1, td2: 2, td3: 3, td4: 51,td5: {p:49 ,v:true },style:\"null\" } ] }\r\n\r\n\r\n\r\n    // const data = [\r\n    //     { name: 'Group A', value: 400 },\r\n    //     { name: 'Group B', value: 300 },\r\n    // ];\r\n    // const json = { table_type: 'table_barchat', head: [\"Block Index\", \"Data\", \"Timestamp\", \"Status\", \"Status\"], body: [{ td1: 1, td2: 2, td3: 3, td4: 51, td5: { data: data, num: '12/31' } }, { td1: 1, td2: 2, td3: 3, td4: 51, td5: { data: data, num: '12/31' } }] }\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { gameOver, setGameOver, sessionID, socket, sessionInfo, setSessionInfo, setTimerStart, setTimerSeconds } = useContext(Context);\r\n    const [response, setResponse] = useState([]);\r\n    const [allowCreateBlock, setAllowCreateBlock] = useState(false);\r\n    const [minerCount, setMinerCount] = useState(0);\r\n\r\n    const getBlocks = async () => {\r\n        try {\r\n\r\n            const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/sid/${sessionID}`, { method: 'GET' })\r\n            const json = await result.data\r\n\r\n            if (json.status === 0) {\r\n                setGameOver(false);\r\n                setResponse({ table_type: 'table_col_4_button', head: [\"Block Index\", \"Data\", \"Timestamp\", \"Status\"], body: json.session.blocks })\r\n                setSessionInfo(json.session.info)\r\n                // setTimerSeconds(json.session.info.tfbc * 60)\r\n                setTimerStart(false);\r\n                setTimerSeconds(0);\r\n                var createdBlockCount = 0;\r\n                var chainedBlockCount = 0;\r\n                for (var i = 0; i < json.session.blocks.length; i++) {\r\n                    if (json.session.blocks[i].cd !== null) {\r\n                        createdBlockCount++;\r\n                        if (json.session.blocks[i].isChained === 1 || json.session.blocks[i].isChained === 2) {\r\n                            chainedBlockCount++;\r\n                        } else {\r\n                            const createDate = new Date(json.session.blocks[i].cd);\r\n                            createDate.setSeconds(createDate.getSeconds() + json.session.info.tfbc * 60);\r\n                            var between = (createDate.getTime() - new Date().getTime()) / 1000;\r\n                            setTimerSeconds(Math.floor(between))\r\n                            setTimerStart(true);\r\n                        }\r\n                    }\r\n                }\r\n                if (createdBlockCount === chainedBlockCount) {\r\n                    setAllowCreateBlock(true);\r\n                }\r\n                if (chainedBlockCount === json.session.blocks.length - 1) {\r\n                    setAllowCreateBlock(false);\r\n                    setGameOver(true);\r\n                    setTimerStart(false);\r\n                    setTimerSeconds(0);\r\n                }\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const getMinerCount = async () => {\r\n        try {\r\n            const miner_count_result = await axios(`${EXPRESS_SERVER_URL}/game1/session/${sessionID}/miners/count`, { method: 'GET' });\r\n            const miner_count = await miner_count_result.data;\r\n\r\n            if (miner_count.status === 0) {\r\n                setMinerCount(miner_count.count);\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getBlocks();\r\n        getMinerCount();\r\n        const game1_block_end_listener = (message) => {\r\n            console.log(\"game1_block_end_listener\");\r\n            getBlocks();\r\n        };\r\n        const new_people_join_listener = (message) => {\r\n            console.log(\"new_people_join\");\r\n            getMinerCount();\r\n        };\r\n        socket.on(\"game1_block_end\", game1_block_end_listener);\r\n        socket.on(\"new_people_join\", new_people_join_listener);\r\n        return () => {\r\n            socket.off(\"game1_block_end\", game1_block_end_listener);\r\n            socket.off(\"new_people_join\", new_people_join_listener);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    // const handle_response = () => {\r\n\r\n    // }\r\n\r\n    return (\r\n        <main>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"nodehome\" />\r\n            <br />\r\n            <div className='NodeDashboard_titlebox'>\r\n                <div>Real-time dashboard</div>\r\n                <div className='NodeDashboard_titlebox_right'>\r\n                    <div className='NodeDashboard_titletimebox_top'><Timer /></div>\r\n                    <div className='NodeDashboard_titletimebox_down'>{minerCount} Miners</div>\r\n                </div>\r\n            </div>\r\n            <div className='NodeDashboard_mainTable' style={{\r\n                height: \"600px\", overflow: 'scroll'\r\n            }}>\r\n                <Tables json={response} sessionInfo={sessionInfo} />\r\n            </div>\r\n            <br />\r\n            <div className='NodeDashboard_submit_div'>\r\n                <input className=\"NodeDashboard_submit_btn\" type=\"button\" value=\"New Wine Transaction\" disabled={!allowCreateBlock} style={!gameOver ? !allowCreateBlock ? { backgroundColor: \"rgba(213, 213, 213, 0.8)\", color: \"rgba(152, 152, 152, 0.8)\" } : null : { display: \"none\" }} onClick={() => navigate('/dataupload')} />\r\n                <input className=\"NodeDashboard_submit_btn\" type=\"button\" value=\"All Blocks are created and mined ( Browse Miners Points )\" style={gameOver ? { display: \"inline\", backgroundColor: \"lightgreen\" } : { display: \"none\", backgroundColor: \"lightgreen\" }} onClick={() => { navigate('/point') }} />\r\n                <br />\r\n                {/* <input className=\"NodeDashboard_submit_btn\" type=\"button\" value=\"Logout\" style={gameOver ? { display: \"inline\", backgroundColor: \"lightgreen\" } : { display: \"none\", backgroundColor: \"lightgreen\" }} onClick={() => { navigate('/login') }} /> */}\r\n            </div>\r\n            <br />\r\n        </main>\r\n    )\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport './index.css'\r\n\r\nexport default function CustomerDemands(props) {\r\n    const { bid, cid, pdid, pdq, pdn, dd, selectedBlock, setHeight } = props;\r\n    // const {  setSelectedBlock } = props;\r\n\r\n    // let monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\",\r\n    //     \"May\", \"Jun\", \"Jul\", \"Aug\",\r\n    //     \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n    const date = new Date(dd.substring(0, 19) + \"-08:00\");\r\n    const dateStr = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`\r\n\r\n    return (\r\n        <main className='CustomerDemands_boxPadding'>\r\n            <div className='CustomerDemands_box'\r\n                style={selectedBlock === bid ?\r\n                    { backgroundColor: \"rgba(235,245,179,255)\" } : null} onClick={() => { /*setSelectedBlock(bid)*/ }}>\r\n                <div className='CustomerDemands_firstItem CustomerDemands_HashBox'>\r\n                    <div className='CustomerDemands_HashBox_left'>Customer ID</div>\r\n                    <div className='CustomerDemands_HashBox_right'>: {cid}</div>\r\n                </div>\r\n                <div className='CustomerDemands_HashBox'>\r\n                    <div className='CustomerDemands_HashBox_left'>Product ID</div>\r\n                    <div className='CustomerDemands_HashBox_right'>: {pdid}</div>\r\n                </div>\r\n                <div className='CustomerDemands_HashBox'>\r\n                    <div className='CustomerDemands_HashBox_left'>Product Quantitly</div>\r\n                    <div className='CustomerDemands_HashBox_right'>: {pdq}</div>\r\n                </div>\r\n                <div className='CustomerDemands_HashBox'>\r\n                    <div className='CustomerDemands_HashBox_left'>Product Name</div>\r\n                    <div className='CustomerDemands_HashBox_right'>: {pdn}</div>\r\n                </div>\r\n                <div className='CustomerDemands_lastItem CustomerDemands_HashBox'>\r\n                    <div className='CustomerDemands_HashBox_left'>Delivery Date</div>\r\n                    <div className='CustomerDemands_HashBox_right'>: {dateStr}</div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n\r\n}\r\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { Form, } from 'react-bootstrap';\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport CustomerDemands from '../../comonents/CustomerDemands';\r\nimport './index.css'\r\nimport { Context } from '../../context/Context'\r\nimport axios from '../../axios'\r\nimport ErrorModal from '../../comonents/ErrorModal';\r\nimport { EXPRESS_SERVER_URL, MIN_MINER_COUNT } from \"../../config\";\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function NodeUploadPage() {\r\n    const { sessionID, socket } = useContext(Context);\r\n    const [showErrorModal, setShowErrorModal] = useState(false);\r\n    const [blocks, setBlocks] = useState(null);\r\n    const [selectedBlock, setSelectedBlock] = useState(null);\r\n    const [inputedPrivateID, setInputedPrivateID] = useState(\"\");\r\n    const [errorMSG, setErrorMSG] = useState('');\r\n    const container = useRef(null)\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        getBlocks();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        container.current.scrollTop = (selectedBlock-1)*140\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedBlock])\r\n\r\n    const getBlocks = async () => {\r\n        try {\r\n            const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/sid/${sessionID}`, { method: 'GET' })\r\n            const json = await result.data;\r\n            if (json.status === 0) {\r\n                setBlocks(json.session.blocks);\r\n                for (var i = 1; i < json.session.blocks.length; i++) {\r\n                    console.log(json.session.blocks[i]);\r\n                    if (json.session.blocks[i].cd === null) {\r\n                        setSelectedBlock(json.session.blocks[i].bid);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const publicBlock = async () => {\r\n        if (selectedBlock && inputedPrivateID) {\r\n            try {\r\n                const miner_count_result = await axios(`${EXPRESS_SERVER_URL}/game1/session/${sessionID}/miners/count`, { method: 'GET' });\r\n                const miner_count = await miner_count_result.data;\r\n                if (!miner_count || miner_count.status !== 0 || miner_count.count < MIN_MINER_COUNT) {\r\n                    console.log(\"Not enough miners (at least \" + MIN_MINER_COUNT + \" miners) to start the game or other error occurs\");\r\n                    showErrorModelFunction(\"Not enough miners (at least \" + MIN_MINER_COUNT + \" miners) to start the game or other error occurs\");\r\n                    return;\r\n                }\r\n                const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/${sessionID}/blocks`, {\r\n                    method: 'POST',\r\n                    data: { bid: selectedBlock, pid: inputedPrivateID }\r\n                })\r\n                const json = await result.data;\r\n                if (json.status === 0) {\r\n                    navigate('/nodedashboard');\r\n                    socket.emit(\"teacher_update_game1_block\", sessionID);\r\n                } else {\r\n                    console.log(json.err);\r\n                    if(json.err === \"Your Private ID is incorrect\"){\r\n                        showErrorModelFunction(\"Your Private ID is incorrect!\")\r\n                    }else{\r\n                        showErrorModelFunction(json.err)\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n                showErrorModelFunction('Error: '+err.message)\r\n            }\r\n        } else {\r\n            showErrorModelFunction(\"Please select a block and enter your private ID!\")\r\n        }\r\n    }\r\n\r\n    function showErrorModelFunction(msg) {\r\n        setErrorMSG(msg);\r\n        setShowErrorModal(true);\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"nodedashboard\" />\r\n            <br />\r\n            <div className='NodeUploadPage_topic'>Select One Customer Demand</div>\r\n            <br />\r\n            <div className='NodeUploadPage_DemandList' ref={container}>\r\n                {\r\n                    blocks ? blocks.map(block => {\r\n                        return block.bid !== 0 ? <CustomerDemands key={block.bid} {...block} selectedBlock={selectedBlock} setSelectedBlock={setSelectedBlock} container={container} /> : null;\r\n                    }) : null\r\n                }\r\n            </div>\r\n            <br />\r\n            <Form className=\"NodeUploadPage_Form\">\r\n                <div className=\"form-floating\">\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Input Your Private ID for Confirmation</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={e => setInputedPrivateID(e.target.value)} />\r\n                    </Form.Group>\r\n                </div>\r\n            </Form>\r\n            <div className='NodeUploadPage_submit_div'>\r\n                <input className=\"NodeUploadPage_submit_btn\" type=\"button\" value=\"Publish\" onClick={publicBlock} />\r\n            </div>\r\n            <br />\r\n\r\n            <ErrorModal showErrorModal={showErrorModal} setShowErrorModal={setShowErrorModal} errorTitleMSG='Input Error' errorMSG={errorMSG} />\r\n        </main>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport './index.css'\r\nimport { Context } from '../../context/Context'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function BlockDataPage() {\r\n\r\n    const { blockDetail, sessionInfo } = useContext(Context);\r\n    const { bid, cid, pdid, pdq, pdn, dd } = blockDetail;\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    let monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\",\r\n        \"May\", \"Jun\", \"Jul\", \"Aug\",\r\n        \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n    var date\r\n    var dateStr\r\n\r\n    if (dd) {\r\n        date = new Date(dd.substring(0, 19) + \"-08:00\");\r\n        dateStr = `${date.getDate()} ${monthNames[date.getMonth()]} ${date.getFullYear()}`\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"\" />\r\n            <br />\r\n            <div className='BlockDataPage_topic'>Detail of the Block Data</div>\r\n            <br />\r\n            <div className='BlockDataPage_numOfBlock'>Block Index: {bid}</div>\r\n            <br />\r\n            <div className='BlockDataPage_Demand_div'>\r\n                <div className='BlockDataPage_Demand'>\r\n                    <div className='BlockDataPage_Demand_topic'>Data 1</div>\r\n                    <div className='BlockDataPage_HashBox'>\r\n                        <div className='BlockDataPage_HashBox_left'>Public ID</div>\r\n                        <div className='BlockDataPage_HashBox_right'>: {sessionInfo.tid}</div>\r\n                    </div>\r\n                    <div className='BlockDataPage_HashBox'>\r\n                        <div className='BlockDataPage_HashBox_left'>Customer ID</div>\r\n                        <div className='BlockDataPage_HashBox_right'>: {cid}</div>\r\n                    </div>\r\n                    <div className='BlockDataPage_HashBox'>\r\n                        <div className='BlockDataPage_HashBox_left'>Product ID</div>\r\n                        <div className='BlockDataPage_HashBox_right'>: {pdid}</div>\r\n                    </div>\r\n                    <div className='BlockDataPage_HashBox'>\r\n                        <div className='BlockDataPage_HashBox_left'>Product Quantity</div>\r\n                        <div className='BlockDataPage_HashBox_right'>: {pdq}</div>\r\n                    </div>\r\n                    <div className='BlockDataPage_HashBox'>\r\n                        <div className='BlockDataPage_HashBox_left'>Product Name</div>\r\n                        <div className='BlockDataPage_HashBox_right'>: {pdn}</div>\r\n                    </div>\r\n                    <div className='BlockDataPage_Demand_lastItem BlockDataPage_HashBox'>\r\n                        <div className='BlockDataPage_HashBox_left'>Delivery Date</div>\r\n                        <div className='BlockDataPage_HashBox_right'>: {dateStr ? dateStr : null}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='BlockDataPage_submit_div'>\r\n                <input className=\"BlockDataPage_submit_btn\" type=\"button\" value=\"Back\" onClick={() => navigate(-1)} />\r\n            </div>\r\n            <br />\r\n        </main>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport './index.css'\r\nimport { EXPRESS_SERVER_URL } from \"../../config\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Context } from '../../context/Context'\r\nimport axios from '../../axios'\r\n\r\nexport default function ChainedBlockDetailPage() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { blockDetail, sessionID } = useContext(Context);\r\n\r\n    const [block, setBlock] = useState(null);\r\n\r\n    const getBlockCorrectHash = async () => {\r\n        const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/sid/${sessionID}`, { method: 'GET' })\r\n        const json = await result.data\r\n        if (json.status === 0) {\r\n            setBlock(json.session.blocks[blockDetail.bid]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBlockCorrectHash();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <main>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"\" />\r\n            <br /><br />\r\n            <div className='ChainedBlockDetailPage_main'>\r\n                <div>Detail of the Chained Block</div><br />\r\n                <div className='ChainedBlockDetailPage_HashBox'>\r\n                    <div className='ChainedBlockDetailPage_HashBox_left'>Block Index</div>\r\n                    <div className='ChainedBlockDetailPage_HashBox_right'>: {block ? block.bid : null}</div>\r\n                </div>\r\n                <br />\r\n                <div className='ChainedBlockDetailPage_HashBox'>\r\n                    <div className='ChainedBlockDetailPage_HashBox_left'>Hash Value</div>\r\n                    <div className='ChainedBlockDetailPage_HashBox_right'>: {block ? block.hash : null}</div>\r\n                </div>\r\n                <br />\r\n                <div className='ChainedBlockDetailPage_HashBox'>\r\n                    <div className='ChainedBlockDetailPage_HashBox_left'>Nonce Value</div>\r\n                    <div className='ChainedBlockDetailPage_HashBox_right'>: {block ? block.nonce : null}</div>\r\n                </div>\r\n                <br />\r\n            </div>\r\n            <div className='ChainedBlockDetailPage_submit_div'>\r\n                <input className=\"ChainedBlockDetailPage_submit_btn\" type=\"button\" value=\"Back\" onClick={() => navigate(-1)} />\r\n            </div>\r\n            <br />\r\n        </main>\r\n    )\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport Tables from '../../comonents/Table/index';\r\nimport Timer from '../../comonents/Timer';\r\nimport './index.css'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Context } from '../../context/Context'\r\nimport { EXPRESS_SERVER_URL } from \"../../config\";\r\nimport axios from '../../axios'\r\n\r\nexport default function MinerDashboardPage() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { gameOver, setGameOver, sessionID, socket, sessionInfo, setSessionInfo, setTimerSeconds, setTimerStart, setBlockDetail } = useContext(Context);\r\n    const [response, setResponse] = useState([])\r\n\r\n    const getBlocks = async () => {\r\n        try {\r\n\r\n            setBlockDetail({});\r\n\r\n            const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/sid/${sessionID}`, { method: 'GET' })\r\n            const json = await result.data\r\n\r\n            if (json.status === 0) {\r\n                setGameOver(false);\r\n                console.log(\"get blocks\");\r\n                setResponse({ table_type: 'table_col_4_button', head: [\"Block Index\", \"Data\", \"Timestamp\", \"Status\"], body: json.session.blocks })\r\n                setSessionInfo(json.session.info)\r\n                // setTimerSeconds(json.session.info.tfbc * 60)\r\n                setTimerStart(false);\r\n                setTimerSeconds(0);\r\n                var chainedBlockCount = 0;\r\n                for (var i = 0; i < json.session.blocks.length; i++) {\r\n                    if (json.session.blocks[i].cd !== null) {\r\n                        if (json.session.blocks[i].isChained === 1 || json.session.blocks[i].isChained === 2) {\r\n                            chainedBlockCount++;\r\n                        } else {\r\n                            const createDate = new Date(json.session.blocks[i].cd);\r\n                            createDate.setSeconds(createDate.getSeconds() + json.session.info.tfbc * 60);\r\n                            var between = (createDate.getTime() - new Date().getTime()) / 1000;\r\n                            setTimerSeconds(Math.floor(between))\r\n                            setTimerStart(true);\r\n                        }\r\n                    }\r\n                }\r\n                if (chainedBlockCount === json.session.blocks.length - 1) {\r\n                    setGameOver(true);\r\n                    setTimerStart(false);\r\n                    setTimerSeconds(0);\r\n                }\r\n            } else {\r\n                console.log(json.err);\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getBlocks();\r\n        const game1_block_update_listener = (message) => {\r\n            console.log(\"game1_block_update_listener\");\r\n            getBlocks();\r\n        };\r\n        const game1_block_end_listener = (message) => {\r\n            console.log(\"game1_block_end\");\r\n            navigate('/hashboardwaiting');\r\n        };\r\n        const teacher_force_chained_listener = (message) => {\r\n            console.log(\"teacher_force_chained\");\r\n            navigate('/hashboardwaiting');\r\n        };\r\n        socket.on(\"game1_block_end\", game1_block_end_listener);\r\n        socket.on(\"game1_block_force_chained\", teacher_force_chained_listener);\r\n        socket.on(\"game1_block_update\", game1_block_update_listener);\r\n        return () => {\r\n            socket.off(\"game1_block_end\", game1_block_end_listener);\r\n            socket.off(\"game1_block_force_chained\", teacher_force_chained_listener);\r\n            socket.off(\"game1_block_update\", game1_block_update_listener);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <main>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"minerhome\" />\r\n            <br />\r\n            <div className='MinerDashboard_titlebox'>\r\n                <div className='MinerDashboard_titlebox_topic'>Real-time dashboard</div>\r\n                <div className='MinerDashboard_titletimebox'><Timer /></div>\r\n            </div>\r\n            <br />\r\n            <div className='MinerDashboardPage_mainTable' style={{\r\n                height: \"600px\", overflow: 'scroll'\r\n            }}>\r\n                <Tables json={response} />\r\n            </div>\r\n            <br />\r\n            <input type=\"button\" value=\"All Blocks are created and mined ( Browse Miners Points )\" style={gameOver ? { width: \"100%\", display: \"inline\", backgroundColor: \"lightgreen\" } : { display: \"none\", backgroundColor: \"lightgreen\" }} onClick={() => { navigate('/point') }} />\r\n            <br />\r\n            {/* <input type=\"button\" value=\"Logout\" style={gameOver ? { width: \"100%\", display: \"inline\", backgroundColor: \"lightgreen\" } : { display: \"none\", backgroundColor: \"lightgreen\" }} onClick={() => { navigate('/login') }} /> */}\r\n            <br />\r\n        </main>\r\n    )\r\n}","import { React, useState } from 'react'\r\nimport './index.css'\r\n\r\nexport default function BlockItem(props) {\r\n    const { background, setBlockHashs, item } = props\r\n\r\n    let monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\",\r\n        \"May\", \"Jun\", \"Jul\", \"Aug\",\r\n        \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n    var date\r\n    var dateStr\r\n\r\n    if (item.dd) {\r\n        date = new Date(item.dd.substring(0, 19) + \"-08:00\");\r\n        dateStr = `${date.getDate()} ${monthNames[date.getMonth()]} ${date.getFullYear()}`\r\n    }\r\n\r\n    const updateHash = (e) => {\r\n        setBlockHashs(pre =>\r\n            pre.map((hash, key) => {\r\n                if (key !== item.bid) {\r\n                    return hash;\r\n                } else {\r\n                    return parseInt(e.target.value);\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <table className='BlockItem_box'>\r\n                <tbody>\r\n                    <tr>\r\n\r\n                        <td className='BlockItem_box_td1'>\r\n                            <div href=\"\" className='BlockItem_box_left' style={{ backgroundColor: background }}>\r\n                                <div className='BlockItem_box_topic_left'>Data </div>\r\n                                <div className='BlockItem_firstItem'>Customer ID: {item.cid}</div>\r\n                                <div>Product ID: {item.pdid}</div>\r\n                                <div>Product Quantity: {item.pdq}</div>\r\n                                <div>Product Name: {item.pdn}</div>\r\n                                <div className='BlockItem_lastItem'>Delivery Date: {dateStr}</div>\r\n                            </div>\r\n                        </td>\r\n\r\n\r\n                        <td className='BlockItem_box_td2'></td>\r\n\r\n\r\n                        <td className='BlockItem_box_td3'>\r\n                            <div href=\"\" className='BlockItem_box_right' style={{ backgroundColor: background }}>\r\n                                <div className='BlockItem_box_topic_right'>Data  {item.bid}</div>\r\n                                <div className='BlockItem_HashBox'>\r\n                                    <div className='BlockItem_HashBox_left'>Pre. Hash</div>\r\n                                    <div className='BlockItem_HashBox_right'>: {item.ph}</div>\r\n                                </div>\r\n                                <div className='BlockItem_HashBox'>\r\n                                    <div className='BlockItem_HashBox_left'>Hash</div>\r\n                                    <div className='BlockItem_HashBox_right BlockItem_HashBox'>\r\n                                        <div className='BlockItem_input_left'>:</div>\r\n                                        <input pattern=\"[0-9]*\" className='BlockItem_input_right' onChange={updateHash} defaultValue={item.hash} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className='BlockItem_HashBox'>\r\n                                    <div className='BlockItem_HashBox_left'>Nonce</div>\r\n                                    <div className='BlockItem_HashBox_right'>: {item.nonce}</div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </td>\r\n\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n","import { React, useState, useContext, useEffect } from 'react';\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport BlockItem from '../../comonents/BlockItem'\r\nimport './index.css'\r\nimport { Context } from '../../context/Context';\r\nimport { EXPRESS_SERVER_URL } from '../../config';\r\nimport axios from '../../axios'\r\nimport { useNavigate } from 'react-router-dom';\r\nexport default function AllBlockPage() {\r\n    const navigate = useNavigate();\r\n    const { sessionID, setSessionInfo } = useContext(Context);\r\n    const [blocks, setBlocks] = useState(\"\");\r\n    // const [background, setBackGround] = useState('rgb(158, 241, 90)')   rgb(158, 241, 90)\r\n    const [blockHashs, setBlockHashs] = useState([]);\r\n    const [wrongIndex, setWrongIndex] = useState(99);\r\n\r\n    const getBlock = async () => {\r\n        try {\r\n            const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/sid/${sessionID}`, { method: 'GET' })\r\n            const json = await result.data\r\n            if (json.status === 0) {\r\n                setBlocks(json.session.blocks)\r\n            }\r\n            json.session.blocks.forEach(block => {\r\n                if (block.bid !== 0) {\r\n                    blockHashs[block.bid] = block.hash;\r\n                }\r\n            })\r\n\r\n            setSessionInfo(json.session.info)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        var haveWrong = false;\r\n        for (var i = 1; i < blocks.length; i++) {\r\n            var block = blocks[i];\r\n            if (blockHashs[block.bid] !== block.hash) {\r\n                setWrongIndex(i);\r\n                haveWrong = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!haveWrong) setWrongIndex(99);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [blockHashs])\r\n\r\n    useEffect(() => {\r\n        getBlock();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <main>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"point\" />\r\n            <br />\r\n            <div className='AllBlockPage_topic'>Select One Customer Demand</div>\r\n            <br />\r\n            <div className='AllBlockPage_blocktopic'>Block Index:</div>\r\n            <br />\r\n            <div className='AllBlockPage_BlockList'>\r\n                {/* {ListBlock()} */}\r\n                {blocks ? blocks.map(item => {\r\n                    if (item.bid !== 0) {\r\n                        if (item.bid >= wrongIndex) {\r\n                            return (\r\n                                <BlockItem setBlockHashs={setBlockHashs} background={\"rgb(256,180,172)\"} key={item.bid} item={item} />\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <BlockItem setBlockHashs={setBlockHashs} background={\"rgb(158, 241, 90)\"} key={item.bid} item={item} />\r\n                            )\r\n                        }\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                }) : null}\r\n            </div>\r\n            <br />\r\n            <div className='AllBlockPage_back_div'>\r\n                <input className=\"AllBlockPage_back_btn\" type=\"button\" value=\"Back\" onClick={() => navigate(-1)} />\r\n            </div>\r\n            <br />\r\n        </main>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Button, Modal, } from 'react-bootstrap';\r\nimport './index.css'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function PointsMessageModal(props) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    var { showPointsMessageModalModal, sequencNo, point } = props;\r\n\r\n    if (point <= 0) {\r\n        return (\r\n            <Modal\r\n                show={showPointsMessageModalModal}\r\n                onHide={() => { }}\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                centered>\r\n\r\n                <Modal.Body>\r\n                    <div className=\"modal_body text-center\">\r\n                        <b>Thank You for Your Mining Effort!</b>\r\n                        <p />\r\n                        <p> The block has been verified and\r\n                            <br />added in the blockchain</p>\r\n                        <hr />\r\n\r\n                        <h4> <p className=\"modal_point\" > + 0 Point </p></h4>\r\n                    </div>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer  >\r\n                    <div className=\"setShowLoginModal_div_back\">\r\n                        <input className='btn_div_back text-center' type=\"button\" onClick={() => { navigate('/minerdashboard') }} value=\"Back\" />\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    } else {\r\n        return (\r\n            <Modal\r\n                show={showPointsMessageModalModal}\r\n                onHide={() => { }}\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"modal_body text-center\">\r\n                        <b>Congratulation!</b>\r\n                        <p />\r\n                        <p> Your Calculated hash value is same\r\n                            <br />\r\n                            as the value with over 50% votes.\r\n                            <br />\r\n                            Your sequence no.:{sequencNo}\r\n                        </p>\r\n                        <hr />\r\n\r\n                        <h4> <p className=\"modal_point\" > + {point} Point </p></h4>\r\n                    </div>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"setShowLoginModal_div_back\">\r\n                        <input className='btn_div_back text-center' type=\"button\" onClick={() => { navigate('/minerdashboard') }} value=\"Back\" />\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal>)\r\n    }\r\n\r\n}\r\n\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport Tables from '../../comonents/Table/index';\r\nimport './index.css'\r\nimport { Context } from '../../context/Context'\r\nimport { EXPRESS_SERVER_URL } from \"../../config\";\r\nimport axios from '../../axios'\r\nimport PointsMessageModal from '../../comonents/PointsMessageModal';\r\n\r\nexport default function HashBoardWaitingPage() {\r\n\r\n    const { sessionID, socket, sessionInfo, setSessionInfo, blockDetail } = useContext(Context);\r\n    const [response, setResponse] = useState([]);\r\n    const [showPointsMessageModalModal, setShowPointsMessageModalModal] = useState(false);\r\n    const [sequencNo, setSequencNo] = useState(0);\r\n    const [point, setPoint] = useState(0);\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const getBlocks = async () => {\r\n        try {\r\n\r\n            if (!blockDetail.bid) {\r\n                showPointModal();\r\n                return;\r\n            }\r\n\r\n            const b_result = await axios(`${EXPRESS_SERVER_URL}/game1/session/${sessionID}/block/${blockDetail.bid}`, { method: 'GET' })\r\n            const b_json = await b_result.data\r\n\r\n            if (b_json.status === 0 && b_json.block.isChained !== 0) {\r\n                showPointModal();\r\n                return;\r\n            }\r\n\r\n            const m_result = await axios(`${EXPRESS_SERVER_URL}/game1/session/${sessionID}/blocks/${blockDetail.bid}/miners/all`, { method: 'GET' })\r\n            const m_json = await m_result.data\r\n\r\n            if (m_json.status === 0) {\r\n                setTotal(m_json.miners.length);\r\n            }\r\n\r\n            const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/${sessionID}/miners/blocks/${blockDetail.bid}`, { method: 'GET' })\r\n            const json = await result.data\r\n\r\n            if (json.status === 0) {\r\n                setResponse({ table_type: \"table_barchat\", title: \"Hash-board\", head: [\"Timestamp\", \"Public ID\", \"Nonce\", \"Hash Value\", \"Vote\"], body: json.blocks })\r\n                setSessionInfo(json.session.info)\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const showPointModal = async () => {\r\n        try {\r\n\r\n            if (!blockDetail.bid) {\r\n                setSequencNo(0);\r\n                setPoint(0);\r\n                setShowPointsMessageModalModal(true);\r\n                return;\r\n            }\r\n\r\n            const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/miners/blocks/${blockDetail.bid}`, { method: 'GET' })\r\n            const json = await result.data\r\n\r\n            if (json.status === 0 && json.block) {\r\n                setSequencNo(json.block.seq);\r\n                setPoint(json.block.points);\r\n            }\r\n            setShowPointsMessageModalModal(true);\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBlocks();\r\n        const game1_block_end_listener = (message) => {\r\n            console.log(\"game1_block_end\");\r\n            showPointModal();\r\n        };\r\n        const teacher_force_chained_listener = (message) => {\r\n            console.log(\"teacher_force_chained\");\r\n            showPointModal();\r\n        };\r\n        const game1_votes_update_listener = (message) => {\r\n            console.log(\"game1_votes_update\");\r\n            getBlocks();\r\n        };\r\n        socket.on(\"game1_block_end\", game1_block_end_listener);\r\n        socket.on(\"game1_votes_update\", game1_votes_update_listener);\r\n        socket.on(\"game1_block_force_chained\", teacher_force_chained_listener);\r\n        return () => {\r\n            socket.off(\"game1_block_end\", game1_block_end_listener);\r\n            socket.off(\"game1_votes_update\", game1_votes_update_listener);\r\n            socket.off(\"game1_block_force_chained\", teacher_force_chained_listener);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <main>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"\" />\r\n            <br />\r\n            <div className='HashBoardWaitingPage_title'>Hash-board</div>\r\n            <br />\r\n            <div className='HashBoardWaitingPage_mainTable'>\r\n                <Tables json={response} total={total} />\r\n            </div>\r\n            <div className='HashBoardWaitingPage_waiting_div'>\r\n                <input className=\"HashBoardWaitingPage_waiting_btn\" type=\"button\" value=\"Waiting for the result ...\" />\r\n            </div>\r\n            <br />\r\n            <PointsMessageModal showPointsMessageModalModal={showPointsMessageModalModal} sequencNo={sequencNo} point={point} />\r\n        </main>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport Tables from '../../comonents/Table/index';\r\nimport './index.css'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { EXPRESS_SERVER_URL } from \"../../config\";\r\nimport axios from '../../axios'\r\nimport { Context } from '../../context/Context'\r\n\r\n\r\n\r\nexport default function VerificationPage() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { sessionID, socket, blockDetail } = useContext(Context);\r\n    const [response, setResponse] = useState([])\r\n    const [total, setTotal] = useState(0)\r\n\r\n    const getBlocks = async () => {\r\n        try {\r\n\r\n            const m_result = await axios(`${EXPRESS_SERVER_URL}/game1/session/${sessionID}/blocks/${blockDetail.bid}/miners/all`, { method: 'GET' })\r\n            const m_json = await m_result.data\r\n\r\n            if (m_json.status === 0) {\r\n                setTotal(m_json.miners.length);\r\n            }\r\n\r\n            const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/${sessionID}/miners/blocks/${blockDetail.bid}`, { method: 'GET' })\r\n            const json = await result.data\r\n\r\n            if (json.status === 0) {\r\n                setResponse(json.blocks)\r\n            } else {\r\n                console.log(json.err);\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    const forceChained = async () => {\r\n        try {\r\n\r\n            const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/miners/blocks/force`, {\r\n                method: 'PUT',\r\n                data: { sid: sessionID, bid: blockDetail.bid }\r\n            })\r\n            const json = await result.data\r\n\r\n            if (json.status === 0) {\r\n                socket.emit(\"teacher_force_chained\", sessionID);\r\n                navigate(-1);\r\n            } else {\r\n                console.log(json.err);\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const json = { table_type: 'table_col_5_button', head: [\"Timestamp\", \"Public ID\", \"Nonce\", \"Hash Value\", \"Verification\"], body: response }\r\n\r\n    useEffect(() => {\r\n        getBlocks();\r\n        const game1_votes_update_listener = (message) => {\r\n            console.log(\"game1_votes_update_listener\");\r\n            getBlocks();\r\n        };\r\n        socket.on(\"game1_votes_update\", game1_votes_update_listener);\r\n        return () => socket.off(\"game1_votes_update\", game1_votes_update_listener);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <main>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"\" />\r\n            <br />\r\n            <div className='VerificationPage_topicBox'>\r\n                <div>Verification:</div>\r\n                <div>The Hash Value is divided by 3 and 7.</div>\r\n                <div>(condition)</div>\r\n            </div>\r\n            <br />\r\n            <div className='VerificationPage_titlebox'>\r\n                <div className='VerificationPage_title_font'>Hash-board</div>\r\n                <div>\r\n                    <input type=\"button\" value=\"Force Chained\" className='VerificationPage_title_btn' onClick={forceChained} />\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <div className='VerificationPage_mainTable' style={{\r\n                height: \"600px\", overflow: 'scroll'\r\n            }}>\r\n                <Tables json={json} total={total} />\r\n            </div>\r\n            <br />\r\n            <div className='VerificationPage_back_div'>\r\n                <input className=\"VerificationPage_back_btn\" type=\"button\" value=\"Back\" onClick={() => navigate(-1)} />\r\n            </div>\r\n            <br />\r\n        </main>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar } from 'recharts';\r\n\r\nexport default function ChartBarModal(props) {\r\n\r\n    const miners = props.data\r\n\r\n    const [datas, setDatas] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (miners) {\r\n            setDatas([]);\r\n            var count = 0;\r\n            miners.forEach(miner => {\r\n                if (count < 5) {\r\n                    setDatas(datas => [...datas, { name: miner.pbid, point: miner.points }]);\r\n                    count++;\r\n                }\r\n            })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [miners])\r\n\r\n    return (\r\n        <div>\r\n            <ResponsiveContainer width=\"100%\" aspect={2.5}>\r\n                <BarChart\r\n                    width={500}\r\n                    height={300}\r\n                    data={datas}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 0,\r\n                        bottom: 5,\r\n                    }}\r\n                    options={{\r\n                        YAxis: [{\r\n                            ticks: {\r\n                                max: 20\r\n                            }\r\n                        }]\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Bar dataKey=\"point\" fill=\"#58BED9\" />\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport TitleBar from '../../comonents/TitleBar';\r\n// import Tables from '../../comonents/Table/index';\r\nimport ChartBarModal from '../../comonents/ChartBarModal'\r\nimport './index.css'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Context } from '../../context/Context'\r\nimport { EXPRESS_SERVER_URL } from \"../../config\";\r\nimport axios from '../../axios'\r\nimport Tables from '../../comonents/Table/index';\r\nimport Cookies from 'js-cookie'\r\n\r\nexport default function PointPage() {\r\n    // const json = { title: \"Hash-board\", head: [\"Timestamp\", \"Public ID\", \"Nonce\", \"Hash Value\", \"Verification\"], body: [{ x: 1, x2: 2, x3: 3, x4: 2 }, { x: 1, x2: 2, x3: 3, x4: 3 }, { x: 1, x2: 2, x3: 3, x4: 3 }, { x: 1, x2: 2, x3: 3, x4: 3 }, { x: 1, x2: 2, x3: 3, x4: 3 }] }\r\n    const navigate = useNavigate();\r\n\r\n    const { gameOver, sessionID, socket, sessionInfo, setSessionInfo } = useContext(Context);\r\n\r\n    const [miners, setMiners] = useState([]);\r\n    const [response, setResponse] = useState([]);\r\n    const [useLastPage, setUseLastPage] = useState(\"A\");\r\n\r\n    const getMiners = async () => {\r\n\r\n        const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/${sessionID}/miners/rank`, { method: 'GET' })\r\n        const json = await result.data\r\n\r\n        if (json.status === 0) {\r\n            setMiners(json.miners);\r\n            setResponse({ table_type: \"table_col_3\", head: [\"Public ID\", \"Points\", \"Rank\"], body: json.miners });\r\n        } else {\r\n            console.log(json.err);\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMiners();\r\n        if (Cookies.get('userType') == \"Teacher\") {\r\n            setUseLastPage(\"nodehome\")\r\n        } else {\r\n            setUseLastPage(\"minerhome\")\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <main>\r\n            <TitleBar backLastPage=\"\" lastPageName={useLastPage} />\r\n            <br />\r\n            <ChartBarModal data={miners} />\r\n            <br />\r\n            <div className='PointPage_RankTable_div'>\r\n                <Tables json={response} />\r\n            </div>\r\n            <br />\r\n            <div className='PointPage_Export_div'>\r\n                <input className=\"PointPage_Export_btn\" type=\"button\" value=\"Export Whole Blockchain\" onClick={() => navigate('/allblock')} />\r\n            </div>\r\n            <br />\r\n            <div className='PointPage_Export_div'>\r\n                {/* <input className=\"PointPage_Export_btn\" type=\"button\" value=\"Logout\" /> */}\r\n                <input className=\"PointPage_Export_btn\" type=\"button\" value=\"Logout\" style={gameOver ? { display: \"inline\", backgroundColor: \"lightgreen\" } : { display: \"none\", backgroundColor: \"lightgreen\" }} onClick={() => { navigate('/login') }} />\r\n            </div>\r\n            <br />\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\nimport { Button, Image } from 'react-bootstrap'\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function HelpPage() {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"\" />\r\n            <div className='text-center'>\r\n                <p className='h3' style={{ color: '#801E9E', paddingTop: '1rem', paddingBottom: '1rem' }}>How to calculation Hash?</p>\r\n            </div>\r\n\r\n            <div className='hash_border'>\r\n\r\n                <div className='hash_border_text'>\r\n                    <p><b>The rule of hash Calculation: </b></p>\r\n\r\n                    <p>\r\n                        Hash = 10*(A + B + C + D + E) + Prev. Hash (last three digits) + Nonce<br /><br />\r\n                        Nonce = a value between 1 and 21 (to be adjusted to produce a hash that can be completely divided by 3 AND 7)<br />\r\n                        <br />\r\n                        Each block has five data fields (Customer ID, Product ID, Product Quantity, Product Name and Delivery Date).<br />\r\n                        A = Value of the first letter of Customer ID<br />\r\n                        B = Value of the first letter of Product ID<br />\r\n                        C = Value of the Product Quantity<br />\r\n                        D = Value of the first letter of Product Name<br />\r\n                        E = Value of the first two digits (i.e. day) of Delivery Date<br />\r\n                    </p>\r\n                    <Image src=\"/calculationinfo.png\" fluid />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className='hc_start'>\r\n                <Button variant=\"none\" style={{ width: '100%', color: 'white' }} onClick={() => navigate(-1)}>Back</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import React, { useContext } from 'react'\r\nimport TitleBar from '../../comonents/TitleBar';\r\nimport BtnShow from '../../comonents/Buttons';\r\nimport './index.css'\r\n// import axios from '../../axios'\r\n// import Cookies from 'js-cookie'\r\nimport { Context } from '../../context/Context';\r\n// import { EXPRESS_SERVER_URL } from \"../../config\"\r\nimport copy from 'copy-to-clipboard';\r\nimport Cookies from 'js-cookie'\r\n\r\nexport default function MinerHome() {\r\n    const dashboard = { w: '100%', h: 'auto', c: 'gainsboro', r: '20px' }\r\n    const points = { w: '100%', h: 'auto', c: 'gainsboro', r: '20px' }\r\n    //href is link\r\n    // Context\r\n    const { userInfo, privateID } = useContext(Context);\r\n\r\n    return (\r\n        <div>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"\" />\r\n\r\n            <div className='minter_h_btns'>\r\n                <div className='col text-center minter_h_border'  >\r\n                    <table class=\"table  align-middle table-borderless\">\r\n\r\n                        <tbody>\r\n                            <tr className='text-center' >\r\n                                <td width='150px'>Passcode</td>\r\n\r\n                                <td width='150px' className='text-start' >:{Cookies.get('passcode')}</td>\r\n                                <td width='170px'  > <input className=\"PasscodeModal_btn_Copy\" type=\"button\" style={{ width: '4rem' }} value=\"Copy\" onClick={e => copy(Cookies.get('passcode'))} /></td>\r\n                            </tr>\r\n                            <tr className='text-center'>\r\n\r\n                                <td width='150px'>Your Public ID</td>\r\n                                <td width='150px' className='text-start'> :{userInfo}</td>\r\n                            </tr>\r\n                            <tr className='text-center'>\r\n                                <td width='150px'>Your Private ID</td>\r\n                                <td width='150px' className='text-start'>:{privateID}</td>\r\n                                <td width='170px'  ><input className=\"PasscodeModal_btn_Copy \" type=\"button\" style={{ width: '4rem' }} value=\"Copy\" onClick={e => copy(privateID)} /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className='col'>\r\n                    <BtnShow text=\"Dashboard\" link=\"/minerdashboard\" css={dashboard} />\r\n                </div>\r\n\r\n                <div className='col'>\r\n                    <BtnShow text=\"Points\" link=\"/point\" css={points} />\r\n                </div>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport TitleBar from '../../comonents/TitleBar'\r\nimport './index.css'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Context } from '../../context/Context'\r\nimport Timer from '../../comonents/Timer'\r\nimport axios from '../../axios'\r\nimport ErrorModal from '../../comonents/ErrorModal';\r\nimport { EXPRESS_SERVER_URL } from \"../../config\";\r\n\r\nexport default function CalculateHashPage() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { blockDetail, sessionInfo, sessionID, socket } = useContext(Context);\r\n    const { bid, cid, pdid, pdq, pdn, dd, ph } = blockDetail;\r\n\r\n    const [nonce, setNonce] = useState(null);\r\n    const [hash, setHash] = useState(null);\r\n    const [pvid, setPvid] = useState(null);\r\n\r\n    const [showErrorModal, setShowErrorModal] = useState(false);\r\n    const [errorMSG, setErrorMSG] = useState('');\r\n    const [showRejectModal, setShowRejectModal] = useState(false);\r\n\r\n    let monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\",\r\n        \"May\", \"Jun\", \"Jul\", \"Aug\",\r\n        \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n    var date\r\n    var dateStr\r\n\r\n    if (dd) {\r\n        date = new Date(dd.substring(0, 19) + \"-08:00\");\r\n        dateStr = `${date.getDate()} ${monthNames[date.getMonth()]} ${date.getFullYear()}`\r\n    }\r\n\r\n    const checkMinerCanMineThisBox = async () => {\r\n        try {\r\n            const check_result = await axios(`${EXPRESS_SERVER_URL}/game1/session/${sessionID}/blocks/${bid}/miners/check`, { method: 'GET' })\r\n            const check_json = await check_result.data\r\n            if (check_json.status === 0 && check_json.count === 0) {\r\n                setShowRejectModal(true);\r\n            } else if (check_json.status !== 0) {\r\n                showErrorModelFunction(check_json.err)\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            showErrorModelFunction('Error: ' + err.message)\r\n        }\r\n    }\r\n\r\n    const modalCallback = () => {\r\n        navigate(-1);\r\n    }\r\n\r\n    const submitHash = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (bid && nonce && hash && pvid) {\r\n                const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/miners/blocks`, {\r\n                    method: 'POST',\r\n                    data: { bid, nonce, hash, pvid }\r\n                })\r\n                const json = await result.data\r\n                if (json.status === 0) {\r\n                    const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/blocks/votes`, {\r\n                        method: 'PUT',\r\n                        data: { bid, sid: sessionID }\r\n                    })\r\n                    const json = await result.data\r\n                    if (json.status === 0) {\r\n                        socket.emit(\"update_game1_votes\", { sid: sessionID, bid: bid });\r\n                        navigate('/hashboardwaiting');\r\n                    } else {\r\n                        console.log(json.err);\r\n                    }\r\n                } else {\r\n                    console.log(json.err)\r\n                    if (json.err === \"Your Private ID is incorrect\") {\r\n                        showErrorModelFunction(\"Your Private ID is incorrect!\")\r\n                    } else {\r\n                        showErrorModelFunction(json.err)\r\n                    }\r\n                }\r\n            } else {\r\n                showErrorModelFunction(\"Please answer all 3 blanks!\")\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            showErrorModelFunction('Error: ' + err.message)\r\n        }\r\n    }\r\n\r\n    const checkIsMined = async () => {\r\n        try {\r\n            const result = await axios(`${EXPRESS_SERVER_URL}/game1/session/${sessionID}/miners/pbid/blocks/${bid}`, {\r\n                method: 'GET'\r\n            })\r\n            const json = await result.data\r\n            if (json.status === 0 && json.count) {\r\n                navigate('/hashboardwaiting');\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkMinerCanMineThisBox();\r\n        checkIsMined();\r\n        const game1_block_end_listener = (message) => {\r\n            console.log(\"game1_block_end\");\r\n            navigate('/hashboardwaiting');\r\n        };\r\n        const teacher_force_chained_listener = (message) => {\r\n            console.log(\"teacher_force_chained\");\r\n            navigate('/hashboardwaiting');\r\n        };\r\n        socket.on(\"game1_block_end\", game1_block_end_listener);\r\n        socket.on(\"game1_block_force_chained\", teacher_force_chained_listener);\r\n        return () => {\r\n            socket.off(\"game1_block_end\", game1_block_end_listener);\r\n            socket.off(\"game1_block_force_chained\", teacher_force_chained_listener);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    function showErrorModelFunction(msg) {\r\n        setErrorMSG(msg);\r\n        setShowErrorModal(true);\r\n    }\r\n\r\n    return (\r\n        <div className='row'>\r\n            <TitleBar backLastPage=\"\" lastPageName=\"minerdashboard\" />\r\n            <div className='col-4 btn_margin_help' style={{ paddingTop: '2%', paddingBottom: '2%', paddingLeft: '10%', paddingRight: '10%' }}>\r\n                <input type=\"button\" onClick={() => navigate('/help')} className=' text-center btn_help ' value=\"HELP?\" />\r\n            </div>\r\n            <div className=\"col-4\"></div>\r\n            <div className=' text-center col-4'>\r\n                <p className='time_border'>\r\n                    <Timer />\r\n                </p>\r\n\r\n            </div>\r\n\r\n            <div style={{ paddingLeft: '6%' }}>\r\n                <p>\r\n                    Calculation of the Hash Value<br />\r\n                    Block Index: {bid}<br />\r\n                    Public ID: {sessionInfo.tid}<br />\r\n\r\n                </p>\r\n            </div>\r\n\r\n            <div className='player_info' style={{ paddingLeft: '17%', paddingRight: '17%',width:'90%',marginLeft:\"5%\",marginRight:\"3%\" }}>\r\n\r\n<table class=\"table align-middle table-borderless\"  >\r\n\r\n    <tbody className='text-center' >\r\n        <tr >\r\n            <td> Customer ID</td>\r\n            <td className='text-start'>: {cid}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Product ID</td>\r\n            <td className='text-start'>: {pdid}</td>\r\n        </tr>\r\n        <tr>\r\n\r\n            <td>Product Quantity</td>\r\n            <td className='text-start'>: {pdq}</td>\r\n        </tr>\r\n        <tr  >\r\n            <td>Product Name</td>\r\n            <td className='text-start'>: {pdn}</td>\r\n        </tr>\r\n        <tr  >\r\n            <td>Delivery Date</td>\r\n            <td className='text-start'>: {dateStr}</td>\r\n        </tr>\r\n\r\n    </tbody>\r\n</table>\r\n\r\n\r\n</div>\r\n\r\n            <div className='phv_text'>\r\n                <p >Previous Hash Value (last 3 digits): {ph}</p>\r\n\r\n            </div>\r\n            <div className=\"bar_ch\">\r\n                Calculate the Nonce and Hash Value\r\n            </div>\r\n            <form className=\"btn_group_ch\" >\r\n                <div className=\"mb-4\">\r\n                    <label for=\"privateId\" className=\"form-label\">Input Your Private ID for Confirmation</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"privateId\" onChange={e => setPvid(e.target.value)} />\r\n\r\n                </div>\r\n                <div className=\"mb-4\">\r\n                    <label for=\"nonce\" className=\"form-label\">Nonce</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"nonce\" onChange={e => setNonce(e.target.value)} />\r\n                </div>\r\n                <div className=\"mb-4\">\r\n                    <label for=\"hashvalue\" className=\"form-label\" >Hash Value</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"hashvalue\" onChange={e => setHash(e.target.value)} />\r\n                </div>\r\n\r\n                <button className=\"btn\" onClick={submitHash} >Submit</button>\r\n            </form>\r\n            <ErrorModal showErrorModal={showErrorModal} setShowErrorModal={setShowErrorModal} errorTitleMSG='Input Error' errorMSG={errorMSG} />\r\n            {/* callback modal */}\r\n            <ErrorModal showErrorModal={showRejectModal} setShowErrorModal={modalCallback} errorTitleMSG='Hi newcomer' errorMSG=\"Please wait for the next block\" />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport LoginPage from './routes/LoginPage/index';\r\nimport RolePage from './routes/RolePage/index';\r\nimport HashCalculationPage from './routes/HashCalculationPage';\r\nimport ScenarioPage from './routes/ScenarioPage';\r\nimport GameSettingPage from './routes/GameSettingPage'\r\nimport NodeHomePage from './routes/NodeHomePage'\r\nimport NodeDashboardPage from './routes/NodeDashboardPage'\r\nimport DataUploadPage from './routes/DataUploadPage'\r\nimport BlockDataPage from './routes/BlockDataPage'\r\nimport ChainedBlockDetailPage from './routes/ChainedBlockDetailPage'\r\nimport MinerDashboardPage from './routes/MinerDashboardPage'\r\nimport AllBlockPage from './routes/AllBlockPage'\r\nimport HashBoardWaitingPage from './routes/HashBoardWaitingPage'\r\nimport VerificationPage from './routes/VerificationPage'\r\nimport PointPage from './routes/PointPage'\r\nimport HelpPage from './routes/HelpPage';\r\nimport MinerHome from './routes/MinerHomePage';\r\nimport CalculateHashPage from './routes/CalculateHashPage';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Routes onChange={() => { console.log(\"test\") }}>\r\n        <Route path=\"/\" element={<App />} >\r\n          <Route path=\"/login\" element={<LoginPage />} />\r\n          <Route path=\"/point\" element={<PointPage />} />\r\n          <Route path=\"/verification\" element={<VerificationPage />} />\r\n          <Route path=\"/hashboardwaiting\" element={<HashBoardWaitingPage />} />\r\n          <Route path=\"/allblock\" element={<AllBlockPage />} />\r\n          <Route path=\"/minerdashboard\" element={<MinerDashboardPage />} />\r\n          <Route path=\"/chainedblockdetail\" element={<ChainedBlockDetailPage />} />\r\n          <Route path=\"/blockdata\" element={<BlockDataPage />} />\r\n          <Route path=\"/dataupload\" element={<DataUploadPage />} />\r\n          <Route path=\"/gamesetting\" element={<GameSettingPage />} />\r\n          <Route path=\"/nodehome\" element={<NodeHomePage />} />\r\n          <Route path=\"/nodedashboard\" element={<NodeDashboardPage />} />\r\n          <Route path=\"/role\" element={<RolePage />} />\r\n          <Route path=\"/scenario\" element={<ScenarioPage />} />\r\n          <Route path=\"/hashcalculation\" element={<HashCalculationPage />} />\r\n          <Route path=\"/help\" element={<HelpPage />} />\r\n          <Route path=\"/minerhome\" element={<MinerHome />} />\r\n          <Route path=\"/calculatehash\" element={<CalculateHashPage />} />\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}